import{g as Ye,c as Me,a as Ae,r as X,j as Vs}from"./chunk-9a4f56c2.js";import{i as Pr}from"./chunk-24dec1b5.js";const Jt=e=>{const t=document.cookie.split(";");for(const r of t){const[s,o]=r.split("=").map(n=>String(n).trim());if(e===s)return o}},Ne=(e,t,r)=>{if(r){const s=Object.entries(r).map(([o,n])=>`${o}=${n}`).join("; ");document.cookie=`${e}=${t}; ${s}; domain=${r.domain??"moon-catcher.github.io"}; path=/; `}else document.cookie=`${e}=${t}; domain=moon-catcher.github.io; path=/; `},Za="正在校验登录状态...",ec="登录中...",tc="登录失败",rc="已登录",sc="未登录",oc="已取消",Yt="mooncathcer_authkey",pt="mooncathcer_authstate",Qt="mooncathcer_authcdoe",nc="access_denied";function Ks(e){const t="0123456789abcdefghijklmnopqrstuvwxyzABCDEFGHIJKLMNOPQRSTUVWXYZ";let r="";for(let s=e;s>0;--s)r+=t[Math.floor(Math.random()*t.length)];return r}function he(){return typeof navigator=="object"&&"userAgent"in navigator?navigator.userAgent:typeof process=="object"&&"version"in process?`Node.js/${process.version.substr(1)} (${process.platform}; ${process.arch})`:"<environment undetectable>"}const Js=Object.freeze(Object.defineProperty({__proto__:null,getUserAgent:he},Symbol.toStringTag,{value:"Module"}));var Qe={exports:{}},Ys=Rr;function Rr(e,t,r,s){if(typeof r!="function")throw new Error("method for before hook must be a function");return s||(s={}),Array.isArray(t)?t.reverse().reduce(function(o,n){return Rr.bind(null,e,n,o,s)},r)():Promise.resolve().then(function(){return e.registry[t]?e.registry[t].reduce(function(o,n){return n.hook.bind(null,o,s)},r)():r(s)})}var Qs=Xs;function Xs(e,t,r,s){var o=s;e.registry[r]||(e.registry[r]=[]),t==="before"&&(s=function(n,i){return Promise.resolve().then(o.bind(null,i)).then(n.bind(null,i))}),t==="after"&&(s=function(n,i){var c;return Promise.resolve().then(n.bind(null,i)).then(function(d){return c=d,o(c,i)}).then(function(){return c})}),t==="error"&&(s=function(n,i){return Promise.resolve().then(n.bind(null,i)).catch(function(c){return o(c,i)})}),e.registry[r].push({hook:s,orig:o})}var Zs=eo;function eo(e,t,r){if(e.registry[t]){var s=e.registry[t].map(function(o){return o.orig}).indexOf(r);s!==-1&&e.registry[t].splice(s,1)}}var Gr=Ys,to=Qs,ro=Zs,Xt=Function.bind,Zt=Xt.bind(Xt);function Fr(e,t,r){var s=Zt(ro,null).apply(null,r?[t,r]:[t]);e.api={remove:s},e.remove=s,["before","error","after","wrap"].forEach(function(o){var n=r?[t,o,r]:[t,o];e[o]=e.api[o]=Zt(to,null).apply(null,n)})}function so(){var e="h",t={registry:{}},r=Gr.bind(null,t,e);return Fr(r,t,e),r}function Ur(){var e={registry:{}},t=Gr.bind(null,e);return Fr(t,e),t}var er=!1;function Pe(){return er||(console.warn('[before-after-hook]: "Hook()" repurposing warning, use "Hook.Collection()". Read more: https://git.io/upgrade-before-after-hook-to-1.4'),er=!0),Ur()}Pe.Singular=so.bind();Pe.Collection=Ur.bind();Qe.exports=Pe;Qe.exports.Hook=Pe;Qe.exports.Singular=Pe.Singular;var oo=Qe.exports.Collection=Pe.Collection,no="9.0.0",io=`octokit-endpoint.js/${no} ${he()}`,ao={method:"GET",baseUrl:"https://api.github.com",headers:{accept:"application/vnd.github.v3+json","user-agent":io},mediaType:{format:""}};function co(e){return e?Object.keys(e).reduce((t,r)=>(t[r.toLowerCase()]=e[r],t),{}):{}}function Dr(e,t){const r=Object.assign({},e);return Object.keys(t).forEach(s=>{Pr(t[s])?s in e?r[s]=Dr(e[s],t[s]):Object.assign(r,{[s]:t[s]}):Object.assign(r,{[s]:t[s]})}),r}function tr(e){for(const t in e)e[t]===void 0&&delete e[t];return e}function wt(e,t,r){var o;if(typeof t=="string"){let[n,i]=t.split(" ");r=Object.assign(i?{method:n,url:i}:{url:n},r)}else r=Object.assign({},t);r.headers=co(r.headers),tr(r),tr(r.headers);const s=Dr(e||{},r);return r.url==="/graphql"&&(e&&((o=e.mediaType.previews)!=null&&o.length)&&(s.mediaType.previews=e.mediaType.previews.filter(n=>!s.mediaType.previews.includes(n)).concat(s.mediaType.previews)),s.mediaType.previews=(s.mediaType.previews||[]).map(n=>n.replace(/-preview/,""))),s}function uo(e,t){const r=/\?/.test(e)?"&":"?",s=Object.keys(t);return s.length===0?e:e+r+s.map(o=>o==="q"?"q="+t.q.split("+").map(encodeURIComponent).join("+"):`${o}=${encodeURIComponent(t[o])}`).join("&")}var lo=/\{[^}]+\}/g;function po(e){return e.replace(/^\W+|\W+$/g,"").split(/,/)}function ho(e){const t=e.match(lo);return t?t.map(po).reduce((r,s)=>r.concat(s),[]):[]}function rr(e,t){return Object.keys(e).filter(r=>!t.includes(r)).reduce((r,s)=>(r[s]=e[s],r),{})}function Cr(e){return e.split(/(%[0-9A-Fa-f]{2})/g).map(function(t){return/%[0-9A-Fa-f]/.test(t)||(t=encodeURI(t).replace(/%5B/g,"[").replace(/%5D/g,"]")),t}).join("")}function ke(e){return encodeURIComponent(e).replace(/[!'()*]/g,function(t){return"%"+t.charCodeAt(0).toString(16).toUpperCase()})}function Ue(e,t,r){return t=e==="+"||e==="#"?Cr(t):ke(t),r?ke(r)+"="+t:t}function be(e){return e!=null}function dt(e){return e===";"||e==="&"||e==="?"}function go(e,t,r,s){var o=e[r],n=[];if(be(o)&&o!=="")if(typeof o=="string"||typeof o=="number"||typeof o=="boolean")o=o.toString(),s&&s!=="*"&&(o=o.substring(0,parseInt(s,10))),n.push(Ue(t,o,dt(t)?r:""));else if(s==="*")Array.isArray(o)?o.filter(be).forEach(function(i){n.push(Ue(t,i,dt(t)?r:""))}):Object.keys(o).forEach(function(i){be(o[i])&&n.push(Ue(t,o[i],i))});else{const i=[];Array.isArray(o)?o.filter(be).forEach(function(c){i.push(Ue(t,c))}):Object.keys(o).forEach(function(c){be(o[c])&&(i.push(ke(c)),i.push(Ue(t,o[c].toString())))}),dt(t)?n.push(ke(r)+"="+i.join(",")):i.length!==0&&n.push(i.join(","))}else t===";"?be(o)&&n.push(ke(r)):o===""&&(t==="&"||t==="?")?n.push(ke(r)+"="):o===""&&n.push("");return n}function mo(e){return{expand:fo.bind(null,e)}}function fo(e,t){var r=["+","#",".","/",";","?","&"];return e.replace(/\{([^\{\}]+)\}|([^\{\}]+)/g,function(s,o,n){if(o){let c="";const d=[];if(r.indexOf(o.charAt(0))!==-1&&(c=o.charAt(0),o=o.substr(1)),o.split(/,/g).forEach(function(p){var m=/([^:\*]*)(?::(\d+)|(\*))?/.exec(p);d.push(go(t,c,m[1],m[2]||m[3]))}),c&&c!=="+"){var i=",";return c==="?"?i="&":c!=="#"&&(i=c),(d.length!==0?c:"")+d.join(i)}else return d.join(",")}else return Cr(n)})}function Ir(e){var m;let t=e.method.toUpperCase(),r=(e.url||"/").replace(/:([a-z]\w+)/g,"{$1}"),s=Object.assign({},e.headers),o,n=rr(e,["method","baseUrl","url","headers","request","mediaType"]);const i=ho(r);r=mo(r).expand(n),/^http/.test(r)||(r=e.baseUrl+r);const c=Object.keys(e).filter(T=>i.includes(T)).concat("baseUrl"),d=rr(n,c);if(!/application\/octet-stream/i.test(s.accept)&&(e.mediaType.format&&(s.accept=s.accept.split(/,/).map(T=>T.replace(/application\/vnd(\.\w+)(\.v3)?(\.\w+)?(\+json)?$/,`application/vnd$1$2.${e.mediaType.format}`)).join(",")),r.endsWith("/graphql")&&(m=e.mediaType.previews)!=null&&m.length)){const T=s.accept.match(/[\w-]+(?=-preview)/g)||[];s.accept=T.concat(e.mediaType.previews).map(C=>{const A=e.mediaType.format?`.${e.mediaType.format}`:"+json";return`application/vnd.github.${C}-preview${A}`}).join(",")}return["GET","HEAD"].includes(t)?r=uo(r,d):"data"in d?o=d.data:Object.keys(d).length&&(o=d),!s["content-type"]&&typeof o<"u"&&(s["content-type"]="application/json; charset=utf-8"),["PATCH","PUT"].includes(t)&&typeof o>"u"&&(o=""),Object.assign({method:t,url:r,headers:s},typeof o<"u"?{body:o}:null,e.request?{request:e.request}:null)}function To(e,t,r){return Ir(wt(e,t,r))}function $r(e,t){const r=wt(e,t),s=To.bind(null,r);return Object.assign(s,{DEFAULTS:r,defaults:$r.bind(null,r),merge:wt.bind(null,r),parse:Ir})}var Eo=$r(null,ao);class sr extends Error{constructor(t){super(t),Error.captureStackTrace&&Error.captureStackTrace(this,this.constructor),this.name="Deprecation"}}var Rt={exports:{}},_o=Lr;function Lr(e,t){if(e&&t)return Lr(e)(t);if(typeof e!="function")throw new TypeError("need wrapper function");return Object.keys(e).forEach(function(s){r[s]=e[s]}),r;function r(){for(var s=new Array(arguments.length),o=0;o<s.length;o++)s[o]=arguments[o];var n=e.apply(this,s),i=s[s.length-1];return typeof n=="function"&&n!==i&&Object.keys(i).forEach(function(c){n[c]=i[c]}),n}}var qr=_o;Rt.exports=qr(He);Rt.exports.strict=qr(xr);He.proto=He(function(){Object.defineProperty(Function.prototype,"once",{value:function(){return He(this)},configurable:!0}),Object.defineProperty(Function.prototype,"onceStrict",{value:function(){return xr(this)},configurable:!0})});function He(e){var t=function(){return t.called?t.value:(t.called=!0,t.value=e.apply(this,arguments))};return t.called=!1,t}function xr(e){var t=function(){if(t.called)throw new Error(t.onceError);return t.called=!0,t.value=e.apply(this,arguments)},r=e.name||"Function wrapped with `once`";return t.onceError=r+" shouldn't be called more than once",t.called=!1,t}var wo=Rt.exports;const jr=Ye(wo);var yo=jr(e=>console.warn(e)),bo=jr(e=>console.warn(e)),we=class extends Error{constructor(e,t,r){super(e),Error.captureStackTrace&&Error.captureStackTrace(this,this.constructor),this.name="HttpError",this.status=t;let s;"headers"in r&&typeof r.headers<"u"&&(s=r.headers),"response"in r&&(this.response=r.response,s=r.response.headers);const o=Object.assign({},r.request);r.request.headers.authorization&&(o.headers=Object.assign({},r.request.headers,{authorization:r.request.headers.authorization.replace(/ .*$/," [REDACTED]")})),o.url=o.url.replace(/\bclient_secret=\w+/g,"client_secret=[REDACTED]").replace(/\baccess_token=\w+/g,"access_token=[REDACTED]"),this.request=o,Object.defineProperty(this,"code",{get(){return yo(new sr("[@octokit/request-error] `error.code` is deprecated, use `error.status`.")),t}}),Object.defineProperty(this,"headers",{get(){return bo(new sr("[@octokit/request-error] `error.headers` is deprecated, use `error.response.headers`.")),s||{}}})}},ko="8.1.1";function vo(e){return e.arrayBuffer()}function or(e){var c,d,p;const t=e.request&&e.request.log?e.request.log:console,r=((c=e.request)==null?void 0:c.parseSuccessResponseBody)!==!1;(Pr(e.body)||Array.isArray(e.body))&&(e.body=JSON.stringify(e.body));let s={},o,n,{fetch:i}=globalThis;if((d=e.request)!=null&&d.fetch&&(i=e.request.fetch),!i)throw new Error("fetch is not set. Please pass a fetch implementation as new Octokit({ request: { fetch }}). Learn more at https://github.com/octokit/octokit.js/#fetch-missing");return i(e.url,{method:e.method,body:e.body,headers:e.headers,signal:(p=e.request)==null?void 0:p.signal,...e.body&&{duplex:"half"}}).then(async m=>{n=m.url,o=m.status;for(const T of m.headers)s[T[0]]=T[1];if("deprecation"in s){const T=s.link&&s.link.match(/<([^>]+)>; rel="deprecation"/),C=T&&T.pop();t.warn(`[@octokit/request] "${e.method} ${e.url}" is deprecated. It is scheduled to be removed on ${s.sunset}${C?`. See ${C}`:""}`)}if(!(o===204||o===205)){if(e.method==="HEAD"){if(o<400)return;throw new we(m.statusText,o,{response:{url:n,status:o,headers:s,data:void 0},request:e})}if(o===304)throw new we("Not modified",o,{response:{url:n,status:o,headers:s,data:await ht(m)},request:e});if(o>=400){const T=await ht(m);throw new we(So(T),o,{response:{url:n,status:o,headers:s,data:T},request:e})}return r?await ht(m):m.body}}).then(m=>({status:o,url:n,headers:s,data:m})).catch(m=>{throw m instanceof we||m.name==="AbortError"?m:new we(m.message,500,{request:e})})}async function ht(e){const t=e.headers.get("content-type");return/application\/json/.test(t)?e.json():!t||/^text\/|charset=utf-8$/.test(t)?e.text():vo(e)}function So(e){return typeof e=="string"?e:"message"in e?Array.isArray(e.errors)?`${e.message}: ${e.errors.map(JSON.stringify).join(", ")}`:e.message:`Unknown error: ${JSON.stringify(e)}`}function yt(e,t){const r=e.defaults(t);return Object.assign(function(o,n){const i=r.merge(o,n);if(!i.request||!i.request.hook)return or(r.parse(i));const c=(d,p)=>or(r.parse(r.merge(d,p)));return Object.assign(c,{endpoint:r,defaults:yt.bind(null,r)}),i.request.hook(c,i)},{endpoint:r,defaults:yt.bind(null,r)})}var K=yt(Eo,{headers:{"user-agent":`octokit-request.js/${ko} ${he()}`}}),Oo="7.0.1";function Ao(e){return`Request failed due to following response errors:
`+e.errors.map(t=>` - ${t.message}`).join(`
`)}var Po=class extends Error{constructor(e,t,r){super(Ao(r)),this.request=e,this.headers=t,this.response=r,this.name="GraphqlResponseError",this.errors=r.errors,this.data=r.data,Error.captureStackTrace&&Error.captureStackTrace(this,this.constructor)}},Ro=["method","baseUrl","url","headers","request","query","mediaType"],Go=["query","method","url"],nr=/\/api\/v3\/?$/;function Fo(e,t,r){if(r){if(typeof t=="string"&&"query"in r)return Promise.reject(new Error('[@octokit/graphql] "query" cannot be used as variable name'));for(const i in r)if(Go.includes(i))return Promise.reject(new Error(`[@octokit/graphql] "${i}" cannot be used as variable name`))}const s=typeof t=="string"?Object.assign({query:t},r):t,o=Object.keys(s).reduce((i,c)=>Ro.includes(c)?(i[c]=s[c],i):(i.variables||(i.variables={}),i.variables[c]=s[c],i),{}),n=s.baseUrl||e.endpoint.DEFAULTS.baseUrl;return nr.test(n)&&(o.url=n.replace(nr,"/api/graphql")),e(o).then(i=>{if(i.data.errors){const c={};for(const d of Object.keys(i.headers))c[d]=i.headers[d];throw new Po(o,c,i.data)}return i.data.data})}function Gt(e,t){const r=e.defaults(t);return Object.assign((o,n)=>Fo(r,o,n),{defaults:Gt.bind(null,r),endpoint:r.endpoint})}Gt(K,{headers:{"user-agent":`octokit-graphql.js/${Oo} ${he()}`},method:"POST",url:"/graphql"});function Uo(e){return Gt(e,{method:"POST",url:"/graphql"})}var Do=/^v1\./,Co=/^ghs_/,Io=/^ghu_/;async function $o(e){const t=e.split(/\./).length===3,r=Do.test(e)||Co.test(e),s=Io.test(e);return{type:"token",token:e,tokenType:t?"app":r?"installation":s?"user-to-server":"oauth"}}function Lo(e){return e.split(/\./).length===3?`bearer ${e}`:`token ${e}`}async function qo(e,t,r,s){const o=t.endpoint.merge(r,s);return o.headers.authorization=Lo(e),t(o)}var xo=function(t){if(!t)throw new Error("[@octokit/auth-token] No token passed to createTokenAuth");if(typeof t!="string")throw new Error("[@octokit/auth-token] Token passed to createTokenAuth is not a string");return t=t.replace(/^(token|bearer) +/i,""),Object.assign($o.bind(null,t),{hook:qo.bind(null,t)})},ir="5.0.0",Oe,Nr=(Oe=class{static defaults(t){return class extends this{constructor(...s){const o=s[0]||{};if(typeof t=="function"){super(t(o));return}super(Object.assign({},t,o,o.userAgent&&t.userAgent?{userAgent:`${o.userAgent} ${t.userAgent}`}:null))}}}static plugin(...t){var o;const r=this.plugins;return o=class extends this{},o.plugins=r.concat(t.filter(i=>!r.includes(i))),o}constructor(t={}){const r=new oo,s={baseUrl:K.endpoint.DEFAULTS.baseUrl,headers:{},request:Object.assign({},t.request,{hook:r.bind(null,"request")}),mediaType:{previews:[],format:""}};if(s.headers["user-agent"]=[t.userAgent,`octokit-core.js/${ir} ${he()}`].filter(Boolean).join(" "),t.baseUrl&&(s.baseUrl=t.baseUrl),t.previews&&(s.mediaType.previews=t.previews),t.timeZone&&(s.headers["time-zone"]=t.timeZone),this.request=K.defaults(s),this.graphql=Uo(this.request).defaults(s),this.log=Object.assign({debug:()=>{},info:()=>{},warn:console.warn.bind(console),error:console.error.bind(console)},t.log),this.hook=r,t.authStrategy){const{authStrategy:n,...i}=t,c=n(Object.assign({request:this.request,log:this.log,octokit:this,octokitOptions:i},t.auth));r.wrap("request",c.hook),this.auth=c}else if(!t.auth)this.auth=async()=>({type:"unauthenticated"});else{const n=xo(t.auth);r.wrap("request",n.hook),this.auth=n}this.constructor.plugins.forEach(n=>{Object.assign(this,n(this,t))})}},Oe.VERSION=ir,Oe.plugins=[],Oe);const jo=Object.freeze(Object.defineProperty({__proto__:null,Octokit:Nr},Symbol.toStringTag,{value:"Module"}));var No="8.0.0";function Bo(e){if(!e.data)return{...e,data:[]};if(!("total_count"in e.data&&!("url"in e.data)))return e;const r=e.data.incomplete_results,s=e.data.repository_selection,o=e.data.total_count;delete e.data.incomplete_results,delete e.data.repository_selection,delete e.data.total_count;const n=Object.keys(e.data)[0],i=e.data[n];return e.data=i,typeof r<"u"&&(e.data.incomplete_results=r),typeof s<"u"&&(e.data.repository_selection=s),e.data.total_count=o,e}function Ft(e,t,r){const s=typeof t=="function"?t.endpoint(r):e.request.endpoint(t,r),o=typeof t=="function"?t:e.request,n=s.method,i=s.headers;let c=s.url;return{[Symbol.asyncIterator]:()=>({async next(){if(!c)return{done:!0};try{const d=await o({method:n,url:c,headers:i}),p=Bo(d);return c=((p.headers.link||"").match(/<([^>]+)>;\s*rel="next"/)||[])[1],{value:p}}catch(d){if(d.status!==409)throw d;return c="",{value:{status:200,headers:{},data:[]}}}}})}}function Br(e,t,r,s){return typeof r=="function"&&(s=r,r=void 0),Mr(e,[],Ft(e,t,r)[Symbol.asyncIterator](),s)}function Mr(e,t,r,s){return r.next().then(o=>{if(o.done)return t;let n=!1;function i(){n=!0}return t=t.concat(s?s(o.value,i):o.value.data),n?t:Mr(e,t,r,s)})}Object.assign(Br,{iterator:Ft});function Hr(e){return{paginate:Object.assign(Br.bind(null,e),{iterator:Ft.bind(null,e)})}}Hr.VERSION=No;var Mo=(e,t)=>`The cursor at "${e.join(",")}" did not change its value "${t}" after a page transition. Please make sure your that your query is set up correctly.`,Ho=class extends Error{constructor(e,t){super(Mo(e.pathInQuery,t)),this.pageInfo=e,this.cursorValue=t,this.name="MissingCursorChangeError",Error.captureStackTrace&&Error.captureStackTrace(this,this.constructor)}},Wo=class extends Error{constructor(e){super(`No pageInfo property found in response. Please make sure to specify the pageInfo in your query. Response-Data: ${JSON.stringify(e,null,2)}`),this.response=e,this.name="MissingPageInfo",Error.captureStackTrace&&Error.captureStackTrace(this,this.constructor)}},zo=e=>Object.prototype.toString.call(e)==="[object Object]";function Wr(e){const t=zr(e,"pageInfo");if(t.length===0)throw new Wo(e);return t}var zr=(e,t,r=[])=>{for(const s of Object.keys(e)){const o=[...r,s],n=e[s];if(n.hasOwnProperty(t))return o;if(zo(n)){const i=zr(n,t,o);if(i.length>0)return i}}return[]},Ce=(e,t)=>t.reduce((r,s)=>r[s],e),gt=(e,t,r)=>{const s=t[t.length-1],o=[...t].slice(0,-1),n=Ce(e,o);typeof r=="function"?n[s]=r(n[s]):n[s]=r},Vo=e=>{const t=Wr(e);return{pathInQuery:t,pageInfo:Ce(e,[...t,"pageInfo"])}},Vr=e=>e.hasOwnProperty("hasNextPage"),Ko=e=>Vr(e)?e.endCursor:e.startCursor,Jo=e=>Vr(e)?e.hasNextPage:e.hasPreviousPage,Kr=e=>(t,r={})=>{let s=!0,o={...r};return{[Symbol.asyncIterator]:()=>({async next(){if(!s)return{done:!0,value:{}};const n=await e.graphql(t,o),i=Vo(n),c=Ko(i.pageInfo);if(s=Jo(i.pageInfo),s&&c===o.cursor)throw new Ho(i,c);return o={...o,cursor:c},{done:!1,value:n}}})}},Yo=(e,t)=>{if(Object.keys(e).length===0)return Object.assign(e,t);const r=Wr(e),s=[...r,"nodes"],o=Ce(t,s);o&&gt(e,s,d=>[...d,...o]);const n=[...r,"edges"],i=Ce(t,n);i&&gt(e,n,d=>[...d,...i]);const c=[...r,"pageInfo"];return gt(e,c,Ce(t,c)),e},Qo=e=>{const t=Kr(e);return async(r,s={})=>{let o={};for await(const n of t(r,s))o=Yo(o,n);return o}};function Xo(e){return e.graphql,{graphql:Object.assign(e.graphql,{paginate:Object.assign(Qo(e),{iterator:Kr(e)})})}}var Zo="9.0.0",en={actions:{addCustomLabelsToSelfHostedRunnerForOrg:["POST /orgs/{org}/actions/runners/{runner_id}/labels"],addCustomLabelsToSelfHostedRunnerForRepo:["POST /repos/{owner}/{repo}/actions/runners/{runner_id}/labels"],addSelectedRepoToOrgSecret:["PUT /orgs/{org}/actions/secrets/{secret_name}/repositories/{repository_id}"],addSelectedRepoToOrgVariable:["PUT /orgs/{org}/actions/variables/{name}/repositories/{repository_id}"],addSelectedRepoToRequiredWorkflow:["PUT /orgs/{org}/actions/required_workflows/{required_workflow_id}/repositories/{repository_id}"],approveWorkflowRun:["POST /repos/{owner}/{repo}/actions/runs/{run_id}/approve"],cancelWorkflowRun:["POST /repos/{owner}/{repo}/actions/runs/{run_id}/cancel"],createEnvironmentVariable:["POST /repositories/{repository_id}/environments/{environment_name}/variables"],createOrUpdateEnvironmentSecret:["PUT /repositories/{repository_id}/environments/{environment_name}/secrets/{secret_name}"],createOrUpdateOrgSecret:["PUT /orgs/{org}/actions/secrets/{secret_name}"],createOrUpdateRepoSecret:["PUT /repos/{owner}/{repo}/actions/secrets/{secret_name}"],createOrgVariable:["POST /orgs/{org}/actions/variables"],createRegistrationTokenForOrg:["POST /orgs/{org}/actions/runners/registration-token"],createRegistrationTokenForRepo:["POST /repos/{owner}/{repo}/actions/runners/registration-token"],createRemoveTokenForOrg:["POST /orgs/{org}/actions/runners/remove-token"],createRemoveTokenForRepo:["POST /repos/{owner}/{repo}/actions/runners/remove-token"],createRepoVariable:["POST /repos/{owner}/{repo}/actions/variables"],createRequiredWorkflow:["POST /orgs/{org}/actions/required_workflows"],createWorkflowDispatch:["POST /repos/{owner}/{repo}/actions/workflows/{workflow_id}/dispatches"],deleteActionsCacheById:["DELETE /repos/{owner}/{repo}/actions/caches/{cache_id}"],deleteActionsCacheByKey:["DELETE /repos/{owner}/{repo}/actions/caches{?key,ref}"],deleteArtifact:["DELETE /repos/{owner}/{repo}/actions/artifacts/{artifact_id}"],deleteEnvironmentSecret:["DELETE /repositories/{repository_id}/environments/{environment_name}/secrets/{secret_name}"],deleteEnvironmentVariable:["DELETE /repositories/{repository_id}/environments/{environment_name}/variables/{name}"],deleteOrgSecret:["DELETE /orgs/{org}/actions/secrets/{secret_name}"],deleteOrgVariable:["DELETE /orgs/{org}/actions/variables/{name}"],deleteRepoSecret:["DELETE /repos/{owner}/{repo}/actions/secrets/{secret_name}"],deleteRepoVariable:["DELETE /repos/{owner}/{repo}/actions/variables/{name}"],deleteRequiredWorkflow:["DELETE /orgs/{org}/actions/required_workflows/{required_workflow_id}"],deleteSelfHostedRunnerFromOrg:["DELETE /orgs/{org}/actions/runners/{runner_id}"],deleteSelfHostedRunnerFromRepo:["DELETE /repos/{owner}/{repo}/actions/runners/{runner_id}"],deleteWorkflowRun:["DELETE /repos/{owner}/{repo}/actions/runs/{run_id}"],deleteWorkflowRunLogs:["DELETE /repos/{owner}/{repo}/actions/runs/{run_id}/logs"],disableSelectedRepositoryGithubActionsOrganization:["DELETE /orgs/{org}/actions/permissions/repositories/{repository_id}"],disableWorkflow:["PUT /repos/{owner}/{repo}/actions/workflows/{workflow_id}/disable"],downloadArtifact:["GET /repos/{owner}/{repo}/actions/artifacts/{artifact_id}/{archive_format}"],downloadJobLogsForWorkflowRun:["GET /repos/{owner}/{repo}/actions/jobs/{job_id}/logs"],downloadWorkflowRunAttemptLogs:["GET /repos/{owner}/{repo}/actions/runs/{run_id}/attempts/{attempt_number}/logs"],downloadWorkflowRunLogs:["GET /repos/{owner}/{repo}/actions/runs/{run_id}/logs"],enableSelectedRepositoryGithubActionsOrganization:["PUT /orgs/{org}/actions/permissions/repositories/{repository_id}"],enableWorkflow:["PUT /repos/{owner}/{repo}/actions/workflows/{workflow_id}/enable"],generateRunnerJitconfigForOrg:["POST /orgs/{org}/actions/runners/generate-jitconfig"],generateRunnerJitconfigForRepo:["POST /repos/{owner}/{repo}/actions/runners/generate-jitconfig"],getActionsCacheList:["GET /repos/{owner}/{repo}/actions/caches"],getActionsCacheUsage:["GET /repos/{owner}/{repo}/actions/cache/usage"],getActionsCacheUsageByRepoForOrg:["GET /orgs/{org}/actions/cache/usage-by-repository"],getActionsCacheUsageForOrg:["GET /orgs/{org}/actions/cache/usage"],getAllowedActionsOrganization:["GET /orgs/{org}/actions/permissions/selected-actions"],getAllowedActionsRepository:["GET /repos/{owner}/{repo}/actions/permissions/selected-actions"],getArtifact:["GET /repos/{owner}/{repo}/actions/artifacts/{artifact_id}"],getEnvironmentPublicKey:["GET /repositories/{repository_id}/environments/{environment_name}/secrets/public-key"],getEnvironmentSecret:["GET /repositories/{repository_id}/environments/{environment_name}/secrets/{secret_name}"],getEnvironmentVariable:["GET /repositories/{repository_id}/environments/{environment_name}/variables/{name}"],getGithubActionsDefaultWorkflowPermissionsOrganization:["GET /orgs/{org}/actions/permissions/workflow"],getGithubActionsDefaultWorkflowPermissionsRepository:["GET /repos/{owner}/{repo}/actions/permissions/workflow"],getGithubActionsPermissionsOrganization:["GET /orgs/{org}/actions/permissions"],getGithubActionsPermissionsRepository:["GET /repos/{owner}/{repo}/actions/permissions"],getJobForWorkflowRun:["GET /repos/{owner}/{repo}/actions/jobs/{job_id}"],getOrgPublicKey:["GET /orgs/{org}/actions/secrets/public-key"],getOrgSecret:["GET /orgs/{org}/actions/secrets/{secret_name}"],getOrgVariable:["GET /orgs/{org}/actions/variables/{name}"],getPendingDeploymentsForRun:["GET /repos/{owner}/{repo}/actions/runs/{run_id}/pending_deployments"],getRepoPermissions:["GET /repos/{owner}/{repo}/actions/permissions",{},{renamed:["actions","getGithubActionsPermissionsRepository"]}],getRepoPublicKey:["GET /repos/{owner}/{repo}/actions/secrets/public-key"],getRepoRequiredWorkflow:["GET /repos/{org}/{repo}/actions/required_workflows/{required_workflow_id_for_repo}"],getRepoRequiredWorkflowUsage:["GET /repos/{org}/{repo}/actions/required_workflows/{required_workflow_id_for_repo}/timing"],getRepoSecret:["GET /repos/{owner}/{repo}/actions/secrets/{secret_name}"],getRepoVariable:["GET /repos/{owner}/{repo}/actions/variables/{name}"],getRequiredWorkflow:["GET /orgs/{org}/actions/required_workflows/{required_workflow_id}"],getReviewsForRun:["GET /repos/{owner}/{repo}/actions/runs/{run_id}/approvals"],getSelfHostedRunnerForOrg:["GET /orgs/{org}/actions/runners/{runner_id}"],getSelfHostedRunnerForRepo:["GET /repos/{owner}/{repo}/actions/runners/{runner_id}"],getWorkflow:["GET /repos/{owner}/{repo}/actions/workflows/{workflow_id}"],getWorkflowAccessToRepository:["GET /repos/{owner}/{repo}/actions/permissions/access"],getWorkflowRun:["GET /repos/{owner}/{repo}/actions/runs/{run_id}"],getWorkflowRunAttempt:["GET /repos/{owner}/{repo}/actions/runs/{run_id}/attempts/{attempt_number}"],getWorkflowRunUsage:["GET /repos/{owner}/{repo}/actions/runs/{run_id}/timing"],getWorkflowUsage:["GET /repos/{owner}/{repo}/actions/workflows/{workflow_id}/timing"],listArtifactsForRepo:["GET /repos/{owner}/{repo}/actions/artifacts"],listEnvironmentSecrets:["GET /repositories/{repository_id}/environments/{environment_name}/secrets"],listEnvironmentVariables:["GET /repositories/{repository_id}/environments/{environment_name}/variables"],listJobsForWorkflowRun:["GET /repos/{owner}/{repo}/actions/runs/{run_id}/jobs"],listJobsForWorkflowRunAttempt:["GET /repos/{owner}/{repo}/actions/runs/{run_id}/attempts/{attempt_number}/jobs"],listLabelsForSelfHostedRunnerForOrg:["GET /orgs/{org}/actions/runners/{runner_id}/labels"],listLabelsForSelfHostedRunnerForRepo:["GET /repos/{owner}/{repo}/actions/runners/{runner_id}/labels"],listOrgSecrets:["GET /orgs/{org}/actions/secrets"],listOrgVariables:["GET /orgs/{org}/actions/variables"],listRepoOrganizationSecrets:["GET /repos/{owner}/{repo}/actions/organization-secrets"],listRepoOrganizationVariables:["GET /repos/{owner}/{repo}/actions/organization-variables"],listRepoRequiredWorkflows:["GET /repos/{org}/{repo}/actions/required_workflows"],listRepoSecrets:["GET /repos/{owner}/{repo}/actions/secrets"],listRepoVariables:["GET /repos/{owner}/{repo}/actions/variables"],listRepoWorkflows:["GET /repos/{owner}/{repo}/actions/workflows"],listRequiredWorkflowRuns:["GET /repos/{owner}/{repo}/actions/required_workflows/{required_workflow_id_for_repo}/runs"],listRequiredWorkflows:["GET /orgs/{org}/actions/required_workflows"],listRunnerApplicationsForOrg:["GET /orgs/{org}/actions/runners/downloads"],listRunnerApplicationsForRepo:["GET /repos/{owner}/{repo}/actions/runners/downloads"],listSelectedReposForOrgSecret:["GET /orgs/{org}/actions/secrets/{secret_name}/repositories"],listSelectedReposForOrgVariable:["GET /orgs/{org}/actions/variables/{name}/repositories"],listSelectedRepositoriesEnabledGithubActionsOrganization:["GET /orgs/{org}/actions/permissions/repositories"],listSelectedRepositoriesRequiredWorkflow:["GET /orgs/{org}/actions/required_workflows/{required_workflow_id}/repositories"],listSelfHostedRunnersForOrg:["GET /orgs/{org}/actions/runners"],listSelfHostedRunnersForRepo:["GET /repos/{owner}/{repo}/actions/runners"],listWorkflowRunArtifacts:["GET /repos/{owner}/{repo}/actions/runs/{run_id}/artifacts"],listWorkflowRuns:["GET /repos/{owner}/{repo}/actions/workflows/{workflow_id}/runs"],listWorkflowRunsForRepo:["GET /repos/{owner}/{repo}/actions/runs"],reRunJobForWorkflowRun:["POST /repos/{owner}/{repo}/actions/jobs/{job_id}/rerun"],reRunWorkflow:["POST /repos/{owner}/{repo}/actions/runs/{run_id}/rerun"],reRunWorkflowFailedJobs:["POST /repos/{owner}/{repo}/actions/runs/{run_id}/rerun-failed-jobs"],removeAllCustomLabelsFromSelfHostedRunnerForOrg:["DELETE /orgs/{org}/actions/runners/{runner_id}/labels"],removeAllCustomLabelsFromSelfHostedRunnerForRepo:["DELETE /repos/{owner}/{repo}/actions/runners/{runner_id}/labels"],removeCustomLabelFromSelfHostedRunnerForOrg:["DELETE /orgs/{org}/actions/runners/{runner_id}/labels/{name}"],removeCustomLabelFromSelfHostedRunnerForRepo:["DELETE /repos/{owner}/{repo}/actions/runners/{runner_id}/labels/{name}"],removeSelectedRepoFromOrgSecret:["DELETE /orgs/{org}/actions/secrets/{secret_name}/repositories/{repository_id}"],removeSelectedRepoFromOrgVariable:["DELETE /orgs/{org}/actions/variables/{name}/repositories/{repository_id}"],removeSelectedRepoFromRequiredWorkflow:["DELETE /orgs/{org}/actions/required_workflows/{required_workflow_id}/repositories/{repository_id}"],reviewCustomGatesForRun:["POST /repos/{owner}/{repo}/actions/runs/{run_id}/deployment_protection_rule"],reviewPendingDeploymentsForRun:["POST /repos/{owner}/{repo}/actions/runs/{run_id}/pending_deployments"],setAllowedActionsOrganization:["PUT /orgs/{org}/actions/permissions/selected-actions"],setAllowedActionsRepository:["PUT /repos/{owner}/{repo}/actions/permissions/selected-actions"],setCustomLabelsForSelfHostedRunnerForOrg:["PUT /orgs/{org}/actions/runners/{runner_id}/labels"],setCustomLabelsForSelfHostedRunnerForRepo:["PUT /repos/{owner}/{repo}/actions/runners/{runner_id}/labels"],setGithubActionsDefaultWorkflowPermissionsOrganization:["PUT /orgs/{org}/actions/permissions/workflow"],setGithubActionsDefaultWorkflowPermissionsRepository:["PUT /repos/{owner}/{repo}/actions/permissions/workflow"],setGithubActionsPermissionsOrganization:["PUT /orgs/{org}/actions/permissions"],setGithubActionsPermissionsRepository:["PUT /repos/{owner}/{repo}/actions/permissions"],setSelectedReposForOrgSecret:["PUT /orgs/{org}/actions/secrets/{secret_name}/repositories"],setSelectedReposForOrgVariable:["PUT /orgs/{org}/actions/variables/{name}/repositories"],setSelectedReposToRequiredWorkflow:["PUT /orgs/{org}/actions/required_workflows/{required_workflow_id}/repositories"],setSelectedRepositoriesEnabledGithubActionsOrganization:["PUT /orgs/{org}/actions/permissions/repositories"],setWorkflowAccessToRepository:["PUT /repos/{owner}/{repo}/actions/permissions/access"],updateEnvironmentVariable:["PATCH /repositories/{repository_id}/environments/{environment_name}/variables/{name}"],updateOrgVariable:["PATCH /orgs/{org}/actions/variables/{name}"],updateRepoVariable:["PATCH /repos/{owner}/{repo}/actions/variables/{name}"],updateRequiredWorkflow:["PATCH /orgs/{org}/actions/required_workflows/{required_workflow_id}"]},activity:{checkRepoIsStarredByAuthenticatedUser:["GET /user/starred/{owner}/{repo}"],deleteRepoSubscription:["DELETE /repos/{owner}/{repo}/subscription"],deleteThreadSubscription:["DELETE /notifications/threads/{thread_id}/subscription"],getFeeds:["GET /feeds"],getRepoSubscription:["GET /repos/{owner}/{repo}/subscription"],getThread:["GET /notifications/threads/{thread_id}"],getThreadSubscriptionForAuthenticatedUser:["GET /notifications/threads/{thread_id}/subscription"],listEventsForAuthenticatedUser:["GET /users/{username}/events"],listNotificationsForAuthenticatedUser:["GET /notifications"],listOrgEventsForAuthenticatedUser:["GET /users/{username}/events/orgs/{org}"],listPublicEvents:["GET /events"],listPublicEventsForRepoNetwork:["GET /networks/{owner}/{repo}/events"],listPublicEventsForUser:["GET /users/{username}/events/public"],listPublicOrgEvents:["GET /orgs/{org}/events"],listReceivedEventsForUser:["GET /users/{username}/received_events"],listReceivedPublicEventsForUser:["GET /users/{username}/received_events/public"],listRepoEvents:["GET /repos/{owner}/{repo}/events"],listRepoNotificationsForAuthenticatedUser:["GET /repos/{owner}/{repo}/notifications"],listReposStarredByAuthenticatedUser:["GET /user/starred"],listReposStarredByUser:["GET /users/{username}/starred"],listReposWatchedByUser:["GET /users/{username}/subscriptions"],listStargazersForRepo:["GET /repos/{owner}/{repo}/stargazers"],listWatchedReposForAuthenticatedUser:["GET /user/subscriptions"],listWatchersForRepo:["GET /repos/{owner}/{repo}/subscribers"],markNotificationsAsRead:["PUT /notifications"],markRepoNotificationsAsRead:["PUT /repos/{owner}/{repo}/notifications"],markThreadAsRead:["PATCH /notifications/threads/{thread_id}"],setRepoSubscription:["PUT /repos/{owner}/{repo}/subscription"],setThreadSubscription:["PUT /notifications/threads/{thread_id}/subscription"],starRepoForAuthenticatedUser:["PUT /user/starred/{owner}/{repo}"],unstarRepoForAuthenticatedUser:["DELETE /user/starred/{owner}/{repo}"]},apps:{addRepoToInstallation:["PUT /user/installations/{installation_id}/repositories/{repository_id}",{},{renamed:["apps","addRepoToInstallationForAuthenticatedUser"]}],addRepoToInstallationForAuthenticatedUser:["PUT /user/installations/{installation_id}/repositories/{repository_id}"],checkToken:["POST /applications/{client_id}/token"],createFromManifest:["POST /app-manifests/{code}/conversions"],createInstallationAccessToken:["POST /app/installations/{installation_id}/access_tokens"],deleteAuthorization:["DELETE /applications/{client_id}/grant"],deleteInstallation:["DELETE /app/installations/{installation_id}"],deleteToken:["DELETE /applications/{client_id}/token"],getAuthenticated:["GET /app"],getBySlug:["GET /apps/{app_slug}"],getInstallation:["GET /app/installations/{installation_id}"],getOrgInstallation:["GET /orgs/{org}/installation"],getRepoInstallation:["GET /repos/{owner}/{repo}/installation"],getSubscriptionPlanForAccount:["GET /marketplace_listing/accounts/{account_id}"],getSubscriptionPlanForAccountStubbed:["GET /marketplace_listing/stubbed/accounts/{account_id}"],getUserInstallation:["GET /users/{username}/installation"],getWebhookConfigForApp:["GET /app/hook/config"],getWebhookDelivery:["GET /app/hook/deliveries/{delivery_id}"],listAccountsForPlan:["GET /marketplace_listing/plans/{plan_id}/accounts"],listAccountsForPlanStubbed:["GET /marketplace_listing/stubbed/plans/{plan_id}/accounts"],listInstallationReposForAuthenticatedUser:["GET /user/installations/{installation_id}/repositories"],listInstallationRequestsForAuthenticatedApp:["GET /app/installation-requests"],listInstallations:["GET /app/installations"],listInstallationsForAuthenticatedUser:["GET /user/installations"],listPlans:["GET /marketplace_listing/plans"],listPlansStubbed:["GET /marketplace_listing/stubbed/plans"],listReposAccessibleToInstallation:["GET /installation/repositories"],listSubscriptionsForAuthenticatedUser:["GET /user/marketplace_purchases"],listSubscriptionsForAuthenticatedUserStubbed:["GET /user/marketplace_purchases/stubbed"],listWebhookDeliveries:["GET /app/hook/deliveries"],redeliverWebhookDelivery:["POST /app/hook/deliveries/{delivery_id}/attempts"],removeRepoFromInstallation:["DELETE /user/installations/{installation_id}/repositories/{repository_id}",{},{renamed:["apps","removeRepoFromInstallationForAuthenticatedUser"]}],removeRepoFromInstallationForAuthenticatedUser:["DELETE /user/installations/{installation_id}/repositories/{repository_id}"],resetToken:["PATCH /applications/{client_id}/token"],revokeInstallationAccessToken:["DELETE /installation/token"],scopeToken:["POST /applications/{client_id}/token/scoped"],suspendInstallation:["PUT /app/installations/{installation_id}/suspended"],unsuspendInstallation:["DELETE /app/installations/{installation_id}/suspended"],updateWebhookConfigForApp:["PATCH /app/hook/config"]},billing:{getGithubActionsBillingOrg:["GET /orgs/{org}/settings/billing/actions"],getGithubActionsBillingUser:["GET /users/{username}/settings/billing/actions"],getGithubPackagesBillingOrg:["GET /orgs/{org}/settings/billing/packages"],getGithubPackagesBillingUser:["GET /users/{username}/settings/billing/packages"],getSharedStorageBillingOrg:["GET /orgs/{org}/settings/billing/shared-storage"],getSharedStorageBillingUser:["GET /users/{username}/settings/billing/shared-storage"]},checks:{create:["POST /repos/{owner}/{repo}/check-runs"],createSuite:["POST /repos/{owner}/{repo}/check-suites"],get:["GET /repos/{owner}/{repo}/check-runs/{check_run_id}"],getSuite:["GET /repos/{owner}/{repo}/check-suites/{check_suite_id}"],listAnnotations:["GET /repos/{owner}/{repo}/check-runs/{check_run_id}/annotations"],listForRef:["GET /repos/{owner}/{repo}/commits/{ref}/check-runs"],listForSuite:["GET /repos/{owner}/{repo}/check-suites/{check_suite_id}/check-runs"],listSuitesForRef:["GET /repos/{owner}/{repo}/commits/{ref}/check-suites"],rerequestRun:["POST /repos/{owner}/{repo}/check-runs/{check_run_id}/rerequest"],rerequestSuite:["POST /repos/{owner}/{repo}/check-suites/{check_suite_id}/rerequest"],setSuitesPreferences:["PATCH /repos/{owner}/{repo}/check-suites/preferences"],update:["PATCH /repos/{owner}/{repo}/check-runs/{check_run_id}"]},codeScanning:{deleteAnalysis:["DELETE /repos/{owner}/{repo}/code-scanning/analyses/{analysis_id}{?confirm_delete}"],getAlert:["GET /repos/{owner}/{repo}/code-scanning/alerts/{alert_number}",{},{renamedParameters:{alert_id:"alert_number"}}],getAnalysis:["GET /repos/{owner}/{repo}/code-scanning/analyses/{analysis_id}"],getCodeqlDatabase:["GET /repos/{owner}/{repo}/code-scanning/codeql/databases/{language}"],getDefaultSetup:["GET /repos/{owner}/{repo}/code-scanning/default-setup"],getSarif:["GET /repos/{owner}/{repo}/code-scanning/sarifs/{sarif_id}"],listAlertInstances:["GET /repos/{owner}/{repo}/code-scanning/alerts/{alert_number}/instances"],listAlertsForOrg:["GET /orgs/{org}/code-scanning/alerts"],listAlertsForRepo:["GET /repos/{owner}/{repo}/code-scanning/alerts"],listAlertsInstances:["GET /repos/{owner}/{repo}/code-scanning/alerts/{alert_number}/instances",{},{renamed:["codeScanning","listAlertInstances"]}],listCodeqlDatabases:["GET /repos/{owner}/{repo}/code-scanning/codeql/databases"],listRecentAnalyses:["GET /repos/{owner}/{repo}/code-scanning/analyses"],updateAlert:["PATCH /repos/{owner}/{repo}/code-scanning/alerts/{alert_number}"],updateDefaultSetup:["PATCH /repos/{owner}/{repo}/code-scanning/default-setup"],uploadSarif:["POST /repos/{owner}/{repo}/code-scanning/sarifs"]},codesOfConduct:{getAllCodesOfConduct:["GET /codes_of_conduct"],getConductCode:["GET /codes_of_conduct/{key}"]},codespaces:{addRepositoryForSecretForAuthenticatedUser:["PUT /user/codespaces/secrets/{secret_name}/repositories/{repository_id}"],addSelectedRepoToOrgSecret:["PUT /orgs/{org}/codespaces/secrets/{secret_name}/repositories/{repository_id}"],codespaceMachinesForAuthenticatedUser:["GET /user/codespaces/{codespace_name}/machines"],createForAuthenticatedUser:["POST /user/codespaces"],createOrUpdateOrgSecret:["PUT /orgs/{org}/codespaces/secrets/{secret_name}"],createOrUpdateRepoSecret:["PUT /repos/{owner}/{repo}/codespaces/secrets/{secret_name}"],createOrUpdateSecretForAuthenticatedUser:["PUT /user/codespaces/secrets/{secret_name}"],createWithPrForAuthenticatedUser:["POST /repos/{owner}/{repo}/pulls/{pull_number}/codespaces"],createWithRepoForAuthenticatedUser:["POST /repos/{owner}/{repo}/codespaces"],deleteCodespacesBillingUsers:["DELETE /orgs/{org}/codespaces/billing/selected_users"],deleteForAuthenticatedUser:["DELETE /user/codespaces/{codespace_name}"],deleteFromOrganization:["DELETE /orgs/{org}/members/{username}/codespaces/{codespace_name}"],deleteOrgSecret:["DELETE /orgs/{org}/codespaces/secrets/{secret_name}"],deleteRepoSecret:["DELETE /repos/{owner}/{repo}/codespaces/secrets/{secret_name}"],deleteSecretForAuthenticatedUser:["DELETE /user/codespaces/secrets/{secret_name}"],exportForAuthenticatedUser:["POST /user/codespaces/{codespace_name}/exports"],getCodespacesForUserInOrg:["GET /orgs/{org}/members/{username}/codespaces"],getExportDetailsForAuthenticatedUser:["GET /user/codespaces/{codespace_name}/exports/{export_id}"],getForAuthenticatedUser:["GET /user/codespaces/{codespace_name}"],getOrgPublicKey:["GET /orgs/{org}/codespaces/secrets/public-key"],getOrgSecret:["GET /orgs/{org}/codespaces/secrets/{secret_name}"],getPublicKeyForAuthenticatedUser:["GET /user/codespaces/secrets/public-key"],getRepoPublicKey:["GET /repos/{owner}/{repo}/codespaces/secrets/public-key"],getRepoSecret:["GET /repos/{owner}/{repo}/codespaces/secrets/{secret_name}"],getSecretForAuthenticatedUser:["GET /user/codespaces/secrets/{secret_name}"],listDevcontainersInRepositoryForAuthenticatedUser:["GET /repos/{owner}/{repo}/codespaces/devcontainers"],listForAuthenticatedUser:["GET /user/codespaces"],listInOrganization:["GET /orgs/{org}/codespaces",{},{renamedParameters:{org_id:"org"}}],listInRepositoryForAuthenticatedUser:["GET /repos/{owner}/{repo}/codespaces"],listOrgSecrets:["GET /orgs/{org}/codespaces/secrets"],listRepoSecrets:["GET /repos/{owner}/{repo}/codespaces/secrets"],listRepositoriesForSecretForAuthenticatedUser:["GET /user/codespaces/secrets/{secret_name}/repositories"],listSecretsForAuthenticatedUser:["GET /user/codespaces/secrets"],listSelectedReposForOrgSecret:["GET /orgs/{org}/codespaces/secrets/{secret_name}/repositories"],preFlightWithRepoForAuthenticatedUser:["GET /repos/{owner}/{repo}/codespaces/new"],publishForAuthenticatedUser:["POST /user/codespaces/{codespace_name}/publish"],removeRepositoryForSecretForAuthenticatedUser:["DELETE /user/codespaces/secrets/{secret_name}/repositories/{repository_id}"],removeSelectedRepoFromOrgSecret:["DELETE /orgs/{org}/codespaces/secrets/{secret_name}/repositories/{repository_id}"],repoMachinesForAuthenticatedUser:["GET /repos/{owner}/{repo}/codespaces/machines"],setCodespacesBilling:["PUT /orgs/{org}/codespaces/billing"],setCodespacesBillingUsers:["POST /orgs/{org}/codespaces/billing/selected_users"],setRepositoriesForSecretForAuthenticatedUser:["PUT /user/codespaces/secrets/{secret_name}/repositories"],setSelectedReposForOrgSecret:["PUT /orgs/{org}/codespaces/secrets/{secret_name}/repositories"],startForAuthenticatedUser:["POST /user/codespaces/{codespace_name}/start"],stopForAuthenticatedUser:["POST /user/codespaces/{codespace_name}/stop"],stopInOrganization:["POST /orgs/{org}/members/{username}/codespaces/{codespace_name}/stop"],updateForAuthenticatedUser:["PATCH /user/codespaces/{codespace_name}"]},dependabot:{addSelectedRepoToOrgSecret:["PUT /orgs/{org}/dependabot/secrets/{secret_name}/repositories/{repository_id}"],createOrUpdateOrgSecret:["PUT /orgs/{org}/dependabot/secrets/{secret_name}"],createOrUpdateRepoSecret:["PUT /repos/{owner}/{repo}/dependabot/secrets/{secret_name}"],deleteOrgSecret:["DELETE /orgs/{org}/dependabot/secrets/{secret_name}"],deleteRepoSecret:["DELETE /repos/{owner}/{repo}/dependabot/secrets/{secret_name}"],getAlert:["GET /repos/{owner}/{repo}/dependabot/alerts/{alert_number}"],getOrgPublicKey:["GET /orgs/{org}/dependabot/secrets/public-key"],getOrgSecret:["GET /orgs/{org}/dependabot/secrets/{secret_name}"],getRepoPublicKey:["GET /repos/{owner}/{repo}/dependabot/secrets/public-key"],getRepoSecret:["GET /repos/{owner}/{repo}/dependabot/secrets/{secret_name}"],listAlertsForEnterprise:["GET /enterprises/{enterprise}/dependabot/alerts"],listAlertsForOrg:["GET /orgs/{org}/dependabot/alerts"],listAlertsForRepo:["GET /repos/{owner}/{repo}/dependabot/alerts"],listOrgSecrets:["GET /orgs/{org}/dependabot/secrets"],listRepoSecrets:["GET /repos/{owner}/{repo}/dependabot/secrets"],listSelectedReposForOrgSecret:["GET /orgs/{org}/dependabot/secrets/{secret_name}/repositories"],removeSelectedRepoFromOrgSecret:["DELETE /orgs/{org}/dependabot/secrets/{secret_name}/repositories/{repository_id}"],setSelectedReposForOrgSecret:["PUT /orgs/{org}/dependabot/secrets/{secret_name}/repositories"],updateAlert:["PATCH /repos/{owner}/{repo}/dependabot/alerts/{alert_number}"]},dependencyGraph:{createRepositorySnapshot:["POST /repos/{owner}/{repo}/dependency-graph/snapshots"],diffRange:["GET /repos/{owner}/{repo}/dependency-graph/compare/{basehead}"],exportSbom:["GET /repos/{owner}/{repo}/dependency-graph/sbom"]},emojis:{get:["GET /emojis"]},gists:{checkIsStarred:["GET /gists/{gist_id}/star"],create:["POST /gists"],createComment:["POST /gists/{gist_id}/comments"],delete:["DELETE /gists/{gist_id}"],deleteComment:["DELETE /gists/{gist_id}/comments/{comment_id}"],fork:["POST /gists/{gist_id}/forks"],get:["GET /gists/{gist_id}"],getComment:["GET /gists/{gist_id}/comments/{comment_id}"],getRevision:["GET /gists/{gist_id}/{sha}"],list:["GET /gists"],listComments:["GET /gists/{gist_id}/comments"],listCommits:["GET /gists/{gist_id}/commits"],listForUser:["GET /users/{username}/gists"],listForks:["GET /gists/{gist_id}/forks"],listPublic:["GET /gists/public"],listStarred:["GET /gists/starred"],star:["PUT /gists/{gist_id}/star"],unstar:["DELETE /gists/{gist_id}/star"],update:["PATCH /gists/{gist_id}"],updateComment:["PATCH /gists/{gist_id}/comments/{comment_id}"]},git:{createBlob:["POST /repos/{owner}/{repo}/git/blobs"],createCommit:["POST /repos/{owner}/{repo}/git/commits"],createRef:["POST /repos/{owner}/{repo}/git/refs"],createTag:["POST /repos/{owner}/{repo}/git/tags"],createTree:["POST /repos/{owner}/{repo}/git/trees"],deleteRef:["DELETE /repos/{owner}/{repo}/git/refs/{ref}"],getBlob:["GET /repos/{owner}/{repo}/git/blobs/{file_sha}"],getCommit:["GET /repos/{owner}/{repo}/git/commits/{commit_sha}"],getRef:["GET /repos/{owner}/{repo}/git/ref/{ref}"],getTag:["GET /repos/{owner}/{repo}/git/tags/{tag_sha}"],getTree:["GET /repos/{owner}/{repo}/git/trees/{tree_sha}"],listMatchingRefs:["GET /repos/{owner}/{repo}/git/matching-refs/{ref}"],updateRef:["PATCH /repos/{owner}/{repo}/git/refs/{ref}"]},gitignore:{getAllTemplates:["GET /gitignore/templates"],getTemplate:["GET /gitignore/templates/{name}"]},interactions:{getRestrictionsForAuthenticatedUser:["GET /user/interaction-limits"],getRestrictionsForOrg:["GET /orgs/{org}/interaction-limits"],getRestrictionsForRepo:["GET /repos/{owner}/{repo}/interaction-limits"],getRestrictionsForYourPublicRepos:["GET /user/interaction-limits",{},{renamed:["interactions","getRestrictionsForAuthenticatedUser"]}],removeRestrictionsForAuthenticatedUser:["DELETE /user/interaction-limits"],removeRestrictionsForOrg:["DELETE /orgs/{org}/interaction-limits"],removeRestrictionsForRepo:["DELETE /repos/{owner}/{repo}/interaction-limits"],removeRestrictionsForYourPublicRepos:["DELETE /user/interaction-limits",{},{renamed:["interactions","removeRestrictionsForAuthenticatedUser"]}],setRestrictionsForAuthenticatedUser:["PUT /user/interaction-limits"],setRestrictionsForOrg:["PUT /orgs/{org}/interaction-limits"],setRestrictionsForRepo:["PUT /repos/{owner}/{repo}/interaction-limits"],setRestrictionsForYourPublicRepos:["PUT /user/interaction-limits",{},{renamed:["interactions","setRestrictionsForAuthenticatedUser"]}]},issues:{addAssignees:["POST /repos/{owner}/{repo}/issues/{issue_number}/assignees"],addLabels:["POST /repos/{owner}/{repo}/issues/{issue_number}/labels"],checkUserCanBeAssigned:["GET /repos/{owner}/{repo}/assignees/{assignee}"],checkUserCanBeAssignedToIssue:["GET /repos/{owner}/{repo}/issues/{issue_number}/assignees/{assignee}"],create:["POST /repos/{owner}/{repo}/issues"],createComment:["POST /repos/{owner}/{repo}/issues/{issue_number}/comments"],createLabel:["POST /repos/{owner}/{repo}/labels"],createMilestone:["POST /repos/{owner}/{repo}/milestones"],deleteComment:["DELETE /repos/{owner}/{repo}/issues/comments/{comment_id}"],deleteLabel:["DELETE /repos/{owner}/{repo}/labels/{name}"],deleteMilestone:["DELETE /repos/{owner}/{repo}/milestones/{milestone_number}"],get:["GET /repos/{owner}/{repo}/issues/{issue_number}"],getComment:["GET /repos/{owner}/{repo}/issues/comments/{comment_id}"],getEvent:["GET /repos/{owner}/{repo}/issues/events/{event_id}"],getLabel:["GET /repos/{owner}/{repo}/labels/{name}"],getMilestone:["GET /repos/{owner}/{repo}/milestones/{milestone_number}"],list:["GET /issues"],listAssignees:["GET /repos/{owner}/{repo}/assignees"],listComments:["GET /repos/{owner}/{repo}/issues/{issue_number}/comments"],listCommentsForRepo:["GET /repos/{owner}/{repo}/issues/comments"],listEvents:["GET /repos/{owner}/{repo}/issues/{issue_number}/events"],listEventsForRepo:["GET /repos/{owner}/{repo}/issues/events"],listEventsForTimeline:["GET /repos/{owner}/{repo}/issues/{issue_number}/timeline"],listForAuthenticatedUser:["GET /user/issues"],listForOrg:["GET /orgs/{org}/issues"],listForRepo:["GET /repos/{owner}/{repo}/issues"],listLabelsForMilestone:["GET /repos/{owner}/{repo}/milestones/{milestone_number}/labels"],listLabelsForRepo:["GET /repos/{owner}/{repo}/labels"],listLabelsOnIssue:["GET /repos/{owner}/{repo}/issues/{issue_number}/labels"],listMilestones:["GET /repos/{owner}/{repo}/milestones"],lock:["PUT /repos/{owner}/{repo}/issues/{issue_number}/lock"],removeAllLabels:["DELETE /repos/{owner}/{repo}/issues/{issue_number}/labels"],removeAssignees:["DELETE /repos/{owner}/{repo}/issues/{issue_number}/assignees"],removeLabel:["DELETE /repos/{owner}/{repo}/issues/{issue_number}/labels/{name}"],setLabels:["PUT /repos/{owner}/{repo}/issues/{issue_number}/labels"],unlock:["DELETE /repos/{owner}/{repo}/issues/{issue_number}/lock"],update:["PATCH /repos/{owner}/{repo}/issues/{issue_number}"],updateComment:["PATCH /repos/{owner}/{repo}/issues/comments/{comment_id}"],updateLabel:["PATCH /repos/{owner}/{repo}/labels/{name}"],updateMilestone:["PATCH /repos/{owner}/{repo}/milestones/{milestone_number}"]},licenses:{get:["GET /licenses/{license}"],getAllCommonlyUsed:["GET /licenses"],getForRepo:["GET /repos/{owner}/{repo}/license"]},markdown:{render:["POST /markdown"],renderRaw:["POST /markdown/raw",{headers:{"content-type":"text/plain; charset=utf-8"}}]},meta:{get:["GET /meta"],getAllVersions:["GET /versions"],getOctocat:["GET /octocat"],getZen:["GET /zen"],root:["GET /"]},migrations:{cancelImport:["DELETE /repos/{owner}/{repo}/import"],deleteArchiveForAuthenticatedUser:["DELETE /user/migrations/{migration_id}/archive"],deleteArchiveForOrg:["DELETE /orgs/{org}/migrations/{migration_id}/archive"],downloadArchiveForOrg:["GET /orgs/{org}/migrations/{migration_id}/archive"],getArchiveForAuthenticatedUser:["GET /user/migrations/{migration_id}/archive"],getCommitAuthors:["GET /repos/{owner}/{repo}/import/authors"],getImportStatus:["GET /repos/{owner}/{repo}/import"],getLargeFiles:["GET /repos/{owner}/{repo}/import/large_files"],getStatusForAuthenticatedUser:["GET /user/migrations/{migration_id}"],getStatusForOrg:["GET /orgs/{org}/migrations/{migration_id}"],listForAuthenticatedUser:["GET /user/migrations"],listForOrg:["GET /orgs/{org}/migrations"],listReposForAuthenticatedUser:["GET /user/migrations/{migration_id}/repositories"],listReposForOrg:["GET /orgs/{org}/migrations/{migration_id}/repositories"],listReposForUser:["GET /user/migrations/{migration_id}/repositories",{},{renamed:["migrations","listReposForAuthenticatedUser"]}],mapCommitAuthor:["PATCH /repos/{owner}/{repo}/import/authors/{author_id}"],setLfsPreference:["PATCH /repos/{owner}/{repo}/import/lfs"],startForAuthenticatedUser:["POST /user/migrations"],startForOrg:["POST /orgs/{org}/migrations"],startImport:["PUT /repos/{owner}/{repo}/import"],unlockRepoForAuthenticatedUser:["DELETE /user/migrations/{migration_id}/repos/{repo_name}/lock"],unlockRepoForOrg:["DELETE /orgs/{org}/migrations/{migration_id}/repos/{repo_name}/lock"],updateImport:["PATCH /repos/{owner}/{repo}/import"]},orgs:{addSecurityManagerTeam:["PUT /orgs/{org}/security-managers/teams/{team_slug}"],blockUser:["PUT /orgs/{org}/blocks/{username}"],cancelInvitation:["DELETE /orgs/{org}/invitations/{invitation_id}"],checkBlockedUser:["GET /orgs/{org}/blocks/{username}"],checkMembershipForUser:["GET /orgs/{org}/members/{username}"],checkPublicMembershipForUser:["GET /orgs/{org}/public_members/{username}"],convertMemberToOutsideCollaborator:["PUT /orgs/{org}/outside_collaborators/{username}"],createInvitation:["POST /orgs/{org}/invitations"],createWebhook:["POST /orgs/{org}/hooks"],delete:["DELETE /orgs/{org}"],deleteWebhook:["DELETE /orgs/{org}/hooks/{hook_id}"],enableOrDisableSecurityProductOnAllOrgRepos:["POST /orgs/{org}/{security_product}/{enablement}"],get:["GET /orgs/{org}"],getMembershipForAuthenticatedUser:["GET /user/memberships/orgs/{org}"],getMembershipForUser:["GET /orgs/{org}/memberships/{username}"],getWebhook:["GET /orgs/{org}/hooks/{hook_id}"],getWebhookConfigForOrg:["GET /orgs/{org}/hooks/{hook_id}/config"],getWebhookDelivery:["GET /orgs/{org}/hooks/{hook_id}/deliveries/{delivery_id}"],list:["GET /organizations"],listAppInstallations:["GET /orgs/{org}/installations"],listBlockedUsers:["GET /orgs/{org}/blocks"],listFailedInvitations:["GET /orgs/{org}/failed_invitations"],listForAuthenticatedUser:["GET /user/orgs"],listForUser:["GET /users/{username}/orgs"],listInvitationTeams:["GET /orgs/{org}/invitations/{invitation_id}/teams"],listMembers:["GET /orgs/{org}/members"],listMembershipsForAuthenticatedUser:["GET /user/memberships/orgs"],listOutsideCollaborators:["GET /orgs/{org}/outside_collaborators"],listPatGrantRepositories:["GET /organizations/{org}/personal-access-tokens/{pat_id}/repositories"],listPatGrantRequestRepositories:["GET /organizations/{org}/personal-access-token-requests/{pat_request_id}/repositories"],listPatGrantRequests:["GET /organizations/{org}/personal-access-token-requests"],listPatGrants:["GET /organizations/{org}/personal-access-tokens"],listPendingInvitations:["GET /orgs/{org}/invitations"],listPublicMembers:["GET /orgs/{org}/public_members"],listSecurityManagerTeams:["GET /orgs/{org}/security-managers"],listWebhookDeliveries:["GET /orgs/{org}/hooks/{hook_id}/deliveries"],listWebhooks:["GET /orgs/{org}/hooks"],pingWebhook:["POST /orgs/{org}/hooks/{hook_id}/pings"],redeliverWebhookDelivery:["POST /orgs/{org}/hooks/{hook_id}/deliveries/{delivery_id}/attempts"],removeMember:["DELETE /orgs/{org}/members/{username}"],removeMembershipForUser:["DELETE /orgs/{org}/memberships/{username}"],removeOutsideCollaborator:["DELETE /orgs/{org}/outside_collaborators/{username}"],removePublicMembershipForAuthenticatedUser:["DELETE /orgs/{org}/public_members/{username}"],removeSecurityManagerTeam:["DELETE /orgs/{org}/security-managers/teams/{team_slug}"],reviewPatGrantRequest:["POST /organizations/{org}/personal-access-token-requests/{pat_request_id}"],reviewPatGrantRequestsInBulk:["POST /organizations/{org}/personal-access-token-requests"],setMembershipForUser:["PUT /orgs/{org}/memberships/{username}"],setPublicMembershipForAuthenticatedUser:["PUT /orgs/{org}/public_members/{username}"],unblockUser:["DELETE /orgs/{org}/blocks/{username}"],update:["PATCH /orgs/{org}"],updateMembershipForAuthenticatedUser:["PATCH /user/memberships/orgs/{org}"],updatePatAccess:["POST /organizations/{org}/personal-access-tokens/{pat_id}"],updatePatAccesses:["POST /organizations/{org}/personal-access-tokens"],updateWebhook:["PATCH /orgs/{org}/hooks/{hook_id}"],updateWebhookConfigForOrg:["PATCH /orgs/{org}/hooks/{hook_id}/config"]},packages:{deletePackageForAuthenticatedUser:["DELETE /user/packages/{package_type}/{package_name}"],deletePackageForOrg:["DELETE /orgs/{org}/packages/{package_type}/{package_name}"],deletePackageForUser:["DELETE /users/{username}/packages/{package_type}/{package_name}"],deletePackageVersionForAuthenticatedUser:["DELETE /user/packages/{package_type}/{package_name}/versions/{package_version_id}"],deletePackageVersionForOrg:["DELETE /orgs/{org}/packages/{package_type}/{package_name}/versions/{package_version_id}"],deletePackageVersionForUser:["DELETE /users/{username}/packages/{package_type}/{package_name}/versions/{package_version_id}"],getAllPackageVersionsForAPackageOwnedByAnOrg:["GET /orgs/{org}/packages/{package_type}/{package_name}/versions",{},{renamed:["packages","getAllPackageVersionsForPackageOwnedByOrg"]}],getAllPackageVersionsForAPackageOwnedByTheAuthenticatedUser:["GET /user/packages/{package_type}/{package_name}/versions",{},{renamed:["packages","getAllPackageVersionsForPackageOwnedByAuthenticatedUser"]}],getAllPackageVersionsForPackageOwnedByAuthenticatedUser:["GET /user/packages/{package_type}/{package_name}/versions"],getAllPackageVersionsForPackageOwnedByOrg:["GET /orgs/{org}/packages/{package_type}/{package_name}/versions"],getAllPackageVersionsForPackageOwnedByUser:["GET /users/{username}/packages/{package_type}/{package_name}/versions"],getPackageForAuthenticatedUser:["GET /user/packages/{package_type}/{package_name}"],getPackageForOrganization:["GET /orgs/{org}/packages/{package_type}/{package_name}"],getPackageForUser:["GET /users/{username}/packages/{package_type}/{package_name}"],getPackageVersionForAuthenticatedUser:["GET /user/packages/{package_type}/{package_name}/versions/{package_version_id}"],getPackageVersionForOrganization:["GET /orgs/{org}/packages/{package_type}/{package_name}/versions/{package_version_id}"],getPackageVersionForUser:["GET /users/{username}/packages/{package_type}/{package_name}/versions/{package_version_id}"],listDockerMigrationConflictingPackagesForAuthenticatedUser:["GET /user/docker/conflicts"],listDockerMigrationConflictingPackagesForOrganization:["GET /orgs/{org}/docker/conflicts"],listDockerMigrationConflictingPackagesForUser:["GET /users/{username}/docker/conflicts"],listPackagesForAuthenticatedUser:["GET /user/packages"],listPackagesForOrganization:["GET /orgs/{org}/packages"],listPackagesForUser:["GET /users/{username}/packages"],restorePackageForAuthenticatedUser:["POST /user/packages/{package_type}/{package_name}/restore{?token}"],restorePackageForOrg:["POST /orgs/{org}/packages/{package_type}/{package_name}/restore{?token}"],restorePackageForUser:["POST /users/{username}/packages/{package_type}/{package_name}/restore{?token}"],restorePackageVersionForAuthenticatedUser:["POST /user/packages/{package_type}/{package_name}/versions/{package_version_id}/restore"],restorePackageVersionForOrg:["POST /orgs/{org}/packages/{package_type}/{package_name}/versions/{package_version_id}/restore"],restorePackageVersionForUser:["POST /users/{username}/packages/{package_type}/{package_name}/versions/{package_version_id}/restore"]},projects:{addCollaborator:["PUT /projects/{project_id}/collaborators/{username}"],createCard:["POST /projects/columns/{column_id}/cards"],createColumn:["POST /projects/{project_id}/columns"],createForAuthenticatedUser:["POST /user/projects"],createForOrg:["POST /orgs/{org}/projects"],createForRepo:["POST /repos/{owner}/{repo}/projects"],delete:["DELETE /projects/{project_id}"],deleteCard:["DELETE /projects/columns/cards/{card_id}"],deleteColumn:["DELETE /projects/columns/{column_id}"],get:["GET /projects/{project_id}"],getCard:["GET /projects/columns/cards/{card_id}"],getColumn:["GET /projects/columns/{column_id}"],getPermissionForUser:["GET /projects/{project_id}/collaborators/{username}/permission"],listCards:["GET /projects/columns/{column_id}/cards"],listCollaborators:["GET /projects/{project_id}/collaborators"],listColumns:["GET /projects/{project_id}/columns"],listForOrg:["GET /orgs/{org}/projects"],listForRepo:["GET /repos/{owner}/{repo}/projects"],listForUser:["GET /users/{username}/projects"],moveCard:["POST /projects/columns/cards/{card_id}/moves"],moveColumn:["POST /projects/columns/{column_id}/moves"],removeCollaborator:["DELETE /projects/{project_id}/collaborators/{username}"],update:["PATCH /projects/{project_id}"],updateCard:["PATCH /projects/columns/cards/{card_id}"],updateColumn:["PATCH /projects/columns/{column_id}"]},pulls:{checkIfMerged:["GET /repos/{owner}/{repo}/pulls/{pull_number}/merge"],create:["POST /repos/{owner}/{repo}/pulls"],createReplyForReviewComment:["POST /repos/{owner}/{repo}/pulls/{pull_number}/comments/{comment_id}/replies"],createReview:["POST /repos/{owner}/{repo}/pulls/{pull_number}/reviews"],createReviewComment:["POST /repos/{owner}/{repo}/pulls/{pull_number}/comments"],deletePendingReview:["DELETE /repos/{owner}/{repo}/pulls/{pull_number}/reviews/{review_id}"],deleteReviewComment:["DELETE /repos/{owner}/{repo}/pulls/comments/{comment_id}"],dismissReview:["PUT /repos/{owner}/{repo}/pulls/{pull_number}/reviews/{review_id}/dismissals"],get:["GET /repos/{owner}/{repo}/pulls/{pull_number}"],getReview:["GET /repos/{owner}/{repo}/pulls/{pull_number}/reviews/{review_id}"],getReviewComment:["GET /repos/{owner}/{repo}/pulls/comments/{comment_id}"],list:["GET /repos/{owner}/{repo}/pulls"],listCommentsForReview:["GET /repos/{owner}/{repo}/pulls/{pull_number}/reviews/{review_id}/comments"],listCommits:["GET /repos/{owner}/{repo}/pulls/{pull_number}/commits"],listFiles:["GET /repos/{owner}/{repo}/pulls/{pull_number}/files"],listRequestedReviewers:["GET /repos/{owner}/{repo}/pulls/{pull_number}/requested_reviewers"],listReviewComments:["GET /repos/{owner}/{repo}/pulls/{pull_number}/comments"],listReviewCommentsForRepo:["GET /repos/{owner}/{repo}/pulls/comments"],listReviews:["GET /repos/{owner}/{repo}/pulls/{pull_number}/reviews"],merge:["PUT /repos/{owner}/{repo}/pulls/{pull_number}/merge"],removeRequestedReviewers:["DELETE /repos/{owner}/{repo}/pulls/{pull_number}/requested_reviewers"],requestReviewers:["POST /repos/{owner}/{repo}/pulls/{pull_number}/requested_reviewers"],submitReview:["POST /repos/{owner}/{repo}/pulls/{pull_number}/reviews/{review_id}/events"],update:["PATCH /repos/{owner}/{repo}/pulls/{pull_number}"],updateBranch:["PUT /repos/{owner}/{repo}/pulls/{pull_number}/update-branch"],updateReview:["PUT /repos/{owner}/{repo}/pulls/{pull_number}/reviews/{review_id}"],updateReviewComment:["PATCH /repos/{owner}/{repo}/pulls/comments/{comment_id}"]},rateLimit:{get:["GET /rate_limit"]},reactions:{createForCommitComment:["POST /repos/{owner}/{repo}/comments/{comment_id}/reactions"],createForIssue:["POST /repos/{owner}/{repo}/issues/{issue_number}/reactions"],createForIssueComment:["POST /repos/{owner}/{repo}/issues/comments/{comment_id}/reactions"],createForPullRequestReviewComment:["POST /repos/{owner}/{repo}/pulls/comments/{comment_id}/reactions"],createForRelease:["POST /repos/{owner}/{repo}/releases/{release_id}/reactions"],createForTeamDiscussionCommentInOrg:["POST /orgs/{org}/teams/{team_slug}/discussions/{discussion_number}/comments/{comment_number}/reactions"],createForTeamDiscussionInOrg:["POST /orgs/{org}/teams/{team_slug}/discussions/{discussion_number}/reactions"],deleteForCommitComment:["DELETE /repos/{owner}/{repo}/comments/{comment_id}/reactions/{reaction_id}"],deleteForIssue:["DELETE /repos/{owner}/{repo}/issues/{issue_number}/reactions/{reaction_id}"],deleteForIssueComment:["DELETE /repos/{owner}/{repo}/issues/comments/{comment_id}/reactions/{reaction_id}"],deleteForPullRequestComment:["DELETE /repos/{owner}/{repo}/pulls/comments/{comment_id}/reactions/{reaction_id}"],deleteForRelease:["DELETE /repos/{owner}/{repo}/releases/{release_id}/reactions/{reaction_id}"],deleteForTeamDiscussion:["DELETE /orgs/{org}/teams/{team_slug}/discussions/{discussion_number}/reactions/{reaction_id}"],deleteForTeamDiscussionComment:["DELETE /orgs/{org}/teams/{team_slug}/discussions/{discussion_number}/comments/{comment_number}/reactions/{reaction_id}"],listForCommitComment:["GET /repos/{owner}/{repo}/comments/{comment_id}/reactions"],listForIssue:["GET /repos/{owner}/{repo}/issues/{issue_number}/reactions"],listForIssueComment:["GET /repos/{owner}/{repo}/issues/comments/{comment_id}/reactions"],listForPullRequestReviewComment:["GET /repos/{owner}/{repo}/pulls/comments/{comment_id}/reactions"],listForRelease:["GET /repos/{owner}/{repo}/releases/{release_id}/reactions"],listForTeamDiscussionCommentInOrg:["GET /orgs/{org}/teams/{team_slug}/discussions/{discussion_number}/comments/{comment_number}/reactions"],listForTeamDiscussionInOrg:["GET /orgs/{org}/teams/{team_slug}/discussions/{discussion_number}/reactions"]},repos:{acceptInvitation:["PATCH /user/repository_invitations/{invitation_id}",{},{renamed:["repos","acceptInvitationForAuthenticatedUser"]}],acceptInvitationForAuthenticatedUser:["PATCH /user/repository_invitations/{invitation_id}"],addAppAccessRestrictions:["POST /repos/{owner}/{repo}/branches/{branch}/protection/restrictions/apps",{},{mapToData:"apps"}],addCollaborator:["PUT /repos/{owner}/{repo}/collaborators/{username}"],addStatusCheckContexts:["POST /repos/{owner}/{repo}/branches/{branch}/protection/required_status_checks/contexts",{},{mapToData:"contexts"}],addTeamAccessRestrictions:["POST /repos/{owner}/{repo}/branches/{branch}/protection/restrictions/teams",{},{mapToData:"teams"}],addUserAccessRestrictions:["POST /repos/{owner}/{repo}/branches/{branch}/protection/restrictions/users",{},{mapToData:"users"}],checkCollaborator:["GET /repos/{owner}/{repo}/collaborators/{username}"],checkVulnerabilityAlerts:["GET /repos/{owner}/{repo}/vulnerability-alerts"],codeownersErrors:["GET /repos/{owner}/{repo}/codeowners/errors"],compareCommits:["GET /repos/{owner}/{repo}/compare/{base}...{head}"],compareCommitsWithBasehead:["GET /repos/{owner}/{repo}/compare/{basehead}"],createAutolink:["POST /repos/{owner}/{repo}/autolinks"],createCommitComment:["POST /repos/{owner}/{repo}/commits/{commit_sha}/comments"],createCommitSignatureProtection:["POST /repos/{owner}/{repo}/branches/{branch}/protection/required_signatures"],createCommitStatus:["POST /repos/{owner}/{repo}/statuses/{sha}"],createDeployKey:["POST /repos/{owner}/{repo}/keys"],createDeployment:["POST /repos/{owner}/{repo}/deployments"],createDeploymentBranchPolicy:["POST /repos/{owner}/{repo}/environments/{environment_name}/deployment-branch-policies"],createDeploymentProtectionRule:["POST /repos/{owner}/{repo}/environments/{environment_name}/deployment_protection_rules"],createDeploymentStatus:["POST /repos/{owner}/{repo}/deployments/{deployment_id}/statuses"],createDispatchEvent:["POST /repos/{owner}/{repo}/dispatches"],createForAuthenticatedUser:["POST /user/repos"],createFork:["POST /repos/{owner}/{repo}/forks"],createInOrg:["POST /orgs/{org}/repos"],createOrUpdateEnvironment:["PUT /repos/{owner}/{repo}/environments/{environment_name}"],createOrUpdateFileContents:["PUT /repos/{owner}/{repo}/contents/{path}"],createOrgRuleset:["POST /orgs/{org}/rulesets"],createPagesDeployment:["POST /repos/{owner}/{repo}/pages/deployment"],createPagesSite:["POST /repos/{owner}/{repo}/pages"],createRelease:["POST /repos/{owner}/{repo}/releases"],createRepoRuleset:["POST /repos/{owner}/{repo}/rulesets"],createTagProtection:["POST /repos/{owner}/{repo}/tags/protection"],createUsingTemplate:["POST /repos/{template_owner}/{template_repo}/generate"],createWebhook:["POST /repos/{owner}/{repo}/hooks"],declineInvitation:["DELETE /user/repository_invitations/{invitation_id}",{},{renamed:["repos","declineInvitationForAuthenticatedUser"]}],declineInvitationForAuthenticatedUser:["DELETE /user/repository_invitations/{invitation_id}"],delete:["DELETE /repos/{owner}/{repo}"],deleteAccessRestrictions:["DELETE /repos/{owner}/{repo}/branches/{branch}/protection/restrictions"],deleteAdminBranchProtection:["DELETE /repos/{owner}/{repo}/branches/{branch}/protection/enforce_admins"],deleteAnEnvironment:["DELETE /repos/{owner}/{repo}/environments/{environment_name}"],deleteAutolink:["DELETE /repos/{owner}/{repo}/autolinks/{autolink_id}"],deleteBranchProtection:["DELETE /repos/{owner}/{repo}/branches/{branch}/protection"],deleteCommitComment:["DELETE /repos/{owner}/{repo}/comments/{comment_id}"],deleteCommitSignatureProtection:["DELETE /repos/{owner}/{repo}/branches/{branch}/protection/required_signatures"],deleteDeployKey:["DELETE /repos/{owner}/{repo}/keys/{key_id}"],deleteDeployment:["DELETE /repos/{owner}/{repo}/deployments/{deployment_id}"],deleteDeploymentBranchPolicy:["DELETE /repos/{owner}/{repo}/environments/{environment_name}/deployment-branch-policies/{branch_policy_id}"],deleteFile:["DELETE /repos/{owner}/{repo}/contents/{path}"],deleteInvitation:["DELETE /repos/{owner}/{repo}/invitations/{invitation_id}"],deleteOrgRuleset:["DELETE /orgs/{org}/rulesets/{ruleset_id}"],deletePagesSite:["DELETE /repos/{owner}/{repo}/pages"],deletePullRequestReviewProtection:["DELETE /repos/{owner}/{repo}/branches/{branch}/protection/required_pull_request_reviews"],deleteRelease:["DELETE /repos/{owner}/{repo}/releases/{release_id}"],deleteReleaseAsset:["DELETE /repos/{owner}/{repo}/releases/assets/{asset_id}"],deleteRepoRuleset:["DELETE /repos/{owner}/{repo}/rulesets/{ruleset_id}"],deleteTagProtection:["DELETE /repos/{owner}/{repo}/tags/protection/{tag_protection_id}"],deleteWebhook:["DELETE /repos/{owner}/{repo}/hooks/{hook_id}"],disableAutomatedSecurityFixes:["DELETE /repos/{owner}/{repo}/automated-security-fixes"],disableDeploymentProtectionRule:["DELETE /repos/{owner}/{repo}/environments/{environment_name}/deployment_protection_rules/{protection_rule_id}"],disableLfsForRepo:["DELETE /repos/{owner}/{repo}/lfs"],disableVulnerabilityAlerts:["DELETE /repos/{owner}/{repo}/vulnerability-alerts"],downloadArchive:["GET /repos/{owner}/{repo}/zipball/{ref}",{},{renamed:["repos","downloadZipballArchive"]}],downloadTarballArchive:["GET /repos/{owner}/{repo}/tarball/{ref}"],downloadZipballArchive:["GET /repos/{owner}/{repo}/zipball/{ref}"],enableAutomatedSecurityFixes:["PUT /repos/{owner}/{repo}/automated-security-fixes"],enableLfsForRepo:["PUT /repos/{owner}/{repo}/lfs"],enableVulnerabilityAlerts:["PUT /repos/{owner}/{repo}/vulnerability-alerts"],generateReleaseNotes:["POST /repos/{owner}/{repo}/releases/generate-notes"],get:["GET /repos/{owner}/{repo}"],getAccessRestrictions:["GET /repos/{owner}/{repo}/branches/{branch}/protection/restrictions"],getAdminBranchProtection:["GET /repos/{owner}/{repo}/branches/{branch}/protection/enforce_admins"],getAllDeploymentProtectionRules:["GET /repos/{owner}/{repo}/environments/{environment_name}/deployment_protection_rules"],getAllEnvironments:["GET /repos/{owner}/{repo}/environments"],getAllStatusCheckContexts:["GET /repos/{owner}/{repo}/branches/{branch}/protection/required_status_checks/contexts"],getAllTopics:["GET /repos/{owner}/{repo}/topics"],getAppsWithAccessToProtectedBranch:["GET /repos/{owner}/{repo}/branches/{branch}/protection/restrictions/apps"],getAutolink:["GET /repos/{owner}/{repo}/autolinks/{autolink_id}"],getBranch:["GET /repos/{owner}/{repo}/branches/{branch}"],getBranchProtection:["GET /repos/{owner}/{repo}/branches/{branch}/protection"],getBranchRules:["GET /repos/{owner}/{repo}/rules/branches/{branch}"],getClones:["GET /repos/{owner}/{repo}/traffic/clones"],getCodeFrequencyStats:["GET /repos/{owner}/{repo}/stats/code_frequency"],getCollaboratorPermissionLevel:["GET /repos/{owner}/{repo}/collaborators/{username}/permission"],getCombinedStatusForRef:["GET /repos/{owner}/{repo}/commits/{ref}/status"],getCommit:["GET /repos/{owner}/{repo}/commits/{ref}"],getCommitActivityStats:["GET /repos/{owner}/{repo}/stats/commit_activity"],getCommitComment:["GET /repos/{owner}/{repo}/comments/{comment_id}"],getCommitSignatureProtection:["GET /repos/{owner}/{repo}/branches/{branch}/protection/required_signatures"],getCommunityProfileMetrics:["GET /repos/{owner}/{repo}/community/profile"],getContent:["GET /repos/{owner}/{repo}/contents/{path}"],getContributorsStats:["GET /repos/{owner}/{repo}/stats/contributors"],getCustomDeploymentProtectionRule:["GET /repos/{owner}/{repo}/environments/{environment_name}/deployment_protection_rules/{protection_rule_id}"],getDeployKey:["GET /repos/{owner}/{repo}/keys/{key_id}"],getDeployment:["GET /repos/{owner}/{repo}/deployments/{deployment_id}"],getDeploymentBranchPolicy:["GET /repos/{owner}/{repo}/environments/{environment_name}/deployment-branch-policies/{branch_policy_id}"],getDeploymentStatus:["GET /repos/{owner}/{repo}/deployments/{deployment_id}/statuses/{status_id}"],getEnvironment:["GET /repos/{owner}/{repo}/environments/{environment_name}"],getLatestPagesBuild:["GET /repos/{owner}/{repo}/pages/builds/latest"],getLatestRelease:["GET /repos/{owner}/{repo}/releases/latest"],getOrgRuleset:["GET /orgs/{org}/rulesets/{ruleset_id}"],getOrgRulesets:["GET /orgs/{org}/rulesets"],getPages:["GET /repos/{owner}/{repo}/pages"],getPagesBuild:["GET /repos/{owner}/{repo}/pages/builds/{build_id}"],getPagesHealthCheck:["GET /repos/{owner}/{repo}/pages/health"],getParticipationStats:["GET /repos/{owner}/{repo}/stats/participation"],getPullRequestReviewProtection:["GET /repos/{owner}/{repo}/branches/{branch}/protection/required_pull_request_reviews"],getPunchCardStats:["GET /repos/{owner}/{repo}/stats/punch_card"],getReadme:["GET /repos/{owner}/{repo}/readme"],getReadmeInDirectory:["GET /repos/{owner}/{repo}/readme/{dir}"],getRelease:["GET /repos/{owner}/{repo}/releases/{release_id}"],getReleaseAsset:["GET /repos/{owner}/{repo}/releases/assets/{asset_id}"],getReleaseByTag:["GET /repos/{owner}/{repo}/releases/tags/{tag}"],getRepoRuleset:["GET /repos/{owner}/{repo}/rulesets/{ruleset_id}"],getRepoRulesets:["GET /repos/{owner}/{repo}/rulesets"],getStatusChecksProtection:["GET /repos/{owner}/{repo}/branches/{branch}/protection/required_status_checks"],getTeamsWithAccessToProtectedBranch:["GET /repos/{owner}/{repo}/branches/{branch}/protection/restrictions/teams"],getTopPaths:["GET /repos/{owner}/{repo}/traffic/popular/paths"],getTopReferrers:["GET /repos/{owner}/{repo}/traffic/popular/referrers"],getUsersWithAccessToProtectedBranch:["GET /repos/{owner}/{repo}/branches/{branch}/protection/restrictions/users"],getViews:["GET /repos/{owner}/{repo}/traffic/views"],getWebhook:["GET /repos/{owner}/{repo}/hooks/{hook_id}"],getWebhookConfigForRepo:["GET /repos/{owner}/{repo}/hooks/{hook_id}/config"],getWebhookDelivery:["GET /repos/{owner}/{repo}/hooks/{hook_id}/deliveries/{delivery_id}"],listAutolinks:["GET /repos/{owner}/{repo}/autolinks"],listBranches:["GET /repos/{owner}/{repo}/branches"],listBranchesForHeadCommit:["GET /repos/{owner}/{repo}/commits/{commit_sha}/branches-where-head"],listCollaborators:["GET /repos/{owner}/{repo}/collaborators"],listCommentsForCommit:["GET /repos/{owner}/{repo}/commits/{commit_sha}/comments"],listCommitCommentsForRepo:["GET /repos/{owner}/{repo}/comments"],listCommitStatusesForRef:["GET /repos/{owner}/{repo}/commits/{ref}/statuses"],listCommits:["GET /repos/{owner}/{repo}/commits"],listContributors:["GET /repos/{owner}/{repo}/contributors"],listCustomDeploymentRuleIntegrations:["GET /repos/{owner}/{repo}/environments/{environment_name}/deployment_protection_rules/apps"],listDeployKeys:["GET /repos/{owner}/{repo}/keys"],listDeploymentBranchPolicies:["GET /repos/{owner}/{repo}/environments/{environment_name}/deployment-branch-policies"],listDeploymentStatuses:["GET /repos/{owner}/{repo}/deployments/{deployment_id}/statuses"],listDeployments:["GET /repos/{owner}/{repo}/deployments"],listForAuthenticatedUser:["GET /user/repos"],listForOrg:["GET /orgs/{org}/repos"],listForUser:["GET /users/{username}/repos"],listForks:["GET /repos/{owner}/{repo}/forks"],listInvitations:["GET /repos/{owner}/{repo}/invitations"],listInvitationsForAuthenticatedUser:["GET /user/repository_invitations"],listLanguages:["GET /repos/{owner}/{repo}/languages"],listPagesBuilds:["GET /repos/{owner}/{repo}/pages/builds"],listPublic:["GET /repositories"],listPullRequestsAssociatedWithCommit:["GET /repos/{owner}/{repo}/commits/{commit_sha}/pulls"],listReleaseAssets:["GET /repos/{owner}/{repo}/releases/{release_id}/assets"],listReleases:["GET /repos/{owner}/{repo}/releases"],listTagProtection:["GET /repos/{owner}/{repo}/tags/protection"],listTags:["GET /repos/{owner}/{repo}/tags"],listTeams:["GET /repos/{owner}/{repo}/teams"],listWebhookDeliveries:["GET /repos/{owner}/{repo}/hooks/{hook_id}/deliveries"],listWebhooks:["GET /repos/{owner}/{repo}/hooks"],merge:["POST /repos/{owner}/{repo}/merges"],mergeUpstream:["POST /repos/{owner}/{repo}/merge-upstream"],pingWebhook:["POST /repos/{owner}/{repo}/hooks/{hook_id}/pings"],redeliverWebhookDelivery:["POST /repos/{owner}/{repo}/hooks/{hook_id}/deliveries/{delivery_id}/attempts"],removeAppAccessRestrictions:["DELETE /repos/{owner}/{repo}/branches/{branch}/protection/restrictions/apps",{},{mapToData:"apps"}],removeCollaborator:["DELETE /repos/{owner}/{repo}/collaborators/{username}"],removeStatusCheckContexts:["DELETE /repos/{owner}/{repo}/branches/{branch}/protection/required_status_checks/contexts",{},{mapToData:"contexts"}],removeStatusCheckProtection:["DELETE /repos/{owner}/{repo}/branches/{branch}/protection/required_status_checks"],removeTeamAccessRestrictions:["DELETE /repos/{owner}/{repo}/branches/{branch}/protection/restrictions/teams",{},{mapToData:"teams"}],removeUserAccessRestrictions:["DELETE /repos/{owner}/{repo}/branches/{branch}/protection/restrictions/users",{},{mapToData:"users"}],renameBranch:["POST /repos/{owner}/{repo}/branches/{branch}/rename"],replaceAllTopics:["PUT /repos/{owner}/{repo}/topics"],requestPagesBuild:["POST /repos/{owner}/{repo}/pages/builds"],setAdminBranchProtection:["POST /repos/{owner}/{repo}/branches/{branch}/protection/enforce_admins"],setAppAccessRestrictions:["PUT /repos/{owner}/{repo}/branches/{branch}/protection/restrictions/apps",{},{mapToData:"apps"}],setStatusCheckContexts:["PUT /repos/{owner}/{repo}/branches/{branch}/protection/required_status_checks/contexts",{},{mapToData:"contexts"}],setTeamAccessRestrictions:["PUT /repos/{owner}/{repo}/branches/{branch}/protection/restrictions/teams",{},{mapToData:"teams"}],setUserAccessRestrictions:["PUT /repos/{owner}/{repo}/branches/{branch}/protection/restrictions/users",{},{mapToData:"users"}],testPushWebhook:["POST /repos/{owner}/{repo}/hooks/{hook_id}/tests"],transfer:["POST /repos/{owner}/{repo}/transfer"],update:["PATCH /repos/{owner}/{repo}"],updateBranchProtection:["PUT /repos/{owner}/{repo}/branches/{branch}/protection"],updateCommitComment:["PATCH /repos/{owner}/{repo}/comments/{comment_id}"],updateDeploymentBranchPolicy:["PUT /repos/{owner}/{repo}/environments/{environment_name}/deployment-branch-policies/{branch_policy_id}"],updateInformationAboutPagesSite:["PUT /repos/{owner}/{repo}/pages"],updateInvitation:["PATCH /repos/{owner}/{repo}/invitations/{invitation_id}"],updateOrgRuleset:["PUT /orgs/{org}/rulesets/{ruleset_id}"],updatePullRequestReviewProtection:["PATCH /repos/{owner}/{repo}/branches/{branch}/protection/required_pull_request_reviews"],updateRelease:["PATCH /repos/{owner}/{repo}/releases/{release_id}"],updateReleaseAsset:["PATCH /repos/{owner}/{repo}/releases/assets/{asset_id}"],updateRepoRuleset:["PUT /repos/{owner}/{repo}/rulesets/{ruleset_id}"],updateStatusCheckPotection:["PATCH /repos/{owner}/{repo}/branches/{branch}/protection/required_status_checks",{},{renamed:["repos","updateStatusCheckProtection"]}],updateStatusCheckProtection:["PATCH /repos/{owner}/{repo}/branches/{branch}/protection/required_status_checks"],updateWebhook:["PATCH /repos/{owner}/{repo}/hooks/{hook_id}"],updateWebhookConfigForRepo:["PATCH /repos/{owner}/{repo}/hooks/{hook_id}/config"],uploadReleaseAsset:["POST /repos/{owner}/{repo}/releases/{release_id}/assets{?name,label}",{baseUrl:"https://uploads.github.com"}]},search:{code:["GET /search/code"],commits:["GET /search/commits"],issuesAndPullRequests:["GET /search/issues"],labels:["GET /search/labels"],repos:["GET /search/repositories"],topics:["GET /search/topics"],users:["GET /search/users"]},secretScanning:{getAlert:["GET /repos/{owner}/{repo}/secret-scanning/alerts/{alert_number}"],listAlertsForEnterprise:["GET /enterprises/{enterprise}/secret-scanning/alerts"],listAlertsForOrg:["GET /orgs/{org}/secret-scanning/alerts"],listAlertsForRepo:["GET /repos/{owner}/{repo}/secret-scanning/alerts"],listLocationsForAlert:["GET /repos/{owner}/{repo}/secret-scanning/alerts/{alert_number}/locations"],updateAlert:["PATCH /repos/{owner}/{repo}/secret-scanning/alerts/{alert_number}"]},securityAdvisories:{createPrivateVulnerabilityReport:["POST /repos/{owner}/{repo}/security-advisories/reports"],createRepositoryAdvisory:["POST /repos/{owner}/{repo}/security-advisories"],getRepositoryAdvisory:["GET /repos/{owner}/{repo}/security-advisories/{ghsa_id}"],listRepositoryAdvisories:["GET /repos/{owner}/{repo}/security-advisories"],updateRepositoryAdvisory:["PATCH /repos/{owner}/{repo}/security-advisories/{ghsa_id}"]},teams:{addOrUpdateMembershipForUserInOrg:["PUT /orgs/{org}/teams/{team_slug}/memberships/{username}"],addOrUpdateProjectPermissionsInOrg:["PUT /orgs/{org}/teams/{team_slug}/projects/{project_id}"],addOrUpdateRepoPermissionsInOrg:["PUT /orgs/{org}/teams/{team_slug}/repos/{owner}/{repo}"],checkPermissionsForProjectInOrg:["GET /orgs/{org}/teams/{team_slug}/projects/{project_id}"],checkPermissionsForRepoInOrg:["GET /orgs/{org}/teams/{team_slug}/repos/{owner}/{repo}"],create:["POST /orgs/{org}/teams"],createDiscussionCommentInOrg:["POST /orgs/{org}/teams/{team_slug}/discussions/{discussion_number}/comments"],createDiscussionInOrg:["POST /orgs/{org}/teams/{team_slug}/discussions"],deleteDiscussionCommentInOrg:["DELETE /orgs/{org}/teams/{team_slug}/discussions/{discussion_number}/comments/{comment_number}"],deleteDiscussionInOrg:["DELETE /orgs/{org}/teams/{team_slug}/discussions/{discussion_number}"],deleteInOrg:["DELETE /orgs/{org}/teams/{team_slug}"],getByName:["GET /orgs/{org}/teams/{team_slug}"],getDiscussionCommentInOrg:["GET /orgs/{org}/teams/{team_slug}/discussions/{discussion_number}/comments/{comment_number}"],getDiscussionInOrg:["GET /orgs/{org}/teams/{team_slug}/discussions/{discussion_number}"],getMembershipForUserInOrg:["GET /orgs/{org}/teams/{team_slug}/memberships/{username}"],list:["GET /orgs/{org}/teams"],listChildInOrg:["GET /orgs/{org}/teams/{team_slug}/teams"],listDiscussionCommentsInOrg:["GET /orgs/{org}/teams/{team_slug}/discussions/{discussion_number}/comments"],listDiscussionsInOrg:["GET /orgs/{org}/teams/{team_slug}/discussions"],listForAuthenticatedUser:["GET /user/teams"],listMembersInOrg:["GET /orgs/{org}/teams/{team_slug}/members"],listPendingInvitationsInOrg:["GET /orgs/{org}/teams/{team_slug}/invitations"],listProjectsInOrg:["GET /orgs/{org}/teams/{team_slug}/projects"],listReposInOrg:["GET /orgs/{org}/teams/{team_slug}/repos"],removeMembershipForUserInOrg:["DELETE /orgs/{org}/teams/{team_slug}/memberships/{username}"],removeProjectInOrg:["DELETE /orgs/{org}/teams/{team_slug}/projects/{project_id}"],removeRepoInOrg:["DELETE /orgs/{org}/teams/{team_slug}/repos/{owner}/{repo}"],updateDiscussionCommentInOrg:["PATCH /orgs/{org}/teams/{team_slug}/discussions/{discussion_number}/comments/{comment_number}"],updateDiscussionInOrg:["PATCH /orgs/{org}/teams/{team_slug}/discussions/{discussion_number}"],updateInOrg:["PATCH /orgs/{org}/teams/{team_slug}"]},users:{addEmailForAuthenticated:["POST /user/emails",{},{renamed:["users","addEmailForAuthenticatedUser"]}],addEmailForAuthenticatedUser:["POST /user/emails"],addSocialAccountForAuthenticatedUser:["POST /user/social_accounts"],block:["PUT /user/blocks/{username}"],checkBlocked:["GET /user/blocks/{username}"],checkFollowingForUser:["GET /users/{username}/following/{target_user}"],checkPersonIsFollowedByAuthenticated:["GET /user/following/{username}"],createGpgKeyForAuthenticated:["POST /user/gpg_keys",{},{renamed:["users","createGpgKeyForAuthenticatedUser"]}],createGpgKeyForAuthenticatedUser:["POST /user/gpg_keys"],createPublicSshKeyForAuthenticated:["POST /user/keys",{},{renamed:["users","createPublicSshKeyForAuthenticatedUser"]}],createPublicSshKeyForAuthenticatedUser:["POST /user/keys"],createSshSigningKeyForAuthenticatedUser:["POST /user/ssh_signing_keys"],deleteEmailForAuthenticated:["DELETE /user/emails",{},{renamed:["users","deleteEmailForAuthenticatedUser"]}],deleteEmailForAuthenticatedUser:["DELETE /user/emails"],deleteGpgKeyForAuthenticated:["DELETE /user/gpg_keys/{gpg_key_id}",{},{renamed:["users","deleteGpgKeyForAuthenticatedUser"]}],deleteGpgKeyForAuthenticatedUser:["DELETE /user/gpg_keys/{gpg_key_id}"],deletePublicSshKeyForAuthenticated:["DELETE /user/keys/{key_id}",{},{renamed:["users","deletePublicSshKeyForAuthenticatedUser"]}],deletePublicSshKeyForAuthenticatedUser:["DELETE /user/keys/{key_id}"],deleteSocialAccountForAuthenticatedUser:["DELETE /user/social_accounts"],deleteSshSigningKeyForAuthenticatedUser:["DELETE /user/ssh_signing_keys/{ssh_signing_key_id}"],follow:["PUT /user/following/{username}"],getAuthenticated:["GET /user"],getByUsername:["GET /users/{username}"],getContextForUser:["GET /users/{username}/hovercard"],getGpgKeyForAuthenticated:["GET /user/gpg_keys/{gpg_key_id}",{},{renamed:["users","getGpgKeyForAuthenticatedUser"]}],getGpgKeyForAuthenticatedUser:["GET /user/gpg_keys/{gpg_key_id}"],getPublicSshKeyForAuthenticated:["GET /user/keys/{key_id}",{},{renamed:["users","getPublicSshKeyForAuthenticatedUser"]}],getPublicSshKeyForAuthenticatedUser:["GET /user/keys/{key_id}"],getSshSigningKeyForAuthenticatedUser:["GET /user/ssh_signing_keys/{ssh_signing_key_id}"],list:["GET /users"],listBlockedByAuthenticated:["GET /user/blocks",{},{renamed:["users","listBlockedByAuthenticatedUser"]}],listBlockedByAuthenticatedUser:["GET /user/blocks"],listEmailsForAuthenticated:["GET /user/emails",{},{renamed:["users","listEmailsForAuthenticatedUser"]}],listEmailsForAuthenticatedUser:["GET /user/emails"],listFollowedByAuthenticated:["GET /user/following",{},{renamed:["users","listFollowedByAuthenticatedUser"]}],listFollowedByAuthenticatedUser:["GET /user/following"],listFollowersForAuthenticatedUser:["GET /user/followers"],listFollowersForUser:["GET /users/{username}/followers"],listFollowingForUser:["GET /users/{username}/following"],listGpgKeysForAuthenticated:["GET /user/gpg_keys",{},{renamed:["users","listGpgKeysForAuthenticatedUser"]}],listGpgKeysForAuthenticatedUser:["GET /user/gpg_keys"],listGpgKeysForUser:["GET /users/{username}/gpg_keys"],listPublicEmailsForAuthenticated:["GET /user/public_emails",{},{renamed:["users","listPublicEmailsForAuthenticatedUser"]}],listPublicEmailsForAuthenticatedUser:["GET /user/public_emails"],listPublicKeysForUser:["GET /users/{username}/keys"],listPublicSshKeysForAuthenticated:["GET /user/keys",{},{renamed:["users","listPublicSshKeysForAuthenticatedUser"]}],listPublicSshKeysForAuthenticatedUser:["GET /user/keys"],listSocialAccountsForAuthenticatedUser:["GET /user/social_accounts"],listSocialAccountsForUser:["GET /users/{username}/social_accounts"],listSshSigningKeysForAuthenticatedUser:["GET /user/ssh_signing_keys"],listSshSigningKeysForUser:["GET /users/{username}/ssh_signing_keys"],setPrimaryEmailVisibilityForAuthenticated:["PATCH /user/email/visibility",{},{renamed:["users","setPrimaryEmailVisibilityForAuthenticatedUser"]}],setPrimaryEmailVisibilityForAuthenticatedUser:["PATCH /user/email/visibility"],unblock:["DELETE /user/blocks/{username}"],unfollow:["DELETE /user/following/{username}"],updateAuthenticated:["PATCH /user"]}},tn=en,Ie=new Map;for(const[e,t]of Object.entries(tn))for(const[r,s]of Object.entries(t)){const[o,n,i]=s,[c,d]=o.split(/ /),p=Object.assign({method:c,url:d},n);Ie.has(e)||Ie.set(e,new Map),Ie.get(e).set(r,{scope:e,methodName:r,endpointDefaults:p,decorations:i})}var rn={get({octokit:e,scope:t,cache:r},s){if(r[s])return r[s];const{decorations:o,endpointDefaults:n}=Ie.get(t).get(s);return o?r[s]=on(e,t,s,n,o):r[s]=e.request.defaults(n),r[s]}};function sn(e){const t={};for(const r of Ie.keys())t[r]=new Proxy({octokit:e,scope:r,cache:{}},rn);return t}function on(e,t,r,s,o){const n=e.request.defaults(s);function i(...c){let d=n.endpoint.merge(...c);if(o.mapToData)return d=Object.assign({},d,{data:d[o.mapToData],[o.mapToData]:void 0}),n(d);if(o.renamed){const[p,m]=o.renamed;e.log.warn(`octokit.${t}.${r}() has been renamed to octokit.${p}.${m}()`)}if(o.deprecated&&e.log.warn(o.deprecated),o.renamedParameters){const p=n.endpoint.merge(...c);for(const[m,T]of Object.entries(o.renamedParameters))m in p&&(e.log.warn(`"${m}" parameter is deprecated for "octokit.${t}.${r}()". Use "${T}" instead`),T in p||(p[T]=p[m]),delete p[m]);return n(p)}return n(...c)}return Object.assign(i,n)}function Jr(e){return{rest:sn(e)}}Jr.VERSION=Zo;var Yr={exports:{}};(function(e,t){(function(r,s){e.exports=s()})(Me,function(){var r=typeof globalThis<"u"?globalThis:typeof window<"u"?window:typeof Me<"u"?Me:typeof self<"u"?self:{};function s(v){return v&&v.default||v}var o=function(v,u,a={}){var l,h,f;for(l in u)f=u[l],a[l]=(h=v[l])!=null?h:f;return a},n=function(v,u,a={}){var l,h;for(l in v)h=v[l],u[l]!==void 0&&(a[l]=h);return a},i={load:o,overwrite:n},c;c=class{constructor(u,a){this.incr=u,this.decr=a,this._first=null,this._last=null,this.length=0}push(u){var a;this.length++,typeof this.incr=="function"&&this.incr(),a={value:u,prev:this._last,next:null},this._last!=null?(this._last.next=a,this._last=a):this._first=this._last=a}shift(){var u;if(this._first!=null)return this.length--,typeof this.decr=="function"&&this.decr(),u=this._first.value,(this._first=this._first.next)!=null?this._first.prev=null:this._last=null,u}first(){if(this._first!=null)return this._first.value}getArray(){var u,a,l;for(u=this._first,l=[];u!=null;)l.push((a=u,u=u.next,a.value));return l}forEachShift(u){var a;for(a=this.shift();a!=null;)u(a),a=this.shift()}debug(){var u,a,l,h,f;for(u=this._first,f=[];u!=null;)f.push((a=u,u=u.next,{value:a.value,prev:(l=a.prev)!=null?l.value:void 0,next:(h=a.next)!=null?h.value:void 0}));return f}};var d=c,p;p=class{constructor(u){if(this.instance=u,this._events={},this.instance.on!=null||this.instance.once!=null||this.instance.removeAllListeners!=null)throw new Error("An Emitter already exists for this object");this.instance.on=(a,l)=>this._addListener(a,"many",l),this.instance.once=(a,l)=>this._addListener(a,"once",l),this.instance.removeAllListeners=(a=null)=>a!=null?delete this._events[a]:this._events={}}_addListener(u,a,l){var h;return(h=this._events)[u]==null&&(h[u]=[]),this._events[u].push({cb:l,status:a}),this.instance}listenerCount(u){return this._events[u]!=null?this._events[u].length:0}async trigger(u,...a){var l,h;try{return u!=="debug"&&this.trigger("debug",`Event triggered: ${u}`,a),this._events[u]==null?void 0:(this._events[u]=this._events[u].filter(function(f){return f.status!=="none"}),h=this._events[u].map(async f=>{var E,k;if(f.status!=="none"){f.status==="once"&&(f.status="none");try{return k=typeof f.cb=="function"?f.cb(...a):void 0,typeof(k!=null?k.then:void 0)=="function"?await k:k}catch(q){return E=q,this.trigger("error",E),null}}}),(await Promise.all(h)).find(function(f){return f!=null}))}catch(f){return l=f,this.trigger("error",l),null}}};var m=p,T,C,A;T=d,C=m,A=class{constructor(u){this.Events=new C(this),this._length=0,this._lists=(function(){var a,l,h;for(h=[],a=1,l=u;1<=l?a<=l:a>=l;1<=l?++a:--a)h.push(new T(()=>this.incr(),()=>this.decr()));return h}).call(this)}incr(){if(this._length++===0)return this.Events.trigger("leftzero")}decr(){if(--this._length===0)return this.Events.trigger("zero")}push(u){return this._lists[u.options.priority].push(u)}queued(u){return u!=null?this._lists[u].length:this._length}shiftAll(u){return this._lists.forEach(function(a){return a.forEachShift(u)})}getFirst(u=this._lists){var a,l,h;for(a=0,l=u.length;a<l;a++)if(h=u[a],h.length>0)return h;return[]}shiftLastFrom(u){return this.getFirst(this._lists.slice(u).reverse()).shift()}};var w=A,S;S=class extends Error{};var D=S,P,R,j,te,Y;te=10,R=5,Y=i,P=D,j=class{constructor(u,a,l,h,f,E,k,q){this.task=u,this.args=a,this.rejectOnDrop=f,this.Events=E,this._states=k,this.Promise=q,this.options=Y.load(l,h),this.options.priority=this._sanitizePriority(this.options.priority),this.options.id===h.id&&(this.options.id=`${this.options.id}-${this._randomIndex()}`),this.promise=new this.Promise((W,V)=>{this._resolve=W,this._reject=V}),this.retryCount=0}_sanitizePriority(u){var a;return a=~~u!==u?R:u,a<0?0:a>te-1?te-1:a}_randomIndex(){return Math.random().toString(36).slice(2)}doDrop({error:u,message:a="This job has been dropped by Bottleneck"}={}){return this._states.remove(this.options.id)?(this.rejectOnDrop&&this._reject(u??new P(a)),this.Events.trigger("dropped",{args:this.args,options:this.options,task:this.task,promise:this.promise}),!0):!1}_assertStatus(u){var a;if(a=this._states.jobStatus(this.options.id),!(a===u||u==="DONE"&&a===null))throw new P(`Invalid job status ${a}, expected ${u}. Please open an issue at https://github.com/SGrondin/bottleneck/issues`)}doReceive(){return this._states.start(this.options.id),this.Events.trigger("received",{args:this.args,options:this.options})}doQueue(u,a){return this._assertStatus("RECEIVED"),this._states.next(this.options.id),this.Events.trigger("queued",{args:this.args,options:this.options,reachedHWM:u,blocked:a})}doRun(){return this.retryCount===0?(this._assertStatus("QUEUED"),this._states.next(this.options.id)):this._assertStatus("EXECUTING"),this.Events.trigger("scheduled",{args:this.args,options:this.options})}async doExecute(u,a,l,h){var f,E,k;this.retryCount===0?(this._assertStatus("RUNNING"),this._states.next(this.options.id)):this._assertStatus("EXECUTING"),E={args:this.args,options:this.options,retryCount:this.retryCount},this.Events.trigger("executing",E);try{if(k=await(u!=null?u.schedule(this.options,this.task,...this.args):this.task(...this.args)),a())return this.doDone(E),await h(this.options,E),this._assertStatus("DONE"),this._resolve(k)}catch(q){return f=q,this._onFailure(f,E,a,l,h)}}doExpire(u,a,l){var h,f;return this._states.jobStatus(this.options.id==="RUNNING")&&this._states.next(this.options.id),this._assertStatus("EXECUTING"),f={args:this.args,options:this.options,retryCount:this.retryCount},h=new P(`This job timed out after ${this.options.expiration} ms.`),this._onFailure(h,f,u,a,l)}async _onFailure(u,a,l,h,f){var E,k;if(l())return E=await this.Events.trigger("failed",u,a),E!=null?(k=~~E,this.Events.trigger("retry",`Retrying ${this.options.id} after ${k} ms`,a),this.retryCount++,h(k)):(this.doDone(a),await f(this.options,a),this._assertStatus("DONE"),this._reject(u))}doDone(u){return this._assertStatus("EXECUTING"),this._states.next(this.options.id),this.Events.trigger("done",u)}};var Q=j,fe,Te,N;N=i,fe=D,Te=class{constructor(u,a,l){this.instance=u,this.storeOptions=a,this.clientId=this.instance._randomIndex(),N.load(l,l,this),this._nextRequest=this._lastReservoirRefresh=this._lastReservoirIncrease=Date.now(),this._running=0,this._done=0,this._unblockTime=0,this.ready=this.Promise.resolve(),this.clients={},this._startHeartbeat()}_startHeartbeat(){var u;return this.heartbeat==null&&(this.storeOptions.reservoirRefreshInterval!=null&&this.storeOptions.reservoirRefreshAmount!=null||this.storeOptions.reservoirIncreaseInterval!=null&&this.storeOptions.reservoirIncreaseAmount!=null)?typeof(u=this.heartbeat=setInterval(()=>{var a,l,h,f,E;if(f=Date.now(),this.storeOptions.reservoirRefreshInterval!=null&&f>=this._lastReservoirRefresh+this.storeOptions.reservoirRefreshInterval&&(this._lastReservoirRefresh=f,this.storeOptions.reservoir=this.storeOptions.reservoirRefreshAmount,this.instance._drainAll(this.computeCapacity())),this.storeOptions.reservoirIncreaseInterval!=null&&f>=this._lastReservoirIncrease+this.storeOptions.reservoirIncreaseInterval&&({reservoirIncreaseAmount:a,reservoirIncreaseMaximum:h,reservoir:E}=this.storeOptions,this._lastReservoirIncrease=f,l=h!=null?Math.min(a,h-E):a,l>0))return this.storeOptions.reservoir+=l,this.instance._drainAll(this.computeCapacity())},this.heartbeatInterval)).unref=="function"?u.unref():void 0:clearInterval(this.heartbeat)}async __publish__(u){return await this.yieldLoop(),this.instance.Events.trigger("message",u.toString())}async __disconnect__(u){return await this.yieldLoop(),clearInterval(this.heartbeat),this.Promise.resolve()}yieldLoop(u=0){return new this.Promise(function(a,l){return setTimeout(a,u)})}computePenalty(){var u;return(u=this.storeOptions.penalty)!=null?u:15*this.storeOptions.minTime||5e3}async __updateSettings__(u){return await this.yieldLoop(),N.overwrite(u,u,this.storeOptions),this._startHeartbeat(),this.instance._drainAll(this.computeCapacity()),!0}async __running__(){return await this.yieldLoop(),this._running}async __queued__(){return await this.yieldLoop(),this.instance.queued()}async __done__(){return await this.yieldLoop(),this._done}async __groupCheck__(u){return await this.yieldLoop(),this._nextRequest+this.timeout<u}computeCapacity(){var u,a;return{maxConcurrent:u,reservoir:a}=this.storeOptions,u!=null&&a!=null?Math.min(u-this._running,a):u!=null?u-this._running:a??null}conditionsCheck(u){var a;return a=this.computeCapacity(),a==null||u<=a}async __incrementReservoir__(u){var a;return await this.yieldLoop(),a=this.storeOptions.reservoir+=u,this.instance._drainAll(this.computeCapacity()),a}async __currentReservoir__(){return await this.yieldLoop(),this.storeOptions.reservoir}isBlocked(u){return this._unblockTime>=u}check(u,a){return this.conditionsCheck(u)&&this._nextRequest-a<=0}async __check__(u){var a;return await this.yieldLoop(),a=Date.now(),this.check(u,a)}async __register__(u,a,l){var h,f;return await this.yieldLoop(),h=Date.now(),this.conditionsCheck(a)?(this._running+=a,this.storeOptions.reservoir!=null&&(this.storeOptions.reservoir-=a),f=Math.max(this._nextRequest-h,0),this._nextRequest=h+f+this.storeOptions.minTime,{success:!0,wait:f,reservoir:this.storeOptions.reservoir}):{success:!1}}strategyIsBlock(){return this.storeOptions.strategy===3}async __submit__(u,a){var l,h,f;if(await this.yieldLoop(),this.storeOptions.maxConcurrent!=null&&a>this.storeOptions.maxConcurrent)throw new fe(`Impossible to add a job having a weight of ${a} to a limiter having a maxConcurrent setting of ${this.storeOptions.maxConcurrent}`);return h=Date.now(),f=this.storeOptions.highWater!=null&&u===this.storeOptions.highWater&&!this.check(a,h),l=this.strategyIsBlock()&&(f||this.isBlocked(h)),l&&(this._unblockTime=h+this.computePenalty(),this._nextRequest=this._unblockTime+this.storeOptions.minTime,this.instance._dropAllQueued()),{reachedHWM:f,blocked:l,strategy:this.storeOptions.strategy}}async __free__(u,a){return await this.yieldLoop(),this._running-=a,this._done+=a,this.instance._drainAll(this.computeCapacity()),{running:this._running}}};var $=Te,Ee,Ge;Ee=D,Ge=class{constructor(u){this.status=u,this._jobs={},this.counts=this.status.map(function(){return 0})}next(u){var a,l;if(a=this._jobs[u],l=a+1,a!=null&&l<this.status.length)return this.counts[a]--,this.counts[l]++,this._jobs[u]++;if(a!=null)return this.counts[a]--,delete this._jobs[u]}start(u){var a;return a=0,this._jobs[u]=a,this.counts[a]++}remove(u){var a;return a=this._jobs[u],a!=null&&(this.counts[a]--,delete this._jobs[u]),a!=null}jobStatus(u){var a;return(a=this.status[this._jobs[u]])!=null?a:null}statusJobs(u){var a,l,h,f,E;if(u!=null){if(l=this.status.indexOf(u),l<0)throw new Ee(`status must be one of ${this.status.join(", ")}`);h=this._jobs,f=[];for(a in h)E=h[a],E===l&&f.push(a);return f}else return Object.keys(this._jobs)}statusCounts(){return this.counts.reduce((u,a,l)=>(u[this.status[l]]=a,u),{})}};var G=Ge,b,_;b=d,_=class{constructor(u,a){this.schedule=this.schedule.bind(this),this.name=u,this.Promise=a,this._running=0,this._queue=new b}isEmpty(){return this._queue.length===0}async _tryToRun(){var u,a,l,h,f,E,k;if(this._running<1&&this._queue.length>0)return this._running++,{task:k,args:u,resolve:f,reject:h}=this._queue.shift(),a=await async function(){try{return E=await k(...u),function(){return f(E)}}catch(q){return l=q,function(){return h(l)}}}(),this._running--,this._tryToRun(),a()}schedule(u,...a){var l,h,f;return f=h=null,l=new this.Promise(function(E,k){return f=E,h=k}),this._queue.push({task:u,args:a,resolve:f,reject:h}),this._tryToRun(),l}};var O=_,y="2.19.5",F={version:y},U=Object.freeze({version:y,default:F}),L=()=>console.log("You must import the full version of Bottleneck in order to use this feature."),x=()=>console.log("You must import the full version of Bottleneck in order to use this feature."),B=()=>console.log("You must import the full version of Bottleneck in order to use this feature."),H,J,ae,oe,le,Z;Z=i,H=m,oe=L,ae=x,le=B,J=(function(){class v{constructor(a={}){this.deleteKey=this.deleteKey.bind(this),this.limiterOptions=a,Z.load(this.limiterOptions,this.defaults,this),this.Events=new H(this),this.instances={},this.Bottleneck=Vt,this._startAutoCleanup(),this.sharedConnection=this.connection!=null,this.connection==null&&(this.limiterOptions.datastore==="redis"?this.connection=new oe(Object.assign({},this.limiterOptions,{Events:this.Events})):this.limiterOptions.datastore==="ioredis"&&(this.connection=new ae(Object.assign({},this.limiterOptions,{Events:this.Events}))))}key(a=""){var l;return(l=this.instances[a])!=null?l:(()=>{var h;return h=this.instances[a]=new this.Bottleneck(Object.assign(this.limiterOptions,{id:`${this.id}-${a}`,timeout:this.timeout,connection:this.connection})),this.Events.trigger("created",h,a),h})()}async deleteKey(a=""){var l,h;return h=this.instances[a],this.connection&&(l=await this.connection.__runCommand__(["del",...le.allKeys(`${this.id}-${a}`)])),h!=null&&(delete this.instances[a],await h.disconnect()),h!=null||l>0}limiters(){var a,l,h,f;l=this.instances,h=[];for(a in l)f=l[a],h.push({key:a,limiter:f});return h}keys(){return Object.keys(this.instances)}async clusterKeys(){var a,l,h,f,E,k,q,W,V;if(this.connection==null)return this.Promise.resolve(this.keys());for(k=[],a=null,V=`b_${this.id}-`.length,l=9;a!==0;)for([W,h]=await this.connection.__runCommand__(["scan",a??0,"match",`b_${this.id}-*_settings`,"count",1e4]),a=~~W,f=0,q=h.length;f<q;f++)E=h[f],k.push(E.slice(V,-l));return k}_startAutoCleanup(){var a;return clearInterval(this.interval),typeof(a=this.interval=setInterval(async()=>{var l,h,f,E,k,q;k=Date.now(),f=this.instances,E=[];for(h in f){q=f[h];try{await q._store.__groupCheck__(k)?E.push(this.deleteKey(h)):E.push(void 0)}catch(W){l=W,E.push(q.Events.trigger("error",l))}}return E},this.timeout/2)).unref=="function"?a.unref():void 0}updateSettings(a={}){if(Z.overwrite(a,this.defaults,this),Z.overwrite(a,a,this.limiterOptions),a.timeout!=null)return this._startAutoCleanup()}disconnect(a=!0){var l;if(!this.sharedConnection)return(l=this.connection)!=null?l.disconnect(a):void 0}}return v.prototype.defaults={timeout:1e3*60*5,connection:null,Promise,id:"group-key"},v}).call(r);var z=J,re,pe,_e;_e=i,pe=m,re=(function(){class v{constructor(a={}){this.options=a,_e.load(this.options,this.defaults,this),this.Events=new pe(this),this._arr=[],this._resetPromise(),this._lastFlush=Date.now()}_resetPromise(){return this._promise=new this.Promise((a,l)=>this._resolve=a)}_flush(){return clearTimeout(this._timeout),this._lastFlush=Date.now(),this._resolve(),this.Events.trigger("batch",this._arr),this._arr=[],this._resetPromise()}add(a){var l;return this._arr.push(a),l=this._promise,this._arr.length===this.maxSize?this._flush():this.maxTime!=null&&this._arr.length===1&&(this._timeout=setTimeout(()=>this._flush(),this.maxTime)),l}}return v.prototype.defaults={maxTime:null,maxSize:null,Promise},v}).call(r);var Bs=re,Ms=()=>console.log("You must import the full version of Bottleneck in order to use this feature."),Hs=s(U),jt,Nt,at,ct,Bt,ut,Mt,Ht,Wt,lt,ne,zt=[].splice;ut=10,Nt=5,ne=i,Mt=w,ct=Q,Bt=$,Ht=Ms,at=m,Wt=G,lt=O,jt=(function(){class v{constructor(a={},...l){var h,f;this._addToQueue=this._addToQueue.bind(this),this._validateOptions(a,l),ne.load(a,this.instanceDefaults,this),this._queues=new Mt(ut),this._scheduled={},this._states=new Wt(["RECEIVED","QUEUED","RUNNING","EXECUTING"].concat(this.trackDoneStatus?["DONE"]:[])),this._limiter=null,this.Events=new at(this),this._submitLock=new lt("submit",this.Promise),this._registerLock=new lt("register",this.Promise),f=ne.load(a,this.storeDefaults,{}),this._store=(function(){if(this.datastore==="redis"||this.datastore==="ioredis"||this.connection!=null)return h=ne.load(a,this.redisStoreDefaults,{}),new Ht(this,f,h);if(this.datastore==="local")return h=ne.load(a,this.localStoreDefaults,{}),new Bt(this,f,h);throw new v.prototype.BottleneckError(`Invalid datastore type: ${this.datastore}`)}).call(this),this._queues.on("leftzero",()=>{var E;return(E=this._store.heartbeat)!=null&&typeof E.ref=="function"?E.ref():void 0}),this._queues.on("zero",()=>{var E;return(E=this._store.heartbeat)!=null&&typeof E.unref=="function"?E.unref():void 0})}_validateOptions(a,l){if(!(a!=null&&typeof a=="object"&&l.length===0))throw new v.prototype.BottleneckError("Bottleneck v2 takes a single object argument. Refer to https://github.com/SGrondin/bottleneck#upgrading-to-v2 if you're upgrading from Bottleneck v1.")}ready(){return this._store.ready}clients(){return this._store.clients}channel(){return`b_${this.id}`}channel_client(){return`b_${this.id}_${this._store.clientId}`}publish(a){return this._store.__publish__(a)}disconnect(a=!0){return this._store.__disconnect__(a)}chain(a){return this._limiter=a,this}queued(a){return this._queues.queued(a)}clusterQueued(){return this._store.__queued__()}empty(){return this.queued()===0&&this._submitLock.isEmpty()}running(){return this._store.__running__()}done(){return this._store.__done__()}jobStatus(a){return this._states.jobStatus(a)}jobs(a){return this._states.statusJobs(a)}counts(){return this._states.statusCounts()}_randomIndex(){return Math.random().toString(36).slice(2)}check(a=1){return this._store.__check__(a)}_clearGlobalState(a){return this._scheduled[a]!=null?(clearTimeout(this._scheduled[a].expiration),delete this._scheduled[a],!0):!1}async _free(a,l,h,f){var E,k;try{if({running:k}=await this._store.__free__(a,h.weight),this.Events.trigger("debug",`Freed ${h.id}`,f),k===0&&this.empty())return this.Events.trigger("idle")}catch(q){return E=q,this.Events.trigger("error",E)}}_run(a,l,h){var f,E,k;return l.doRun(),f=this._clearGlobalState.bind(this,a),k=this._run.bind(this,a,l),E=this._free.bind(this,a,l),this._scheduled[a]={timeout:setTimeout(()=>l.doExecute(this._limiter,f,k,E),h),expiration:l.options.expiration!=null?setTimeout(function(){return l.doExpire(f,k,E)},h+l.options.expiration):void 0,job:l}}_drainOne(a){return this._registerLock.schedule(()=>{var l,h,f,E,k;return this.queued()===0?this.Promise.resolve(null):(k=this._queues.getFirst(),{options:E,args:l}=f=k.first(),a!=null&&E.weight>a?this.Promise.resolve(null):(this.Events.trigger("debug",`Draining ${E.id}`,{args:l,options:E}),h=this._randomIndex(),this._store.__register__(h,E.weight,E.expiration).then(({success:q,wait:W,reservoir:V})=>{var Fe;return this.Events.trigger("debug",`Drained ${E.id}`,{success:q,args:l,options:E}),q?(k.shift(),Fe=this.empty(),Fe&&this.Events.trigger("empty"),V===0&&this.Events.trigger("depleted",Fe),this._run(h,f,W),this.Promise.resolve(E.weight)):this.Promise.resolve(null)})))})}_drainAll(a,l=0){return this._drainOne(a).then(h=>{var f;return h!=null?(f=a!=null?a-h:a,this._drainAll(f,l+h)):this.Promise.resolve(l)}).catch(h=>this.Events.trigger("error",h))}_dropAllQueued(a){return this._queues.shiftAll(function(l){return l.doDrop({message:a})})}stop(a={}){var l,h;return a=ne.load(a,this.stopDefaults),h=f=>{var E;return E=()=>{var k;return k=this._states.counts,k[0]+k[1]+k[2]+k[3]===f},new this.Promise((k,q)=>E()?k():this.on("done",()=>{if(E())return this.removeAllListeners("done"),k()}))},l=a.dropWaitingJobs?(this._run=function(f,E){return E.doDrop({message:a.dropErrorMessage})},this._drainOne=()=>this.Promise.resolve(null),this._registerLock.schedule(()=>this._submitLock.schedule(()=>{var f,E,k;E=this._scheduled;for(f in E)k=E[f],this.jobStatus(k.job.options.id)==="RUNNING"&&(clearTimeout(k.timeout),clearTimeout(k.expiration),k.job.doDrop({message:a.dropErrorMessage}));return this._dropAllQueued(a.dropErrorMessage),h(0)}))):this.schedule({priority:ut-1,weight:0},()=>h(1)),this._receive=function(f){return f._reject(new v.prototype.BottleneckError(a.enqueueErrorMessage))},this.stop=()=>this.Promise.reject(new v.prototype.BottleneckError("stop() has already been called")),l}async _addToQueue(a){var l,h,f,E,k,q,W;({args:l,options:E}=a);try{({reachedHWM:k,blocked:h,strategy:W}=await this._store.__submit__(this.queued(),E.weight))}catch(V){return f=V,this.Events.trigger("debug",`Could not queue ${E.id}`,{args:l,options:E,error:f}),a.doDrop({error:f}),!1}return h?(a.doDrop(),!0):k&&(q=W===v.prototype.strategy.LEAK?this._queues.shiftLastFrom(E.priority):W===v.prototype.strategy.OVERFLOW_PRIORITY?this._queues.shiftLastFrom(E.priority+1):W===v.prototype.strategy.OVERFLOW?a:void 0,q!=null&&q.doDrop(),q==null||W===v.prototype.strategy.OVERFLOW)?(q==null&&a.doDrop(),k):(a.doQueue(k,h),this._queues.push(a),await this._drainAll(),k)}_receive(a){return this._states.jobStatus(a.options.id)!=null?(a._reject(new v.prototype.BottleneckError(`A job with the same id already exists (id=${a.options.id})`)),!1):(a.doReceive(),this._submitLock.schedule(this._addToQueue,a))}submit(...a){var l,h,f,E,k,q,W;return typeof a[0]=="function"?(k=a,[h,...a]=k,[l]=zt.call(a,-1),E=ne.load({},this.jobDefaults)):(q=a,[E,h,...a]=q,[l]=zt.call(a,-1),E=ne.load(E,this.jobDefaults)),W=(...V)=>new this.Promise(function(Fe,zs){return h(...V,function(...Kt){return(Kt[0]!=null?zs:Fe)(Kt)})}),f=new ct(W,a,E,this.jobDefaults,this.rejectOnDrop,this.Events,this._states,this.Promise),f.promise.then(function(V){return typeof l=="function"?l(...V):void 0}).catch(function(V){return Array.isArray(V)?typeof l=="function"?l(...V):void 0:typeof l=="function"?l(V):void 0}),this._receive(f)}schedule(...a){var l,h,f;return typeof a[0]=="function"?([f,...a]=a,h={}):[h,f,...a]=a,l=new ct(f,a,h,this.jobDefaults,this.rejectOnDrop,this.Events,this._states,this.Promise),this._receive(l),l.promise}wrap(a){var l,h;return l=this.schedule.bind(this),h=function(...f){return l(a.bind(this),...f)},h.withOptions=function(f,...E){return l(f,a,...E)},h}async updateSettings(a={}){return await this._store.__updateSettings__(ne.overwrite(a,this.storeDefaults)),ne.overwrite(a,this.instanceDefaults,this),this}currentReservoir(){return this._store.__currentReservoir__()}incrementReservoir(a=0){return this._store.__incrementReservoir__(a)}}return v.default=v,v.Events=at,v.version=v.prototype.version=Hs.version,v.strategy=v.prototype.strategy={LEAK:1,OVERFLOW:2,OVERFLOW_PRIORITY:4,BLOCK:3},v.BottleneckError=v.prototype.BottleneckError=D,v.Group=v.prototype.Group=z,v.RedisConnection=v.prototype.RedisConnection=L,v.IORedisConnection=v.prototype.IORedisConnection=x,v.Batcher=v.prototype.Batcher=Bs,v.prototype.jobDefaults={priority:Nt,weight:1,expiration:null,id:"<no-id>"},v.prototype.storeDefaults={maxConcurrent:null,minTime:0,highWater:null,strategy:v.prototype.strategy.LEAK,penalty:null,reservoir:null,reservoirRefreshInterval:null,reservoirRefreshAmount:null,reservoirIncreaseInterval:null,reservoirIncreaseAmount:null,reservoirIncreaseMaximum:null},v.prototype.localStoreDefaults={Promise,timeout:null,heartbeatInterval:250},v.prototype.redisStoreDefaults={Promise,timeout:null,heartbeatInterval:5e3,clientTimeout:1e4,Redis:null,clientOptions:{},clusterNodes:null,clearDatastore:!1,connection:null},v.prototype.instanceDefaults={datastore:"local",connection:null,id:"<no-id>",rejectOnDrop:!0,trackDoneStatus:!1,Promise},v.prototype.stopDefaults={enqueueErrorMessage:"This limiter has been stopped and cannot accept new jobs.",dropWaitingJobs:!0,dropErrorMessage:"This limiter has been stopped."},v}).call(r);var Vt=jt,Ws=Vt;return Ws})})(Yr);var nn=Yr.exports;const Qr=Ye(nn);async function Xr(e,t,r,s){if(!r.request||!r.request.request)throw r;if(r.status>=400&&!e.doNotRetry.includes(r.status)){const o=s.request.retries!=null?s.request.retries:e.retries,n=Math.pow((s.request.retryCount||0)+1,2);throw t.retry.retryRequest(r,o,n)}throw r}async function an(e,t,r,s){const o=new Qr;return o.on("failed",function(n,i){const c=~~n.request.request.retries,d=~~n.request.request.retryAfter;if(s.request.retryCount=i.retryCount+1,c>i.retryCount)return d*e.retryAfterBaseValue}),o.schedule(cn.bind(null,e,t,r),s)}async function cn(e,t,r,s){const o=await r(r,s);if(o.data&&o.data.errors&&/Something went wrong while executing your query/.test(o.data.errors[0].message)){const n=new we(o.data.errors[0].message,500,{request:s,response:o});return Xr(e,t,n,s)}return o}var un="6.0.0";function Zr(e,t){const r=Object.assign({enabled:!0,retryAfterBaseValue:1e3,doNotRetry:[400,401,403,404,422,451],retries:3},t.retry);return r.enabled&&(e.hook.error("request",Xr.bind(null,r,e)),e.hook.wrap("request",an.bind(null,r,e))),{retry:{retryRequest:(s,o,n)=>(s.request.request=Object.assign({},s.request.request,{retries:o,retryAfter:n}),s)}}}Zr.VERSION=un;var ln="7.0.0",mt=()=>Promise.resolve();function pn(e,t,r){return e.retryLimiter.schedule(dn,e,t,r)}async function dn(e,t,r){const s=r.method!=="GET"&&r.method!=="HEAD",{pathname:o}=new URL(r.url,"http://github.test"),n=r.method==="GET"&&o.startsWith("/search/"),i=o.startsWith("/graphql"),d=~~t.retryCount>0?{priority:0,weight:0}:{};e.clustering&&(d.expiration=1e3*60),(s||i)&&await e.write.key(e.id).schedule(d,mt),s&&e.triggersNotification(o)&&await e.notifications.key(e.id).schedule(d,mt),n&&await e.search.key(e.id).schedule(d,mt);const p=e.global.key(e.id).schedule(d,t,r);if(i){const m=await p;if(m.data.errors!=null&&m.data.errors.some(T=>T.type==="RATE_LIMITED"))throw Object.assign(new Error("GraphQL Rate Limit Exceeded"),{response:m,data:m.data})}return p}var hn=["/orgs/{org}/invitations","/orgs/{org}/invitations/{invitation_id}","/orgs/{org}/teams/{team_slug}/discussions","/orgs/{org}/teams/{team_slug}/discussions/{discussion_number}/comments","/repos/{owner}/{repo}/collaborators/{username}","/repos/{owner}/{repo}/commits/{commit_sha}/comments","/repos/{owner}/{repo}/issues","/repos/{owner}/{repo}/issues/{issue_number}/comments","/repos/{owner}/{repo}/pulls","/repos/{owner}/{repo}/pulls/{pull_number}/comments","/repos/{owner}/{repo}/pulls/{pull_number}/comments/{comment_id}/replies","/repos/{owner}/{repo}/pulls/{pull_number}/merge","/repos/{owner}/{repo}/pulls/{pull_number}/requested_reviewers","/repos/{owner}/{repo}/pulls/{pull_number}/reviews","/repos/{owner}/{repo}/releases","/teams/{team_id}/discussions","/teams/{team_id}/discussions/{discussion_number}/comments"];function gn(e){const r=`^(?:${e.map(s=>s.split("/").map(o=>o.startsWith("{")?"(?:.+?)":o).join("/")).map(s=>`(?:${s})`).join("|")})[^/]*$`;return new RegExp(r,"i")}var ar=gn(hn),es=ar.test.bind(ar),ve={},mn=function(e,t){ve.global=new e.Group({id:"octokit-global",maxConcurrent:10,...t}),ve.search=new e.Group({id:"octokit-search",maxConcurrent:1,minTime:2e3,...t}),ve.write=new e.Group({id:"octokit-write",maxConcurrent:1,minTime:1e3,...t}),ve.notifications=new e.Group({id:"octokit-notifications",maxConcurrent:1,minTime:3e3,...t})};function Ut(e,t){const{enabled:r=!0,Bottleneck:s=Qr,id:o="no-id",timeout:n=1e3*60*2,connection:i}=t.throttle||{};if(!r)return{};const c={connection:i,timeout:n};ve.global==null&&mn(s,c);const d=Object.assign({clustering:i!=null,triggersNotification:es,fallbackSecondaryRateRetryAfter:60,retryAfterBaseValue:1e3,retryLimiter:new s,id:o,...ve},t.throttle);if(typeof d.onSecondaryRateLimit!="function"||typeof d.onRateLimit!="function")throw new Error(`octokit/plugin-throttling error:
        You must pass the onSecondaryRateLimit and onRateLimit error handlers.
        See https://octokit.github.io/rest.js/#throttling

        const octokit = new Octokit({
          throttle: {
            onSecondaryRateLimit: (retryAfter, options) => {/* ... */},
            onRateLimit: (retryAfter, options) => {/* ... */}
          }
        })
    `);const p={},m=new s.Events(p);return p.on("secondary-limit",d.onSecondaryRateLimit),p.on("rate-limit",d.onRateLimit),p.on("error",T=>e.log.warn("Error in throttling-plugin limit handler",T)),d.retryLimiter.on("failed",async function(T,C){const[A,w,S]=C.args,{pathname:D}=new URL(S.url,"http://github.test");if(!(D.startsWith("/graphql")&&T.status!==401||T.status===403))return;const R=~~w.retryCount;w.retryCount=R,S.request.retryCount=R;const{wantRetry:j,retryAfter:te=0}=await async function(){if(/\bsecondary rate\b/i.test(T.message)){const Y=Number(T.response.headers["retry-after"])||A.fallbackSecondaryRateRetryAfter;return{wantRetry:await m.trigger("secondary-limit",Y,S,e,R),retryAfter:Y}}if(T.response.headers!=null&&T.response.headers["x-ratelimit-remaining"]==="0"){const Y=new Date(~~T.response.headers["x-ratelimit-reset"]*1e3).getTime(),Q=Math.max(Math.ceil((Y-Date.now())/1e3),0);return{wantRetry:await m.trigger("rate-limit",Q,S,e,R),retryAfter:Q}}return{}}();if(j)return w.retryCount++,te*A.retryAfterBaseValue}),e.hook.wrap("request",pn.bind(null,d)),{}}Ut.VERSION=ln;Ut.triggersNotification=es;const fn=Ae(Js);var Tn=function(t){return btoa(t)};const ge=Ye(Tn),En="4.0.0";function _n(e){const t=e.clientType||"oauth-app",r=e.baseUrl||"https://github.com",s={clientType:t,allowSignup:e.allowSignup!==!1,clientId:e.clientId,login:e.login||null,redirectUrl:e.redirectUrl||null,state:e.state||Math.random().toString(36).substr(2),url:""};if(t==="oauth-app"){const o="scopes"in e?e.scopes:[];s.scopes=typeof o=="string"?o.split(/[,\s]+/).filter(Boolean):o}return s.url=wn(`${r}/login/oauth/authorize`,s),s}function wn(e,t){const r={allowSignup:"allow_signup",clientId:"client_id",login:"login",redirectUrl:"redirect_uri",scopes:"scope",state:"state"};let s=e;return Object.keys(r).filter(o=>t[o]!==null).filter(o=>o!=="scopes"?!0:t.clientType==="github-app"?!1:!Array.isArray(t[o])||t[o].length>0).map(o=>[r[o],`${t[o]}`]).forEach(([o,n],i)=>{s+=i===0?"?":"&",s+=`${o}=${encodeURIComponent(n)}`}),s}function ts(e){const t=e.endpoint.DEFAULTS;return/^https:\/\/(api\.)?github\.com$/.test(t.baseUrl)?"https://github.com":t.baseUrl.replace("/api/v3","")}async function Xe(e,t,r){const s={baseUrl:ts(e),headers:{accept:"application/json"},...r},o=await e(t,s);if("error"in o.data){const n=new we(`${o.data.error_description} (${o.data.error}, ${o.data.error_uri})`,400,{request:e.endpoint.merge(t,s),headers:o.headers});throw n.response=o,n}return o}function yn({request:e=K,...t}){const r=ts(e);return _n({...t,baseUrl:r})}async function rs(e){const t=e.request||K,r=await Xe(t,"POST /login/oauth/access_token",{client_id:e.clientId,client_secret:e.clientSecret,code:e.code,redirect_uri:e.redirectUrl}),s={clientType:e.clientType,clientId:e.clientId,clientSecret:e.clientSecret,token:r.data.access_token,scopes:r.data.scope.split(/\s+/).filter(Boolean)};if(e.clientType==="github-app"){if("refresh_token"in r.data){const o=new Date(r.headers.date).getTime();s.refreshToken=r.data.refresh_token,s.expiresAt=cr(o,r.data.expires_in),s.refreshTokenExpiresAt=cr(o,r.data.refresh_token_expires_in)}delete s.scopes}return{...r,authentication:s}}function cr(e,t){return new Date(e+t*1e3).toISOString()}async function ss(e){const t=e.request||K,r={client_id:e.clientId};return"scopes"in e&&Array.isArray(e.scopes)&&(r.scope=e.scopes.join(" ")),Xe(t,"POST /login/device/code",r)}async function bt(e){const t=e.request||K,r=await Xe(t,"POST /login/oauth/access_token",{client_id:e.clientId,device_code:e.code,grant_type:"urn:ietf:params:oauth:grant-type:device_code"}),s={clientType:e.clientType,clientId:e.clientId,token:r.data.access_token,scopes:r.data.scope.split(/\s+/).filter(Boolean)};if("clientSecret"in e&&(s.clientSecret=e.clientSecret),e.clientType==="github-app"){if("refresh_token"in r.data){const o=new Date(r.headers.date).getTime();s.refreshToken=r.data.refresh_token,s.expiresAt=ur(o,r.data.expires_in),s.refreshTokenExpiresAt=ur(o,r.data.refresh_token_expires_in)}delete s.scopes}return{...r,authentication:s}}function ur(e,t){return new Date(e+t*1e3).toISOString()}async function os(e){const r=await(e.request||K)("POST /applications/{client_id}/token",{headers:{authorization:`basic ${ge(`${e.clientId}:${e.clientSecret}`)}`},client_id:e.clientId,access_token:e.token}),s={clientType:e.clientType,clientId:e.clientId,clientSecret:e.clientSecret,token:e.token,scopes:r.data.scopes};return r.data.expires_at&&(s.expiresAt=r.data.expires_at),e.clientType==="github-app"&&delete s.scopes,{...r,authentication:s}}async function ns(e){const t=e.request||K,r=await Xe(t,"POST /login/oauth/access_token",{client_id:e.clientId,client_secret:e.clientSecret,grant_type:"refresh_token",refresh_token:e.refreshToken}),s=new Date(r.headers.date).getTime(),o={clientType:"github-app",clientId:e.clientId,clientSecret:e.clientSecret,token:r.data.access_token,refreshToken:r.data.refresh_token,expiresAt:lr(s,r.data.expires_in),refreshTokenExpiresAt:lr(s,r.data.refresh_token_expires_in)};return{...r,authentication:o}}function lr(e,t){return new Date(e+t*1e3).toISOString()}async function bn(e){const{request:t,clientType:r,clientId:s,clientSecret:o,token:n,...i}=e,d=await(t||K)("POST /applications/{client_id}/token/scoped",{headers:{authorization:`basic ${ge(`${s}:${o}`)}`},client_id:s,access_token:n,...i}),p=Object.assign({clientType:r,clientId:s,clientSecret:o,token:d.data.token},d.data.expires_at?{expiresAt:d.data.expires_at}:{});return{...d,authentication:p}}async function is(e){const t=e.request||K,r=ge(`${e.clientId}:${e.clientSecret}`),s=await t("PATCH /applications/{client_id}/token",{headers:{authorization:`basic ${r}`},client_id:e.clientId,access_token:e.token}),o={clientType:e.clientType,clientId:e.clientId,clientSecret:e.clientSecret,token:s.data.token,scopes:s.data.scopes};return s.data.expires_at&&(o.expiresAt=s.data.expires_at),e.clientType==="github-app"&&delete o.scopes,{...s,authentication:o}}async function as(e){const t=e.request||K,r=ge(`${e.clientId}:${e.clientSecret}`);return t("DELETE /applications/{client_id}/token",{headers:{authorization:`basic ${r}`},client_id:e.clientId,access_token:e.token})}async function cs(e){const t=e.request||K,r=ge(`${e.clientId}:${e.clientSecret}`);return t("DELETE /applications/{client_id}/grant",{headers:{authorization:`basic ${r}`},client_id:e.clientId,access_token:e.token})}const kn=Object.freeze(Object.defineProperty({__proto__:null,VERSION:En,checkToken:os,createDeviceCode:ss,deleteAuthorization:cs,deleteToken:as,exchangeDeviceCode:bt,exchangeWebFlowCode:rs,getWebFlowAuthorizationUrl:yn,refreshToken:ns,resetToken:is,scopeToken:bn},Symbol.toStringTag,{value:"Module"}));async function us(e,t){const r=vn(e,t.auth);if(r)return r;const{data:s}=await ss({clientType:e.clientType,clientId:e.clientId,request:t.request||e.request,scopes:t.auth.scopes||e.scopes});await e.onVerification(s);const o=await kt(t.request||e.request,e.clientId,e.clientType,s);return e.authentication=o,o}function vn(e,t){if(t.refresh===!0||!e.authentication)return!1;if(e.clientType==="github-app")return e.authentication;const r=e.authentication,s=("scopes"in t&&t.scopes||e.scopes).join(" "),o=r.scopes.join(" ");return s===o?r:!1}async function pr(e){await new Promise(t=>setTimeout(t,e*1e3))}async function kt(e,t,r,s){try{const o={clientId:t,request:e,code:s.device_code},{authentication:n}=r==="oauth-app"?await bt({...o,clientType:"oauth-app"}):await bt({...o,clientType:"github-app"});return{type:"token",tokenType:"oauth",...n}}catch(o){if(!o.response)throw o;const n=o.response.data.error;if(n==="authorization_pending")return await pr(s.interval),kt(e,t,r,s);if(n==="slow_down")return await pr(s.interval+5),kt(e,t,r,s);throw o}}async function Sn(e,t){return us(e,{auth:t})}async function On(e,t,r,s){let o=t.endpoint.merge(r,s);if(/\/login\/(oauth\/access_token|device\/code)$/.test(o.url))return t(o);const{token:n}=await us(e,{request:t,auth:{type:"oauth"}});return o.headers.authorization=`token ${n}`,t(o)}var An="6.0.0";function Pn(e){const t=e.request||K.defaults({headers:{"user-agent":`octokit-auth-oauth-device.js/${An} ${he()}`}}),{request:r=t,...s}=e,o=e.clientType==="github-app"?{...s,clientType:"github-app",request:r}:{...s,clientType:"oauth-app",request:r,scopes:e.scopes||[]};if(!e.clientId)throw new Error('[@octokit/auth-oauth-device] "clientId" option must be set (https://github.com/octokit/auth-oauth-device.js#usage)');if(!e.onVerification)throw new Error('[@octokit/auth-oauth-device] "onVerification" option must be a function (https://github.com/octokit/auth-oauth-device.js#usage)');return Object.assign(Sn.bind(null,o),{hook:On.bind(null,o)})}var ls="4.0.0";async function dr(e){if("code"in e.strategyOptions){const{authentication:t}=await rs({clientId:e.clientId,clientSecret:e.clientSecret,clientType:e.clientType,onTokenCreated:e.onTokenCreated,...e.strategyOptions,request:e.request});return{type:"token",tokenType:"oauth",...t}}if("onVerification"in e.strategyOptions){const r=await Pn({clientType:e.clientType,clientId:e.clientId,onTokenCreated:e.onTokenCreated,...e.strategyOptions,request:e.request})({type:"oauth"});return{clientSecret:e.clientSecret,...r}}if("token"in e.strategyOptions)return{type:"token",tokenType:"oauth",clientId:e.clientId,clientSecret:e.clientSecret,clientType:e.clientType,onTokenCreated:e.onTokenCreated,...e.strategyOptions};throw new Error("[@octokit/auth-oauth-user] Invalid strategy options")}async function vt(e,t={}){var s,o;if(e.authentication||(e.authentication=e.clientType==="oauth-app"?await dr(e):await dr(e)),e.authentication.invalid)throw new Error("[@octokit/auth-oauth-user] Token is invalid");const r=e.authentication;if("expiresAt"in r&&(t.type==="refresh"||new Date(r.expiresAt)<new Date)){const{authentication:n}=await ns({clientType:"github-app",clientId:e.clientId,clientSecret:e.clientSecret,refreshToken:r.refreshToken,request:e.request});e.authentication={tokenType:"oauth",type:"token",...n}}if(t.type==="refresh"){if(e.clientType==="oauth-app")throw new Error("[@octokit/auth-oauth-user] OAuth Apps do not support expiring tokens");if(!r.hasOwnProperty("expiresAt"))throw new Error("[@octokit/auth-oauth-user] Refresh token missing");await((s=e.onTokenCreated)==null?void 0:s.call(e,e.authentication,{type:t.type}))}if(t.type==="check"||t.type==="reset"){const n=t.type==="check"?os:is;try{const{authentication:i}=await n({clientType:e.clientType,clientId:e.clientId,clientSecret:e.clientSecret,token:e.authentication.token,request:e.request});return e.authentication={tokenType:"oauth",type:"token",...i},t.type==="reset"&&await((o=e.onTokenCreated)==null?void 0:o.call(e,e.authentication,{type:t.type})),e.authentication}catch(i){throw i.status===404&&(i.message="[@octokit/auth-oauth-user] Token is invalid",e.authentication.invalid=!0),i}}if(t.type==="delete"||t.type==="deleteAuthorization"){const n=t.type==="delete"?as:cs;try{await n({clientType:e.clientType,clientId:e.clientId,clientSecret:e.clientSecret,token:e.authentication.token,request:e.request})}catch(i){if(i.status!==404)throw i}return e.authentication.invalid=!0,e.authentication}return e.authentication}var Rn=/\/applications\/[^/]+\/(token|grant)s?/;function Dt(e){return e&&Rn.test(e)}async function Gn(e,t,r,s={}){const o=t.endpoint.merge(r,s);if(/\/login\/(oauth\/access_token|device\/code)$/.test(o.url))return t(o);if(Dt(o.url)){const i=ge(`${e.clientId}:${e.clientSecret}`);return o.headers.authorization=`basic ${i}`,t(o)}const{token:n}=e.clientType==="oauth-app"?await vt({...e,request:t}):await vt({...e,request:t});return o.headers.authorization="token "+n,t(o)}function $e({clientId:e,clientSecret:t,clientType:r="oauth-app",request:s=K.defaults({headers:{"user-agent":`octokit-auth-oauth-app.js/${ls} ${he()}`}}),onTokenCreated:o,...n}){const i=Object.assign({clientType:r,clientId:e,clientSecret:t,onTokenCreated:o,strategyOptions:n,request:s});return Object.assign(vt.bind(null,i),{hook:Gn.bind(null,i)})}$e.VERSION=ls;const Fn=Object.freeze(Object.defineProperty({__proto__:null,createOAuthUserAuth:$e,requiresBasicAuth:Dt},Symbol.toStringTag,{value:"Module"}));async function Un(e,t){if(t.type==="oauth-app")return{type:"oauth-app",clientId:e.clientId,clientSecret:e.clientSecret,clientType:e.clientType,headers:{authorization:`basic ${ge(`${e.clientId}:${e.clientSecret}`)}`}};if("factory"in t){const{type:o,...n}={...t,...e};return t.factory(n)}const r={clientId:e.clientId,clientSecret:e.clientSecret,request:e.request,...t};return(e.clientType==="oauth-app"?await $e({...r,clientType:e.clientType}):await $e({...r,clientType:e.clientType}))()}async function Dn(e,t,r,s){let o=t.endpoint.merge(r,s);if(/\/login\/(oauth\/access_token|device\/code)$/.test(o.url))return t(o);if(e.clientType==="github-app"&&!Dt(o.url))throw new Error(`[@octokit/auth-oauth-app] GitHub Apps cannot use their client ID/secret for basic authentication for endpoints other than "/applications/{client_id}/**". "${o.method} ${o.url}" is not supported.`);const n=ge(`${e.clientId}:${e.clientSecret}`);o.headers.authorization=`basic ${n}`;try{return await t(o)}catch(i){throw i.status!==401||(i.message=`[@octokit/auth-oauth-app] "${o.method} ${o.url}" does not support clientId/clientSecret basic authentication.`),i}}var Cn="7.0.0";function In(e){const t=Object.assign({request:K.defaults({headers:{"user-agent":`octokit-auth-oauth-app.js/${Cn} ${he()}`}}),clientType:"oauth-app"},e);return Object.assign(Un.bind(null,t),{hook:Dn.bind(null,t)})}const $n=Object.freeze(Object.defineProperty({__proto__:null,createOAuthAppAuth:In,createOAuthUserAuth:$e},Symbol.toStringTag,{value:"Module"})),ps=Ae($n),Ze=Ae(Fn),Ln=Ae(jo),ye=Ae(kn);async function qn(e){return{type:"unauthenticated",reason:e}}function xn(e){return e.status!==403||!e.response?!1:e.response.headers["x-ratelimit-remaining"]==="0"}var jn=/\babuse\b/i;function Nn(e){return e.status!==403?!1:jn.test(e.message)}async function Bn(e,t,r,s){const o=t.endpoint.merge(r,s);return t(o).catch(n=>{throw n.status===404?(n.message=`Not found. May be due to lack of authentication. Reason: ${e}`,n):xn(n)?(n.message=`API rate limit exceeded. This maybe caused by the lack of authentication. Reason: ${e}`,n):Nn(n)?(n.message=`You have triggered an abuse detection mechanism. This maybe caused by the lack of authentication. Reason: ${e}`,n):n.status===401?(n.message=`Unauthorized. "${o.method} ${o.url}" failed most likely due to lack of authentication. Reason: ${e}`,n):(n.status>=400&&n.status<500&&(n.message=n.message.replace(/\.?$/,`. May be caused by lack of authentication (${e}).`)),n)})}var Mn=function(t){if(!t||!t.reason)throw new Error("[@octokit/auth-unauthenticated] No reason passed to createUnauthenticatedAuth");return Object.assign(qn.bind(null,t.reason),{hook:Bn.bind(null,t.reason)})};const Hn=Object.freeze(Object.defineProperty({__proto__:null,createUnauthenticatedAuth:Mn},Symbol.toStringTag,{value:"Module"})),ds=Ae(Hn);var Wn=Object.create,et=Object.defineProperty,zn=Object.getOwnPropertyDescriptor,Vn=Object.getOwnPropertyNames,Kn=Object.getPrototypeOf,Jn=Object.prototype.hasOwnProperty,Yn=(e,t)=>{for(var r in t)et(e,r,{get:t[r],enumerable:!0})},hs=(e,t,r,s)=>{if(t&&typeof t=="object"||typeof t=="function")for(let o of Vn(t))!Jn.call(e,o)&&o!==r&&et(e,o,{get:()=>t[o],enumerable:!(s=zn(t,o))||s.enumerable});return e},me=(e,t,r)=>(r=e!=null?Wn(Kn(e)):{},hs(t||!e||!e.__esModule?et(r,"default",{value:e,enumerable:!0}):r,e)),Qn=e=>hs(et({},"__esModule",{value:!0}),e),gs={};Yn(gs,{OAuthApp:()=>Ri,createAWSLambdaAPIGatewayV2Handler:()=>Pi,createNodeMiddleware:()=>bi,createWebWorkerHandler:()=>Si,handleRequest:()=>tt,sendNodeResponse:()=>Es,unknownRouteResponse:()=>Ts});var Xn=Qn(gs),Zn=ps,ms="6.0.0";function fs(e,t,r){if(Array.isArray(t)){for(const s of t)fs(e,s,r);return}e.eventHandlers[t]||(e.eventHandlers[t]=[]),e.eventHandlers[t].push(r)}var ei=Ln,ti=fn,ri=ei.Octokit.defaults({userAgent:`octokit-oauth-app.js/${ms} ${(0,ti.getUserAgent)()}`}),si=Ze;async function ue(e,t){const{name:r,action:s}=t;if(e.eventHandlers[`${r}.${s}`])for(const o of e.eventHandlers[`${r}.${s}`])await o(t);if(e.eventHandlers[r])for(const o of e.eventHandlers[r])await o(t)}async function oi(e,t){return e.octokit.auth({type:"oauth-user",...t,async factory(r){const s=new e.Octokit({authStrategy:si.createOAuthUserAuth,auth:r}),o=await s.auth({type:"get"});return await ue(e,{name:"token",action:"created",token:o.token,scopes:o.scopes,authentication:o,octokit:s}),s}})}var ni=me(ye);function ii(e,t){const r={clientId:e.clientId,request:e.octokit.request,...t,allowSignup:e.allowSignup??t.allowSignup,redirectUrl:t.redirectUrl??e.redirectUrl,scopes:t.scopes??e.defaultScopes};return ni.getWebFlowAuthorizationUrl({clientType:e.clientType,...r})}var ai=me(ps);async function ci(e,t){const r=await e.octokit.auth({type:"oauth-user",...t});return await ue(e,{name:"token",action:"created",token:r.token,scopes:r.scopes,authentication:r,octokit:new e.Octokit({authStrategy:ai.createOAuthUserAuth,auth:{clientType:e.clientType,clientId:e.clientId,clientSecret:e.clientSecret,token:r.token,scopes:r.scopes,refreshToken:r.refreshToken,expiresAt:r.expiresAt,refreshTokenExpiresAt:r.refreshTokenExpiresAt}})}),{authentication:r}}var ui=me(ye);async function li(e,t){const r=await ui.checkToken({clientType:e.clientType,clientId:e.clientId,clientSecret:e.clientSecret,request:e.octokit.request,...t});return Object.assign(r.authentication,{type:"token",tokenType:"oauth"}),r}var hr=me(ye),gr=Ze;async function pi(e,t){const r={clientId:e.clientId,clientSecret:e.clientSecret,request:e.octokit.request,...t};if(e.clientType==="oauth-app"){const n=await hr.resetToken({clientType:"oauth-app",...r}),i=Object.assign(n.authentication,{type:"token",tokenType:"oauth"});return await ue(e,{name:"token",action:"reset",token:n.authentication.token,scopes:n.authentication.scopes||void 0,authentication:i,octokit:new e.Octokit({authStrategy:gr.createOAuthUserAuth,auth:{clientType:e.clientType,clientId:e.clientId,clientSecret:e.clientSecret,token:n.authentication.token,scopes:n.authentication.scopes}})}),{...n,authentication:i}}const s=await hr.resetToken({clientType:"github-app",...r}),o=Object.assign(s.authentication,{type:"token",tokenType:"oauth"});return await ue(e,{name:"token",action:"reset",token:s.authentication.token,authentication:o,octokit:new e.Octokit({authStrategy:gr.createOAuthUserAuth,auth:{clientType:e.clientType,clientId:e.clientId,clientSecret:e.clientSecret,token:s.authentication.token}})}),{...s,authentication:o}}var di=me(ye),hi=Ze;async function gi(e,t){if(e.clientType==="oauth-app")throw new Error("[@octokit/oauth-app] app.refreshToken() is not supported for OAuth Apps");const r=await di.refreshToken({clientType:"github-app",clientId:e.clientId,clientSecret:e.clientSecret,request:e.octokit.request,refreshToken:t.refreshToken}),s=Object.assign(r.authentication,{type:"token",tokenType:"oauth"});return await ue(e,{name:"token",action:"refreshed",token:r.authentication.token,authentication:s,octokit:new e.Octokit({authStrategy:hi.createOAuthUserAuth,auth:{clientType:e.clientType,clientId:e.clientId,clientSecret:e.clientSecret,token:r.authentication.token}})}),{...r,authentication:s}}var mi=me(ye),fi=Ze;async function Ti(e,t){if(e.clientType==="oauth-app")throw new Error("[@octokit/oauth-app] app.scopeToken() is not supported for OAuth Apps");const r=await mi.scopeToken({clientType:"github-app",clientId:e.clientId,clientSecret:e.clientSecret,request:e.octokit.request,...t}),s=Object.assign(r.authentication,{type:"token",tokenType:"oauth"});return await ue(e,{name:"token",action:"scoped",token:r.authentication.token,authentication:s,octokit:new e.Octokit({authStrategy:fi.createOAuthUserAuth,auth:{clientType:e.clientType,clientId:e.clientId,clientSecret:e.clientSecret,token:r.authentication.token}})}),{...r,authentication:s}}var mr=me(ye),Ei=ds;async function _i(e,t){const r={clientId:e.clientId,clientSecret:e.clientSecret,request:e.octokit.request,...t},s=e.clientType==="oauth-app"?await mr.deleteToken({clientType:"oauth-app",...r}):await mr.deleteToken({clientType:"github-app",...r});return await ue(e,{name:"token",action:"deleted",token:t.token,octokit:new e.Octokit({authStrategy:Ei.createUnauthenticatedAuth,auth:{reason:'Handling "token.deleted" event. The access for the token has been revoked.'}})}),s}var fr=me(ye),Tr=ds;async function wi(e,t){const r={clientId:e.clientId,clientSecret:e.clientSecret,request:e.octokit.request,...t},s=e.clientType==="oauth-app"?await fr.deleteAuthorization({clientType:"oauth-app",...r}):await fr.deleteAuthorization({clientType:"github-app",...r});return await ue(e,{name:"token",action:"deleted",token:t.token,octokit:new e.Octokit({authStrategy:Tr.createUnauthenticatedAuth,auth:{reason:'Handling "token.deleted" event. The access for the token has been revoked.'}})}),await ue(e,{name:"authorization",action:"deleted",token:t.token,octokit:new e.Octokit({authStrategy:Tr.createUnauthenticatedAuth,auth:{reason:'Handling "authorization.deleted" event. The access for the app has been revoked.'}})}),s}function Ts(e){return{status:404,headers:{"content-type":"application/json"},text:JSON.stringify({error:`Unknown route: ${e.method} ${e.url}`})}}async function tt(e,{pathPrefix:t="/api/github/oauth"},r){var m,T,C,A,w,S;if(r.method==="OPTIONS")return{status:200,headers:{"access-control-allow-origin":"*","access-control-allow-methods":"*","access-control-allow-headers":"Content-Type, User-Agent, Authorization"}};let{pathname:s}=new URL(r.url,"http://localhost");if(!s.startsWith(`${t}/`))return;s=s.slice(t.length+1);const o=[r.method,s].join(" "),n={getLogin:"GET login",getCallback:"GET callback",createToken:"POST token",getToken:"GET token",patchToken:"PATCH token",patchRefreshToken:"PATCH refresh-token",scopeToken:"POST token/scoped",deleteToken:"DELETE token",deleteGrant:"DELETE grant"};if(!Object.values(n).includes(o))return Ts(r);let i;try{const D=await r.text();i=D?JSON.parse(D):{}}catch{return{status:400,headers:{"content-type":"application/json","access-control-allow-origin":"*"},text:JSON.stringify({error:"[@octokit/oauth-app] request error"})}}const{searchParams:c}=new URL(r.url,"http://localhost"),d=Object.fromEntries(c),p=r.headers;try{if(o===n.getLogin){const{url:P}=e.getWebFlowAuthorizationUrl({state:d.state,scopes:d.scopes?d.scopes.split(","):void 0,allowSignup:d.allowSignup?d.allowSignup==="true":void 0,redirectUrl:d.redirectUrl});return{status:302,headers:{location:P}}}if(o===n.getCallback){if(d.error)throw new Error(`[@octokit/oauth-app] ${d.error} ${d.error_description}`);if(!d.code)throw new Error('[@octokit/oauth-app] "code" parameter is required');const{authentication:{token:P}}=await e.createToken({code:d.code});return{status:200,headers:{"content-type":"text/html"},text:`<h1>Token created successfully</h1>

<p>Your token is: <strong>${P}</strong>. Copy it now as it cannot be shown again.</p>`}}if(o===n.createToken){const{code:P,redirectUrl:R}=i;if(!P)throw new Error('[@octokit/oauth-app] "code" parameter is required');const j=await e.createToken({code:P,redirectUrl:R});return delete j.authentication.clientSecret,{status:201,headers:{"content-type":"application/json","access-control-allow-origin":"*"},text:JSON.stringify(j)}}if(o===n.getToken){const P=(m=p.authorization)==null?void 0:m.substr(6);if(!P)throw new Error('[@octokit/oauth-app] "Authorization" header is required');const R=await e.checkToken({token:P});return delete R.authentication.clientSecret,{status:200,headers:{"content-type":"application/json","access-control-allow-origin":"*"},text:JSON.stringify(R)}}if(o===n.patchToken){const P=(T=p.authorization)==null?void 0:T.substr(6);if(!P)throw new Error('[@octokit/oauth-app] "Authorization" header is required');const R=await e.resetToken({token:P});return delete R.authentication.clientSecret,{status:200,headers:{"content-type":"application/json","access-control-allow-origin":"*"},text:JSON.stringify(R)}}if(o===n.patchRefreshToken){if(!((C=p.authorization)==null?void 0:C.substr(6)))throw new Error('[@octokit/oauth-app] "Authorization" header is required');const{refreshToken:R}=i;if(!R)throw new Error("[@octokit/oauth-app] refreshToken must be sent in request body");const j=await e.refreshToken({refreshToken:R});return delete j.authentication.clientSecret,{status:200,headers:{"content-type":"application/json","access-control-allow-origin":"*"},text:JSON.stringify(j)}}if(o===n.scopeToken){const P=(A=p.authorization)==null?void 0:A.substr(6);if(!P)throw new Error('[@octokit/oauth-app] "Authorization" header is required');const R=await e.scopeToken({token:P,...i});return delete R.authentication.clientSecret,{status:200,headers:{"content-type":"application/json","access-control-allow-origin":"*"},text:JSON.stringify(R)}}if(o===n.deleteToken){const P=(w=p.authorization)==null?void 0:w.substr(6);if(!P)throw new Error('[@octokit/oauth-app] "Authorization" header is required');return await e.deleteToken({token:P}),{status:204,headers:{"access-control-allow-origin":"*"}}}const D=(S=p.authorization)==null?void 0:S.substr(6);if(!D)throw new Error('[@octokit/oauth-app] "Authorization" header is required');return await e.deleteAuthorization({token:D}),{status:204,headers:{"access-control-allow-origin":"*"}}}catch(D){return{status:400,headers:{"content-type":"application/json","access-control-allow-origin":"*"},text:JSON.stringify({error:D.message})}}}function yi(e){const{method:t,url:r,headers:s}=e;async function o(){return await new Promise((i,c)=>{let d=[];e.on("error",c).on("data",p=>d.push(p)).on("end",()=>i(Buffer.concat(d).toString()))})}return{method:t,url:r,headers:s,text:o}}function Es(e,t){t.writeHead(e.status,e.headers),t.end(e.text)}function bi(e,t={}){return async function(r,s,o){const n=await yi(r),i=await tt(e,t,n);return i?(Es(i,s),!0):(o==null||o(),!1)}}function ki(e){const t=Object.fromEntries(e.headers.entries());return{method:e.method,url:e.url,headers:t,text:()=>e.text()}}function vi(e){return new Response(e.text,{status:e.status,headers:e.headers})}function Si(e,t={}){return async function(r){const s=await ki(r),o=await tt(e,t,s);return o?vi(o):void 0}}function Oi(e){const{method:t}=e.requestContext.http;let r=e.rawPath;const{stage:s}=e.requestContext;r.startsWith("/"+s)&&(r=r.substring(s.length+1)),e.rawQueryString&&(r+="?"+e.rawQueryString);const o=e.headers;return{method:t,url:r,headers:o,text:async()=>e.body||""}}function Ai(e){return{statusCode:e.status,headers:e.headers,body:e.text}}function Pi(e,t={}){return async function(r){const s=Oi(r),o=await tt(e,t,s);return o?Ai(o):void 0}}var qe,Ri=(qe=class{static defaults(t){return class extends this{constructor(...s){super({...t,...s[0]})}}}constructor(t){const r=t.Octokit||ri;this.type=t.clientType||"oauth-app";const s=new r({authStrategy:Zn.createOAuthAppAuth,auth:{clientType:this.type,clientId:t.clientId,clientSecret:t.clientSecret}}),o={clientType:this.type,clientId:t.clientId,clientSecret:t.clientSecret,defaultScopes:t.defaultScopes||[],allowSignup:t.allowSignup,baseUrl:t.baseUrl,redirectUrl:t.redirectUrl,log:t.log,Octokit:r,octokit:s,eventHandlers:{}};this.on=fs.bind(null,o),this.octokit=s,this.getUserOctokit=oi.bind(null,o),this.getWebFlowAuthorizationUrl=ii.bind(null,o),this.createToken=ci.bind(null,o),this.checkToken=li.bind(null,o),this.resetToken=pi.bind(null,o),this.refreshToken=gi.bind(null,o),this.scopeToken=Ti.bind(null,o),this.deleteToken=_i.bind(null,o),this.deleteAuthorization=wi.bind(null,o)}},qe.VERSION=ms,qe),Gi="3.1.0",_s=Nr.plugin(Jr,Hr,Xo,Zr,Ut).defaults({userAgent:`octokit.js/${Gi}`,throttle:{onRateLimit:Fi,onSecondaryRateLimit:Ui}});function Fi(e,t,r){if(r.log.warn(`Request quota exhausted for request ${t.method} ${t.url}`),t.request.retryCount===0)return r.log.info(`Retrying after ${e} seconds!`),!0}function Ui(e,t,r){if(r.log.warn(`SecondaryRateLimit detected for request ${t.method} ${t.url}`),t.request.retryCount===0)return r.log.info(`Retrying after ${e} seconds!`),!0}Xn.OAuthApp.defaults({Octokit:_s});function ws(e,t){return function(){return e.apply(t,arguments)}}const{toString:Di}=Object.prototype,{getPrototypeOf:Ct}=Object,rt=(e=>t=>{const r=Di.call(t);return e[r]||(e[r]=r.slice(8,-1).toLowerCase())})(Object.create(null)),ie=e=>(e=e.toLowerCase(),t=>rt(t)===e),st=e=>t=>typeof t===e,{isArray:Re}=Array,Le=st("undefined");function Ci(e){return e!==null&&!Le(e)&&e.constructor!==null&&!Le(e.constructor)&&ee(e.constructor.isBuffer)&&e.constructor.isBuffer(e)}const ys=ie("ArrayBuffer");function Ii(e){let t;return typeof ArrayBuffer<"u"&&ArrayBuffer.isView?t=ArrayBuffer.isView(e):t=e&&e.buffer&&ys(e.buffer),t}const $i=st("string"),ee=st("function"),bs=st("number"),ot=e=>e!==null&&typeof e=="object",Li=e=>e===!0||e===!1,We=e=>{if(rt(e)!=="object")return!1;const t=Ct(e);return(t===null||t===Object.prototype||Object.getPrototypeOf(t)===null)&&!(Symbol.toStringTag in e)&&!(Symbol.iterator in e)},qi=ie("Date"),xi=ie("File"),ji=ie("Blob"),Ni=ie("FileList"),Bi=e=>ot(e)&&ee(e.pipe),Mi=e=>{let t;return e&&(typeof FormData=="function"&&e instanceof FormData||ee(e.append)&&((t=rt(e))==="formdata"||t==="object"&&ee(e.toString)&&e.toString()==="[object FormData]"))},Hi=ie("URLSearchParams"),Wi=e=>e.trim?e.trim():e.replace(/^[\s\uFEFF\xA0]+|[\s\uFEFF\xA0]+$/g,"");function xe(e,t,{allOwnKeys:r=!1}={}){if(e===null||typeof e>"u")return;let s,o;if(typeof e!="object"&&(e=[e]),Re(e))for(s=0,o=e.length;s<o;s++)t.call(null,e[s],s,e);else{const n=r?Object.getOwnPropertyNames(e):Object.keys(e),i=n.length;let c;for(s=0;s<i;s++)c=n[s],t.call(null,e[c],c,e)}}function ks(e,t){t=t.toLowerCase();const r=Object.keys(e);let s=r.length,o;for(;s-- >0;)if(o=r[s],t===o.toLowerCase())return o;return null}const vs=(()=>typeof globalThis<"u"?globalThis:typeof self<"u"?self:typeof window<"u"?window:global)(),Ss=e=>!Le(e)&&e!==vs;function St(){const{caseless:e}=Ss(this)&&this||{},t={},r=(s,o)=>{const n=e&&ks(t,o)||o;We(t[n])&&We(s)?t[n]=St(t[n],s):We(s)?t[n]=St({},s):Re(s)?t[n]=s.slice():t[n]=s};for(let s=0,o=arguments.length;s<o;s++)arguments[s]&&xe(arguments[s],r);return t}const zi=(e,t,r,{allOwnKeys:s}={})=>(xe(t,(o,n)=>{r&&ee(o)?e[n]=ws(o,r):e[n]=o},{allOwnKeys:s}),e),Vi=e=>(e.charCodeAt(0)===65279&&(e=e.slice(1)),e),Ki=(e,t,r,s)=>{e.prototype=Object.create(t.prototype,s),e.prototype.constructor=e,Object.defineProperty(e,"super",{value:t.prototype}),r&&Object.assign(e.prototype,r)},Ji=(e,t,r,s)=>{let o,n,i;const c={};if(t=t||{},e==null)return t;do{for(o=Object.getOwnPropertyNames(e),n=o.length;n-- >0;)i=o[n],(!s||s(i,e,t))&&!c[i]&&(t[i]=e[i],c[i]=!0);e=r!==!1&&Ct(e)}while(e&&(!r||r(e,t))&&e!==Object.prototype);return t},Yi=(e,t,r)=>{e=String(e),(r===void 0||r>e.length)&&(r=e.length),r-=t.length;const s=e.indexOf(t,r);return s!==-1&&s===r},Qi=e=>{if(!e)return null;if(Re(e))return e;let t=e.length;if(!bs(t))return null;const r=new Array(t);for(;t-- >0;)r[t]=e[t];return r},Xi=(e=>t=>e&&t instanceof e)(typeof Uint8Array<"u"&&Ct(Uint8Array)),Zi=(e,t)=>{const s=(e&&e[Symbol.iterator]).call(e);let o;for(;(o=s.next())&&!o.done;){const n=o.value;t.call(e,n[0],n[1])}},ea=(e,t)=>{let r;const s=[];for(;(r=e.exec(t))!==null;)s.push(r);return s},ta=ie("HTMLFormElement"),ra=e=>e.toLowerCase().replace(/[-_\s]([a-z\d])(\w*)/g,function(r,s,o){return s.toUpperCase()+o}),Er=(({hasOwnProperty:e})=>(t,r)=>e.call(t,r))(Object.prototype),sa=ie("RegExp"),Os=(e,t)=>{const r=Object.getOwnPropertyDescriptors(e),s={};xe(r,(o,n)=>{let i;(i=t(o,n,e))!==!1&&(s[n]=i||o)}),Object.defineProperties(e,s)},oa=e=>{Os(e,(t,r)=>{if(ee(e)&&["arguments","caller","callee"].indexOf(r)!==-1)return!1;const s=e[r];if(ee(s)){if(t.enumerable=!1,"writable"in t){t.writable=!1;return}t.set||(t.set=()=>{throw Error("Can not rewrite read-only method '"+r+"'")})}})},na=(e,t)=>{const r={},s=o=>{o.forEach(n=>{r[n]=!0})};return Re(e)?s(e):s(String(e).split(t)),r},ia=()=>{},aa=(e,t)=>(e=+e,Number.isFinite(e)?e:t),ft="abcdefghijklmnopqrstuvwxyz",_r="0123456789",As={DIGIT:_r,ALPHA:ft,ALPHA_DIGIT:ft+ft.toUpperCase()+_r},ca=(e=16,t=As.ALPHA_DIGIT)=>{let r="";const{length:s}=t;for(;e--;)r+=t[Math.random()*s|0];return r};function ua(e){return!!(e&&ee(e.append)&&e[Symbol.toStringTag]==="FormData"&&e[Symbol.iterator])}const la=e=>{const t=new Array(10),r=(s,o)=>{if(ot(s)){if(t.indexOf(s)>=0)return;if(!("toJSON"in s)){t[o]=s;const n=Re(s)?[]:{};return xe(s,(i,c)=>{const d=r(i,o+1);!Le(d)&&(n[c]=d)}),t[o]=void 0,n}}return s};return r(e,0)},pa=ie("AsyncFunction"),da=e=>e&&(ot(e)||ee(e))&&ee(e.then)&&ee(e.catch),g={isArray:Re,isArrayBuffer:ys,isBuffer:Ci,isFormData:Mi,isArrayBufferView:Ii,isString:$i,isNumber:bs,isBoolean:Li,isObject:ot,isPlainObject:We,isUndefined:Le,isDate:qi,isFile:xi,isBlob:ji,isRegExp:sa,isFunction:ee,isStream:Bi,isURLSearchParams:Hi,isTypedArray:Xi,isFileList:Ni,forEach:xe,merge:St,extend:zi,trim:Wi,stripBOM:Vi,inherits:Ki,toFlatObject:Ji,kindOf:rt,kindOfTest:ie,endsWith:Yi,toArray:Qi,forEachEntry:Zi,matchAll:ea,isHTMLForm:ta,hasOwnProperty:Er,hasOwnProp:Er,reduceDescriptors:Os,freezeMethods:oa,toObjectSet:na,toCamelCase:ra,noop:ia,toFiniteNumber:aa,findKey:ks,global:vs,isContextDefined:Ss,ALPHABET:As,generateString:ca,isSpecCompliantForm:ua,toJSONObject:la,isAsyncFn:pa,isThenable:da};function I(e,t,r,s,o){Error.call(this),Error.captureStackTrace?Error.captureStackTrace(this,this.constructor):this.stack=new Error().stack,this.message=e,this.name="AxiosError",t&&(this.code=t),r&&(this.config=r),s&&(this.request=s),o&&(this.response=o)}g.inherits(I,Error,{toJSON:function(){return{message:this.message,name:this.name,description:this.description,number:this.number,fileName:this.fileName,lineNumber:this.lineNumber,columnNumber:this.columnNumber,stack:this.stack,config:g.toJSONObject(this.config),code:this.code,status:this.response&&this.response.status?this.response.status:null}}});const Ps=I.prototype,Rs={};["ERR_BAD_OPTION_VALUE","ERR_BAD_OPTION","ECONNABORTED","ETIMEDOUT","ERR_NETWORK","ERR_FR_TOO_MANY_REDIRECTS","ERR_DEPRECATED","ERR_BAD_RESPONSE","ERR_BAD_REQUEST","ERR_CANCELED","ERR_NOT_SUPPORT","ERR_INVALID_URL"].forEach(e=>{Rs[e]={value:e}});Object.defineProperties(I,Rs);Object.defineProperty(Ps,"isAxiosError",{value:!0});I.from=(e,t,r,s,o,n)=>{const i=Object.create(Ps);return g.toFlatObject(e,i,function(d){return d!==Error.prototype},c=>c!=="isAxiosError"),I.call(i,e.message,t,r,s,o),i.cause=e,i.name=e.name,n&&Object.assign(i,n),i};const ha=null;function Ot(e){return g.isPlainObject(e)||g.isArray(e)}function Gs(e){return g.endsWith(e,"[]")?e.slice(0,-2):e}function wr(e,t,r){return e?e.concat(t).map(function(o,n){return o=Gs(o),!r&&n?"["+o+"]":o}).join(r?".":""):t}function ga(e){return g.isArray(e)&&!e.some(Ot)}const ma=g.toFlatObject(g,{},null,function(t){return/^is[A-Z]/.test(t)});function nt(e,t,r){if(!g.isObject(e))throw new TypeError("target must be an object");t=t||new FormData,r=g.toFlatObject(r,{metaTokens:!0,dots:!1,indexes:!1},!1,function(S,D){return!g.isUndefined(D[S])});const s=r.metaTokens,o=r.visitor||m,n=r.dots,i=r.indexes,d=(r.Blob||typeof Blob<"u"&&Blob)&&g.isSpecCompliantForm(t);if(!g.isFunction(o))throw new TypeError("visitor must be a function");function p(w){if(w===null)return"";if(g.isDate(w))return w.toISOString();if(!d&&g.isBlob(w))throw new I("Blob is not supported. Use a Buffer instead.");return g.isArrayBuffer(w)||g.isTypedArray(w)?d&&typeof Blob=="function"?new Blob([w]):Buffer.from(w):w}function m(w,S,D){let P=w;if(w&&!D&&typeof w=="object"){if(g.endsWith(S,"{}"))S=s?S:S.slice(0,-2),w=JSON.stringify(w);else if(g.isArray(w)&&ga(w)||(g.isFileList(w)||g.endsWith(S,"[]"))&&(P=g.toArray(w)))return S=Gs(S),P.forEach(function(j,te){!(g.isUndefined(j)||j===null)&&t.append(i===!0?wr([S],te,n):i===null?S:S+"[]",p(j))}),!1}return Ot(w)?!0:(t.append(wr(D,S,n),p(w)),!1)}const T=[],C=Object.assign(ma,{defaultVisitor:m,convertValue:p,isVisitable:Ot});function A(w,S){if(!g.isUndefined(w)){if(T.indexOf(w)!==-1)throw Error("Circular reference detected in "+S.join("."));T.push(w),g.forEach(w,function(P,R){(!(g.isUndefined(P)||P===null)&&o.call(t,P,g.isString(R)?R.trim():R,S,C))===!0&&A(P,S?S.concat(R):[R])}),T.pop()}}if(!g.isObject(e))throw new TypeError("data must be an object");return A(e),t}function yr(e){const t={"!":"%21","'":"%27","(":"%28",")":"%29","~":"%7E","%20":"+","%00":"\0"};return encodeURIComponent(e).replace(/[!'()~]|%20|%00/g,function(s){return t[s]})}function It(e,t){this._pairs=[],e&&nt(e,this,t)}const Fs=It.prototype;Fs.append=function(t,r){this._pairs.push([t,r])};Fs.toString=function(t){const r=t?function(s){return t.call(this,s,yr)}:yr;return this._pairs.map(function(o){return r(o[0])+"="+r(o[1])},"").join("&")};function fa(e){return encodeURIComponent(e).replace(/%3A/gi,":").replace(/%24/g,"$").replace(/%2C/gi,",").replace(/%20/g,"+").replace(/%5B/gi,"[").replace(/%5D/gi,"]")}function Us(e,t,r){if(!t)return e;const s=r&&r.encode||fa,o=r&&r.serialize;let n;if(o?n=o(t,r):n=g.isURLSearchParams(t)?t.toString():new It(t,r).toString(s),n){const i=e.indexOf("#");i!==-1&&(e=e.slice(0,i)),e+=(e.indexOf("?")===-1?"?":"&")+n}return e}class Ta{constructor(){this.handlers=[]}use(t,r,s){return this.handlers.push({fulfilled:t,rejected:r,synchronous:s?s.synchronous:!1,runWhen:s?s.runWhen:null}),this.handlers.length-1}eject(t){this.handlers[t]&&(this.handlers[t]=null)}clear(){this.handlers&&(this.handlers=[])}forEach(t){g.forEach(this.handlers,function(s){s!==null&&t(s)})}}const br=Ta,Ds={silentJSONParsing:!0,forcedJSONParsing:!0,clarifyTimeoutError:!1},Ea=typeof URLSearchParams<"u"?URLSearchParams:It,_a=typeof FormData<"u"?FormData:null,wa=typeof Blob<"u"?Blob:null,ya=(()=>{let e;return typeof navigator<"u"&&((e=navigator.product)==="ReactNative"||e==="NativeScript"||e==="NS")?!1:typeof window<"u"&&typeof document<"u"})(),ba=(()=>typeof WorkerGlobalScope<"u"&&self instanceof WorkerGlobalScope&&typeof self.importScripts=="function")(),se={isBrowser:!0,classes:{URLSearchParams:Ea,FormData:_a,Blob:wa},isStandardBrowserEnv:ya,isStandardBrowserWebWorkerEnv:ba,protocols:["http","https","file","blob","url","data"]};function ka(e,t){return nt(e,new se.classes.URLSearchParams,Object.assign({visitor:function(r,s,o,n){return se.isNode&&g.isBuffer(r)?(this.append(s,r.toString("base64")),!1):n.defaultVisitor.apply(this,arguments)}},t))}function va(e){return g.matchAll(/\w+|\[(\w*)]/g,e).map(t=>t[0]==="[]"?"":t[1]||t[0])}function Sa(e){const t={},r=Object.keys(e);let s;const o=r.length;let n;for(s=0;s<o;s++)n=r[s],t[n]=e[n];return t}function Cs(e){function t(r,s,o,n){let i=r[n++];const c=Number.isFinite(+i),d=n>=r.length;return i=!i&&g.isArray(o)?o.length:i,d?(g.hasOwnProp(o,i)?o[i]=[o[i],s]:o[i]=s,!c):((!o[i]||!g.isObject(o[i]))&&(o[i]=[]),t(r,s,o[i],n)&&g.isArray(o[i])&&(o[i]=Sa(o[i])),!c)}if(g.isFormData(e)&&g.isFunction(e.entries)){const r={};return g.forEachEntry(e,(s,o)=>{t(va(s),o,r,0)}),r}return null}function Oa(e,t,r){if(g.isString(e))try{return(t||JSON.parse)(e),g.trim(e)}catch(s){if(s.name!=="SyntaxError")throw s}return(r||JSON.stringify)(e)}const $t={transitional:Ds,adapter:se.isNode?"http":"xhr",transformRequest:[function(t,r){const s=r.getContentType()||"",o=s.indexOf("application/json")>-1,n=g.isObject(t);if(n&&g.isHTMLForm(t)&&(t=new FormData(t)),g.isFormData(t))return o&&o?JSON.stringify(Cs(t)):t;if(g.isArrayBuffer(t)||g.isBuffer(t)||g.isStream(t)||g.isFile(t)||g.isBlob(t))return t;if(g.isArrayBufferView(t))return t.buffer;if(g.isURLSearchParams(t))return r.setContentType("application/x-www-form-urlencoded;charset=utf-8",!1),t.toString();let c;if(n){if(s.indexOf("application/x-www-form-urlencoded")>-1)return ka(t,this.formSerializer).toString();if((c=g.isFileList(t))||s.indexOf("multipart/form-data")>-1){const d=this.env&&this.env.FormData;return nt(c?{"files[]":t}:t,d&&new d,this.formSerializer)}}return n||o?(r.setContentType("application/json",!1),Oa(t)):t}],transformResponse:[function(t){const r=this.transitional||$t.transitional,s=r&&r.forcedJSONParsing,o=this.responseType==="json";if(t&&g.isString(t)&&(s&&!this.responseType||o)){const i=!(r&&r.silentJSONParsing)&&o;try{return JSON.parse(t)}catch(c){if(i)throw c.name==="SyntaxError"?I.from(c,I.ERR_BAD_RESPONSE,this,null,this.response):c}}return t}],timeout:0,xsrfCookieName:"XSRF-TOKEN",xsrfHeaderName:"X-XSRF-TOKEN",maxContentLength:-1,maxBodyLength:-1,env:{FormData:se.classes.FormData,Blob:se.classes.Blob},validateStatus:function(t){return t>=200&&t<300},headers:{common:{Accept:"application/json, text/plain, */*","Content-Type":void 0}}};g.forEach(["delete","get","head","post","put","patch"],e=>{$t.headers[e]={}});const Lt=$t,Aa=g.toObjectSet(["age","authorization","content-length","content-type","etag","expires","from","host","if-modified-since","if-unmodified-since","last-modified","location","max-forwards","proxy-authorization","referer","retry-after","user-agent"]),Pa=e=>{const t={};let r,s,o;return e&&e.split(`
`).forEach(function(i){o=i.indexOf(":"),r=i.substring(0,o).trim().toLowerCase(),s=i.substring(o+1).trim(),!(!r||t[r]&&Aa[r])&&(r==="set-cookie"?t[r]?t[r].push(s):t[r]=[s]:t[r]=t[r]?t[r]+", "+s:s)}),t},kr=Symbol("internals");function De(e){return e&&String(e).trim().toLowerCase()}function ze(e){return e===!1||e==null?e:g.isArray(e)?e.map(ze):String(e)}function Ra(e){const t=Object.create(null),r=/([^\s,;=]+)\s*(?:=\s*([^,;]+))?/g;let s;for(;s=r.exec(e);)t[s[1]]=s[2];return t}const Ga=e=>/^[-_a-zA-Z0-9^`|~,!#$%&'*+.]+$/.test(e.trim());function Tt(e,t,r,s,o){if(g.isFunction(s))return s.call(this,t,r);if(o&&(t=r),!!g.isString(t)){if(g.isString(s))return t.indexOf(s)!==-1;if(g.isRegExp(s))return s.test(t)}}function Fa(e){return e.trim().toLowerCase().replace(/([a-z\d])(\w*)/g,(t,r,s)=>r.toUpperCase()+s)}function Ua(e,t){const r=g.toCamelCase(" "+t);["get","set","has"].forEach(s=>{Object.defineProperty(e,s+r,{value:function(o,n,i){return this[s].call(this,t,o,n,i)},configurable:!0})})}class it{constructor(t){t&&this.set(t)}set(t,r,s){const o=this;function n(c,d,p){const m=De(d);if(!m)throw new Error("header name must be a non-empty string");const T=g.findKey(o,m);(!T||o[T]===void 0||p===!0||p===void 0&&o[T]!==!1)&&(o[T||d]=ze(c))}const i=(c,d)=>g.forEach(c,(p,m)=>n(p,m,d));return g.isPlainObject(t)||t instanceof this.constructor?i(t,r):g.isString(t)&&(t=t.trim())&&!Ga(t)?i(Pa(t),r):t!=null&&n(r,t,s),this}get(t,r){if(t=De(t),t){const s=g.findKey(this,t);if(s){const o=this[s];if(!r)return o;if(r===!0)return Ra(o);if(g.isFunction(r))return r.call(this,o,s);if(g.isRegExp(r))return r.exec(o);throw new TypeError("parser must be boolean|regexp|function")}}}has(t,r){if(t=De(t),t){const s=g.findKey(this,t);return!!(s&&this[s]!==void 0&&(!r||Tt(this,this[s],s,r)))}return!1}delete(t,r){const s=this;let o=!1;function n(i){if(i=De(i),i){const c=g.findKey(s,i);c&&(!r||Tt(s,s[c],c,r))&&(delete s[c],o=!0)}}return g.isArray(t)?t.forEach(n):n(t),o}clear(t){const r=Object.keys(this);let s=r.length,o=!1;for(;s--;){const n=r[s];(!t||Tt(this,this[n],n,t,!0))&&(delete this[n],o=!0)}return o}normalize(t){const r=this,s={};return g.forEach(this,(o,n)=>{const i=g.findKey(s,n);if(i){r[i]=ze(o),delete r[n];return}const c=t?Fa(n):String(n).trim();c!==n&&delete r[n],r[c]=ze(o),s[c]=!0}),this}concat(...t){return this.constructor.concat(this,...t)}toJSON(t){const r=Object.create(null);return g.forEach(this,(s,o)=>{s!=null&&s!==!1&&(r[o]=t&&g.isArray(s)?s.join(", "):s)}),r}[Symbol.iterator](){return Object.entries(this.toJSON())[Symbol.iterator]()}toString(){return Object.entries(this.toJSON()).map(([t,r])=>t+": "+r).join(`
`)}get[Symbol.toStringTag](){return"AxiosHeaders"}static from(t){return t instanceof this?t:new this(t)}static concat(t,...r){const s=new this(t);return r.forEach(o=>s.set(o)),s}static accessor(t){const s=(this[kr]=this[kr]={accessors:{}}).accessors,o=this.prototype;function n(i){const c=De(i);s[c]||(Ua(o,i),s[c]=!0)}return g.isArray(t)?t.forEach(n):n(t),this}}it.accessor(["Content-Type","Content-Length","Accept","Accept-Encoding","User-Agent","Authorization"]);g.reduceDescriptors(it.prototype,({value:e},t)=>{let r=t[0].toUpperCase()+t.slice(1);return{get:()=>e,set(s){this[r]=s}}});g.freezeMethods(it);const ce=it;function Et(e,t){const r=this||Lt,s=t||r,o=ce.from(s.headers);let n=s.data;return g.forEach(e,function(c){n=c.call(r,n,o.normalize(),t?t.status:void 0)}),o.normalize(),n}function Is(e){return!!(e&&e.__CANCEL__)}function je(e,t,r){I.call(this,e??"canceled",I.ERR_CANCELED,t,r),this.name="CanceledError"}g.inherits(je,I,{__CANCEL__:!0});function Da(e,t,r){const s=r.config.validateStatus;!r.status||!s||s(r.status)?e(r):t(new I("Request failed with status code "+r.status,[I.ERR_BAD_REQUEST,I.ERR_BAD_RESPONSE][Math.floor(r.status/100)-4],r.config,r.request,r))}const Ca=se.isStandardBrowserEnv?function(){return{write:function(r,s,o,n,i,c){const d=[];d.push(r+"="+encodeURIComponent(s)),g.isNumber(o)&&d.push("expires="+new Date(o).toGMTString()),g.isString(n)&&d.push("path="+n),g.isString(i)&&d.push("domain="+i),c===!0&&d.push("secure"),document.cookie=d.join("; ")},read:function(r){const s=document.cookie.match(new RegExp("(^|;\\s*)("+r+")=([^;]*)"));return s?decodeURIComponent(s[3]):null},remove:function(r){this.write(r,"",Date.now()-864e5)}}}():function(){return{write:function(){},read:function(){return null},remove:function(){}}}();function Ia(e){return/^([a-z][a-z\d+\-.]*:)?\/\//i.test(e)}function $a(e,t){return t?e.replace(/\/+$/,"")+"/"+t.replace(/^\/+/,""):e}function $s(e,t){return e&&!Ia(t)?$a(e,t):t}const La=se.isStandardBrowserEnv?function(){const t=/(msie|trident)/i.test(navigator.userAgent),r=document.createElement("a");let s;function o(n){let i=n;return t&&(r.setAttribute("href",i),i=r.href),r.setAttribute("href",i),{href:r.href,protocol:r.protocol?r.protocol.replace(/:$/,""):"",host:r.host,search:r.search?r.search.replace(/^\?/,""):"",hash:r.hash?r.hash.replace(/^#/,""):"",hostname:r.hostname,port:r.port,pathname:r.pathname.charAt(0)==="/"?r.pathname:"/"+r.pathname}}return s=o(window.location.href),function(i){const c=g.isString(i)?o(i):i;return c.protocol===s.protocol&&c.host===s.host}}():function(){return function(){return!0}}();function qa(e){const t=/^([-+\w]{1,25})(:?\/\/|:)/.exec(e);return t&&t[1]||""}function xa(e,t){e=e||10;const r=new Array(e),s=new Array(e);let o=0,n=0,i;return t=t!==void 0?t:1e3,function(d){const p=Date.now(),m=s[n];i||(i=p),r[o]=d,s[o]=p;let T=n,C=0;for(;T!==o;)C+=r[T++],T=T%e;if(o=(o+1)%e,o===n&&(n=(n+1)%e),p-i<t)return;const A=m&&p-m;return A?Math.round(C*1e3/A):void 0}}function vr(e,t){let r=0;const s=xa(50,250);return o=>{const n=o.loaded,i=o.lengthComputable?o.total:void 0,c=n-r,d=s(c),p=n<=i;r=n;const m={loaded:n,total:i,progress:i?n/i:void 0,bytes:c,rate:d||void 0,estimated:d&&i&&p?(i-n)/d:void 0,event:o};m[t?"download":"upload"]=!0,e(m)}}const ja=typeof XMLHttpRequest<"u",Na=ja&&function(e){return new Promise(function(r,s){let o=e.data;const n=ce.from(e.headers).normalize(),i=e.responseType;let c;function d(){e.cancelToken&&e.cancelToken.unsubscribe(c),e.signal&&e.signal.removeEventListener("abort",c)}g.isFormData(o)&&(se.isStandardBrowserEnv||se.isStandardBrowserWebWorkerEnv?n.setContentType(!1):n.setContentType("multipart/form-data;",!1));let p=new XMLHttpRequest;if(e.auth){const A=e.auth.username||"",w=e.auth.password?unescape(encodeURIComponent(e.auth.password)):"";n.set("Authorization","Basic "+btoa(A+":"+w))}const m=$s(e.baseURL,e.url);p.open(e.method.toUpperCase(),Us(m,e.params,e.paramsSerializer),!0),p.timeout=e.timeout;function T(){if(!p)return;const A=ce.from("getAllResponseHeaders"in p&&p.getAllResponseHeaders()),S={data:!i||i==="text"||i==="json"?p.responseText:p.response,status:p.status,statusText:p.statusText,headers:A,config:e,request:p};Da(function(P){r(P),d()},function(P){s(P),d()},S),p=null}if("onloadend"in p?p.onloadend=T:p.onreadystatechange=function(){!p||p.readyState!==4||p.status===0&&!(p.responseURL&&p.responseURL.indexOf("file:")===0)||setTimeout(T)},p.onabort=function(){p&&(s(new I("Request aborted",I.ECONNABORTED,e,p)),p=null)},p.onerror=function(){s(new I("Network Error",I.ERR_NETWORK,e,p)),p=null},p.ontimeout=function(){let w=e.timeout?"timeout of "+e.timeout+"ms exceeded":"timeout exceeded";const S=e.transitional||Ds;e.timeoutErrorMessage&&(w=e.timeoutErrorMessage),s(new I(w,S.clarifyTimeoutError?I.ETIMEDOUT:I.ECONNABORTED,e,p)),p=null},se.isStandardBrowserEnv){const A=(e.withCredentials||La(m))&&e.xsrfCookieName&&Ca.read(e.xsrfCookieName);A&&n.set(e.xsrfHeaderName,A)}o===void 0&&n.setContentType(null),"setRequestHeader"in p&&g.forEach(n.toJSON(),function(w,S){p.setRequestHeader(S,w)}),g.isUndefined(e.withCredentials)||(p.withCredentials=!!e.withCredentials),i&&i!=="json"&&(p.responseType=e.responseType),typeof e.onDownloadProgress=="function"&&p.addEventListener("progress",vr(e.onDownloadProgress,!0)),typeof e.onUploadProgress=="function"&&p.upload&&p.upload.addEventListener("progress",vr(e.onUploadProgress)),(e.cancelToken||e.signal)&&(c=A=>{p&&(s(!A||A.type?new je(null,e,p):A),p.abort(),p=null)},e.cancelToken&&e.cancelToken.subscribe(c),e.signal&&(e.signal.aborted?c():e.signal.addEventListener("abort",c)));const C=qa(m);if(C&&se.protocols.indexOf(C)===-1){s(new I("Unsupported protocol "+C+":",I.ERR_BAD_REQUEST,e));return}p.send(o||null)})},Ve={http:ha,xhr:Na};g.forEach(Ve,(e,t)=>{if(e){try{Object.defineProperty(e,"name",{value:t})}catch{}Object.defineProperty(e,"adapterName",{value:t})}});const Ls={getAdapter:e=>{e=g.isArray(e)?e:[e];const{length:t}=e;let r,s;for(let o=0;o<t&&(r=e[o],!(s=g.isString(r)?Ve[r.toLowerCase()]:r));o++);if(!s)throw s===!1?new I(`Adapter ${r} is not supported by the environment`,"ERR_NOT_SUPPORT"):new Error(g.hasOwnProp(Ve,r)?`Adapter '${r}' is not available in the build`:`Unknown adapter '${r}'`);if(!g.isFunction(s))throw new TypeError("adapter is not a function");return s},adapters:Ve};function _t(e){if(e.cancelToken&&e.cancelToken.throwIfRequested(),e.signal&&e.signal.aborted)throw new je(null,e)}function Sr(e){return _t(e),e.headers=ce.from(e.headers),e.data=Et.call(e,e.transformRequest),["post","put","patch"].indexOf(e.method)!==-1&&e.headers.setContentType("application/x-www-form-urlencoded",!1),Ls.getAdapter(e.adapter||Lt.adapter)(e).then(function(s){return _t(e),s.data=Et.call(e,e.transformResponse,s),s.headers=ce.from(s.headers),s},function(s){return Is(s)||(_t(e),s&&s.response&&(s.response.data=Et.call(e,e.transformResponse,s.response),s.response.headers=ce.from(s.response.headers))),Promise.reject(s)})}const Or=e=>e instanceof ce?e.toJSON():e;function Se(e,t){t=t||{};const r={};function s(p,m,T){return g.isPlainObject(p)&&g.isPlainObject(m)?g.merge.call({caseless:T},p,m):g.isPlainObject(m)?g.merge({},m):g.isArray(m)?m.slice():m}function o(p,m,T){if(g.isUndefined(m)){if(!g.isUndefined(p))return s(void 0,p,T)}else return s(p,m,T)}function n(p,m){if(!g.isUndefined(m))return s(void 0,m)}function i(p,m){if(g.isUndefined(m)){if(!g.isUndefined(p))return s(void 0,p)}else return s(void 0,m)}function c(p,m,T){if(T in t)return s(p,m);if(T in e)return s(void 0,p)}const d={url:n,method:n,data:n,baseURL:i,transformRequest:i,transformResponse:i,paramsSerializer:i,timeout:i,timeoutMessage:i,withCredentials:i,adapter:i,responseType:i,xsrfCookieName:i,xsrfHeaderName:i,onUploadProgress:i,onDownloadProgress:i,decompress:i,maxContentLength:i,maxBodyLength:i,beforeRedirect:i,transport:i,httpAgent:i,httpsAgent:i,cancelToken:i,socketPath:i,responseEncoding:i,validateStatus:c,headers:(p,m)=>o(Or(p),Or(m),!0)};return g.forEach(Object.keys(Object.assign({},e,t)),function(m){const T=d[m]||o,C=T(e[m],t[m],m);g.isUndefined(C)&&T!==c||(r[m]=C)}),r}const qs="1.5.0",qt={};["object","boolean","number","function","string","symbol"].forEach((e,t)=>{qt[e]=function(s){return typeof s===e||"a"+(t<1?"n ":" ")+e}});const Ar={};qt.transitional=function(t,r,s){function o(n,i){return"[Axios v"+qs+"] Transitional option '"+n+"'"+i+(s?". "+s:"")}return(n,i,c)=>{if(t===!1)throw new I(o(i," has been removed"+(r?" in "+r:"")),I.ERR_DEPRECATED);return r&&!Ar[i]&&(Ar[i]=!0,console.warn(o(i," has been deprecated since v"+r+" and will be removed in the near future"))),t?t(n,i,c):!0}};function Ba(e,t,r){if(typeof e!="object")throw new I("options must be an object",I.ERR_BAD_OPTION_VALUE);const s=Object.keys(e);let o=s.length;for(;o-- >0;){const n=s[o],i=t[n];if(i){const c=e[n],d=c===void 0||i(c,n,e);if(d!==!0)throw new I("option "+n+" must be "+d,I.ERR_BAD_OPTION_VALUE);continue}if(r!==!0)throw new I("Unknown option "+n,I.ERR_BAD_OPTION)}}const At={assertOptions:Ba,validators:qt},de=At.validators;class Je{constructor(t){this.defaults=t,this.interceptors={request:new br,response:new br}}request(t,r){typeof t=="string"?(r=r||{},r.url=t):r=t||{},r=Se(this.defaults,r);const{transitional:s,paramsSerializer:o,headers:n}=r;s!==void 0&&At.assertOptions(s,{silentJSONParsing:de.transitional(de.boolean),forcedJSONParsing:de.transitional(de.boolean),clarifyTimeoutError:de.transitional(de.boolean)},!1),o!=null&&(g.isFunction(o)?r.paramsSerializer={serialize:o}:At.assertOptions(o,{encode:de.function,serialize:de.function},!0)),r.method=(r.method||this.defaults.method||"get").toLowerCase();let i=n&&g.merge(n.common,n[r.method]);n&&g.forEach(["delete","get","head","post","put","patch","common"],w=>{delete n[w]}),r.headers=ce.concat(i,n);const c=[];let d=!0;this.interceptors.request.forEach(function(S){typeof S.runWhen=="function"&&S.runWhen(r)===!1||(d=d&&S.synchronous,c.unshift(S.fulfilled,S.rejected))});const p=[];this.interceptors.response.forEach(function(S){p.push(S.fulfilled,S.rejected)});let m,T=0,C;if(!d){const w=[Sr.bind(this),void 0];for(w.unshift.apply(w,c),w.push.apply(w,p),C=w.length,m=Promise.resolve(r);T<C;)m=m.then(w[T++],w[T++]);return m}C=c.length;let A=r;for(T=0;T<C;){const w=c[T++],S=c[T++];try{A=w(A)}catch(D){S.call(this,D);break}}try{m=Sr.call(this,A)}catch(w){return Promise.reject(w)}for(T=0,C=p.length;T<C;)m=m.then(p[T++],p[T++]);return m}getUri(t){t=Se(this.defaults,t);const r=$s(t.baseURL,t.url);return Us(r,t.params,t.paramsSerializer)}}g.forEach(["delete","get","head","options"],function(t){Je.prototype[t]=function(r,s){return this.request(Se(s||{},{method:t,url:r,data:(s||{}).data}))}});g.forEach(["post","put","patch"],function(t){function r(s){return function(n,i,c){return this.request(Se(c||{},{method:t,headers:s?{"Content-Type":"multipart/form-data"}:{},url:n,data:i}))}}Je.prototype[t]=r(),Je.prototype[t+"Form"]=r(!0)});const Ke=Je;class xt{constructor(t){if(typeof t!="function")throw new TypeError("executor must be a function.");let r;this.promise=new Promise(function(n){r=n});const s=this;this.promise.then(o=>{if(!s._listeners)return;let n=s._listeners.length;for(;n-- >0;)s._listeners[n](o);s._listeners=null}),this.promise.then=o=>{let n;const i=new Promise(c=>{s.subscribe(c),n=c}).then(o);return i.cancel=function(){s.unsubscribe(n)},i},t(function(n,i,c){s.reason||(s.reason=new je(n,i,c),r(s.reason))})}throwIfRequested(){if(this.reason)throw this.reason}subscribe(t){if(this.reason){t(this.reason);return}this._listeners?this._listeners.push(t):this._listeners=[t]}unsubscribe(t){if(!this._listeners)return;const r=this._listeners.indexOf(t);r!==-1&&this._listeners.splice(r,1)}static source(){let t;return{token:new xt(function(o){t=o}),cancel:t}}}const Ma=xt;function Ha(e){return function(r){return e.apply(null,r)}}function Wa(e){return g.isObject(e)&&e.isAxiosError===!0}const Pt={Continue:100,SwitchingProtocols:101,Processing:102,EarlyHints:103,Ok:200,Created:201,Accepted:202,NonAuthoritativeInformation:203,NoContent:204,ResetContent:205,PartialContent:206,MultiStatus:207,AlreadyReported:208,ImUsed:226,MultipleChoices:300,MovedPermanently:301,Found:302,SeeOther:303,NotModified:304,UseProxy:305,Unused:306,TemporaryRedirect:307,PermanentRedirect:308,BadRequest:400,Unauthorized:401,PaymentRequired:402,Forbidden:403,NotFound:404,MethodNotAllowed:405,NotAcceptable:406,ProxyAuthenticationRequired:407,RequestTimeout:408,Conflict:409,Gone:410,LengthRequired:411,PreconditionFailed:412,PayloadTooLarge:413,UriTooLong:414,UnsupportedMediaType:415,RangeNotSatisfiable:416,ExpectationFailed:417,ImATeapot:418,MisdirectedRequest:421,UnprocessableEntity:422,Locked:423,FailedDependency:424,TooEarly:425,UpgradeRequired:426,PreconditionRequired:428,TooManyRequests:429,RequestHeaderFieldsTooLarge:431,UnavailableForLegalReasons:451,InternalServerError:500,NotImplemented:501,BadGateway:502,ServiceUnavailable:503,GatewayTimeout:504,HttpVersionNotSupported:505,VariantAlsoNegotiates:506,InsufficientStorage:507,LoopDetected:508,NotExtended:510,NetworkAuthenticationRequired:511};Object.entries(Pt).forEach(([e,t])=>{Pt[t]=e});const za=Pt;function xs(e){const t=new Ke(e),r=ws(Ke.prototype.request,t);return g.extend(r,Ke.prototype,t,{allOwnKeys:!0}),g.extend(r,t,null,{allOwnKeys:!0}),r.create=function(o){return xs(Se(e,o))},r}const M=xs(Lt);M.Axios=Ke;M.CanceledError=je;M.CancelToken=Ma;M.isCancel=Is;M.VERSION=qs;M.toFormData=nt;M.AxiosError=I;M.Cancel=M.CanceledError;M.all=function(t){return Promise.all(t)};M.spread=Ha;M.isAxiosError=Wa;M.mergeConfig=Se;M.AxiosHeaders=ce;M.formToJSON=e=>Cs(g.isHTMLForm(e)?new FormData(e):e);M.getAdapter=Ls.getAdapter;M.HttpStatusCode=za;M.default=M;const Va=M,Ka=Va.create({timeout:3e3,baseURL:"https://mooncatcher3-1286783182.b4a.run/"}),Ja=async e=>await Ka.post("/login",e,{withCredentials:!0});var js={exports:{}};(function(e,t){(function(r,s){e.exports=s()})(Me,function(){var r=1e3,s=6e4,o=36e5,n="millisecond",i="second",c="minute",d="hour",p="day",m="week",T="month",C="quarter",A="year",w="date",S="Invalid Date",D=/^(\d{4})[-/]?(\d{1,2})?[-/]?(\d{0,2})[Tt\s]*(\d{1,2})?:?(\d{1,2})?:?(\d{1,2})?[.:]?(\d+)?$/,P=/\[([^\]]+)]|Y{1,4}|M{1,4}|D{1,2}|d{1,4}|H{1,2}|h{1,2}|a|A|m{1,2}|s{1,2}|Z{1,2}|SSS/g,R={name:"en",weekdays:"Sunday_Monday_Tuesday_Wednesday_Thursday_Friday_Saturday".split("_"),months:"January_February_March_April_May_June_July_August_September_October_November_December".split("_"),ordinal:function(G){var b=["th","st","nd","rd"],_=G%100;return"["+G+(b[(_-20)%10]||b[_]||b[0])+"]"}},j=function(G,b,_){var O=String(G);return!O||O.length>=b?G:""+Array(b+1-O.length).join(_)+G},te={s:j,z:function(G){var b=-G.utcOffset(),_=Math.abs(b),O=Math.floor(_/60),y=_%60;return(b<=0?"+":"-")+j(O,2,"0")+":"+j(y,2,"0")},m:function G(b,_){if(b.date()<_.date())return-G(_,b);var O=12*(_.year()-b.year())+(_.month()-b.month()),y=b.clone().add(O,T),F=_-y<0,U=b.clone().add(O+(F?-1:1),T);return+(-(O+(_-y)/(F?y-U:U-y))||0)},a:function(G){return G<0?Math.ceil(G)||0:Math.floor(G)},p:function(G){return{M:T,y:A,w:m,d:p,D:w,h:d,m:c,s:i,ms:n,Q:C}[G]||String(G||"").toLowerCase().replace(/s$/,"")},u:function(G){return G===void 0}},Y="en",Q={};Q[Y]=R;var fe=function(G){return G instanceof Ee},Te=function G(b,_,O){var y;if(!b)return Y;if(typeof b=="string"){var F=b.toLowerCase();Q[F]&&(y=F),_&&(Q[F]=_,y=F);var U=b.split("-");if(!y&&U.length>1)return G(U[0])}else{var L=b.name;Q[L]=b,y=L}return!O&&y&&(Y=y),y||!O&&Y},N=function(G,b){if(fe(G))return G.clone();var _=typeof b=="object"?b:{};return _.date=G,_.args=arguments,new Ee(_)},$=te;$.l=Te,$.i=fe,$.w=function(G,b){return N(G,{locale:b.$L,utc:b.$u,x:b.$x,$offset:b.$offset})};var Ee=function(){function G(_){this.$L=Te(_.locale,null,!0),this.parse(_)}var b=G.prototype;return b.parse=function(_){this.$d=function(O){var y=O.date,F=O.utc;if(y===null)return new Date(NaN);if($.u(y))return new Date;if(y instanceof Date)return new Date(y);if(typeof y=="string"&&!/Z$/i.test(y)){var U=y.match(D);if(U){var L=U[2]-1||0,x=(U[7]||"0").substring(0,3);return F?new Date(Date.UTC(U[1],L,U[3]||1,U[4]||0,U[5]||0,U[6]||0,x)):new Date(U[1],L,U[3]||1,U[4]||0,U[5]||0,U[6]||0,x)}}return new Date(y)}(_),this.$x=_.x||{},this.init()},b.init=function(){var _=this.$d;this.$y=_.getFullYear(),this.$M=_.getMonth(),this.$D=_.getDate(),this.$W=_.getDay(),this.$H=_.getHours(),this.$m=_.getMinutes(),this.$s=_.getSeconds(),this.$ms=_.getMilliseconds()},b.$utils=function(){return $},b.isValid=function(){return this.$d.toString()!==S},b.isSame=function(_,O){var y=N(_);return this.startOf(O)<=y&&y<=this.endOf(O)},b.isAfter=function(_,O){return N(_)<this.startOf(O)},b.isBefore=function(_,O){return this.endOf(O)<N(_)},b.$g=function(_,O,y){return $.u(_)?this[O]:this.set(y,_)},b.unix=function(){return Math.floor(this.valueOf()/1e3)},b.valueOf=function(){return this.$d.getTime()},b.startOf=function(_,O){var y=this,F=!!$.u(O)||O,U=$.p(_),L=function(Z,z){var re=$.w(y.$u?Date.UTC(y.$y,z,Z):new Date(y.$y,z,Z),y);return F?re:re.endOf(p)},x=function(Z,z){return $.w(y.toDate()[Z].apply(y.toDate("s"),(F?[0,0,0,0]:[23,59,59,999]).slice(z)),y)},B=this.$W,H=this.$M,J=this.$D,ae="set"+(this.$u?"UTC":"");switch(U){case A:return F?L(1,0):L(31,11);case T:return F?L(1,H):L(0,H+1);case m:var oe=this.$locale().weekStart||0,le=(B<oe?B+7:B)-oe;return L(F?J-le:J+(6-le),H);case p:case w:return x(ae+"Hours",0);case d:return x(ae+"Minutes",1);case c:return x(ae+"Seconds",2);case i:return x(ae+"Milliseconds",3);default:return this.clone()}},b.endOf=function(_){return this.startOf(_,!1)},b.$set=function(_,O){var y,F=$.p(_),U="set"+(this.$u?"UTC":""),L=(y={},y[p]=U+"Date",y[w]=U+"Date",y[T]=U+"Month",y[A]=U+"FullYear",y[d]=U+"Hours",y[c]=U+"Minutes",y[i]=U+"Seconds",y[n]=U+"Milliseconds",y)[F],x=F===p?this.$D+(O-this.$W):O;if(F===T||F===A){var B=this.clone().set(w,1);B.$d[L](x),B.init(),this.$d=B.set(w,Math.min(this.$D,B.daysInMonth())).$d}else L&&this.$d[L](x);return this.init(),this},b.set=function(_,O){return this.clone().$set(_,O)},b.get=function(_){return this[$.p(_)]()},b.add=function(_,O){var y,F=this;_=Number(_);var U=$.p(O),L=function(H){var J=N(F);return $.w(J.date(J.date()+Math.round(H*_)),F)};if(U===T)return this.set(T,this.$M+_);if(U===A)return this.set(A,this.$y+_);if(U===p)return L(1);if(U===m)return L(7);var x=(y={},y[c]=s,y[d]=o,y[i]=r,y)[U]||1,B=this.$d.getTime()+_*x;return $.w(B,this)},b.subtract=function(_,O){return this.add(-1*_,O)},b.format=function(_){var O=this,y=this.$locale();if(!this.isValid())return y.invalidDate||S;var F=_||"YYYY-MM-DDTHH:mm:ssZ",U=$.z(this),L=this.$H,x=this.$m,B=this.$M,H=y.weekdays,J=y.months,ae=y.meridiem,oe=function(z,re,pe,_e){return z&&(z[re]||z(O,F))||pe[re].slice(0,_e)},le=function(z){return $.s(L%12||12,z,"0")},Z=ae||function(z,re,pe){var _e=z<12?"AM":"PM";return pe?_e.toLowerCase():_e};return F.replace(P,function(z,re){return re||function(pe){switch(pe){case"YY":return String(O.$y).slice(-2);case"YYYY":return $.s(O.$y,4,"0");case"M":return B+1;case"MM":return $.s(B+1,2,"0");case"MMM":return oe(y.monthsShort,B,J,3);case"MMMM":return oe(J,B);case"D":return O.$D;case"DD":return $.s(O.$D,2,"0");case"d":return String(O.$W);case"dd":return oe(y.weekdaysMin,O.$W,H,2);case"ddd":return oe(y.weekdaysShort,O.$W,H,3);case"dddd":return H[O.$W];case"H":return String(L);case"HH":return $.s(L,2,"0");case"h":return le(1);case"hh":return le(2);case"a":return Z(L,x,!0);case"A":return Z(L,x,!1);case"m":return String(x);case"mm":return $.s(x,2,"0");case"s":return String(O.$s);case"ss":return $.s(O.$s,2,"0");case"SSS":return $.s(O.$ms,3,"0");case"Z":return U}return null}(z)||U.replace(":","")})},b.utcOffset=function(){return 15*-Math.round(this.$d.getTimezoneOffset()/15)},b.diff=function(_,O,y){var F,U=this,L=$.p(O),x=N(_),B=(x.utcOffset()-this.utcOffset())*s,H=this-x,J=function(){return $.m(U,x)};switch(L){case A:F=J()/12;break;case T:F=J();break;case C:F=J()/3;break;case m:F=(H-B)/6048e5;break;case p:F=(H-B)/864e5;break;case d:F=H/o;break;case c:F=H/s;break;case i:F=H/r;break;default:F=H}return y?F:$.a(F)},b.daysInMonth=function(){return this.endOf(T).$D},b.$locale=function(){return Q[this.$L]},b.locale=function(_,O){if(!_)return this.$L;var y=this.clone(),F=Te(_,O,!0);return F&&(y.$L=F),y},b.clone=function(){return $.w(this.$d,this)},b.toDate=function(){return new Date(this.valueOf())},b.toJSON=function(){return this.isValid()?this.toISOString():null},b.toISOString=function(){return this.$d.toISOString()},b.toString=function(){return this.$d.toUTCString()},G}(),Ge=Ee.prototype;return N.prototype=Ge,[["$ms",n],["$s",i],["$m",c],["$H",d],["$W",p],["$M",T],["$y",A],["$D",w]].forEach(function(G){Ge[G[1]]=function(b){return this.$g(b,G[0],G[1])}}),N.extend=function(G,b){return G.$i||(G(b,Ee,N),G.$i=!0),N},N.locale=Te,N.isDayjs=fe,N.unix=function(G){return N(1e3*G)},N.en=Q[Y],N.Ls=Q,N.p={},N})})(js);var Ya=js.exports;const Be=Ye(Ya),Ns=X.createContext(void 0),gc=e=>{const[t,r]=X.useState(""),[s,o]=X.useState(""),[n,i]=X.useState(!1),[c,d]=X.useState({}),[p,m]=X.useState(),T=X.useRef();X.useEffect(()=>{const S=Jt(Qt),D=Jt(pt),P=localStorage.getItem(Yt);P&&S&&D?(i(!0),Ja({code:S,state:D,authkey:JSON.parse(P)}).then(R=>{R.data.status?o(R.data.msg):r(R.data.token)}).catch(R=>{o(R.message)})):o("未登录")},[]),X.useEffect(()=>{if(t){const S=new _s({auth:t});S.request("GET /user",{headers:{"X-GitHub-Api-Version":"2022-11-28"}}).then(D=>{d(D.data),i(!1),o("")}).catch(D=>{o(D.message)}),m(S)}},[t]);const C=X.useCallback(()=>{Ne(Qt,"",{expires:Be().add(-1,"day").toDate().toUTCString()}),Ne(pt,"",{expires:Be().add(-1,"day").toDate().toUTCString()}),Ne(Yt,"",{expires:Be().add(-1,"day").toDate().toUTCString()}),m(void 0),d({})},[]),A=X.useCallback(S=>{const D=Ks(Math.floor(Math.random()*10+12));Ne(pt,D,{expires:Be().add(3,"day").toDate().toUTCString()});const P={client_id:"230d10a766b329d1d0ce",login:S??"",scope:"repo,user",state:D,redirect_uri:"https://moon-catcher.github.io/auth"};i(!0),o("");const R=window.open(`https://github.com/login/oauth/authorize?${Object.entries(P).map(([j,te])=>`${j}=${te}`).join("&")}&tokfn=${D}`,"_blank","height=600, width=500, left=800,top=100, location=false");window[`${D}`]=j=>{clearInterval(T.current),r(j),i(!1),o(""),delete window[`${D}`],R==null||R.close()},R&&(T.current=setInterval(function(){R!=null&&R.closed&&(clearInterval(T.current),i(!1),o("取消登录"),delete window[`${D}`])},1e3))},[]),w=X.useMemo(()=>({token:t,octokit:p,userInfo:c,loading:n,login:A,logout:C,error:s,setToken:r,setUserInfo:d}),[t,p,c,n,A,C,s]);return Vs.jsx(Ns.Provider,{value:w,children:e.children})};function mc(){const e=X.useContext(Ns);if(!e)throw new Error("请在AuthProvider中使用useAuth");return e}export{gc as A,Yt as C,nc as G,Za as L,Ka as a,oc as b,tc as c,Be as d,ec as e,rc as f,Jt as g,sc as h,Qt as i,pt as j,Ne as s,mc as u};
